{"version":3,"file":"static/js/259.eae64296.chunk.js","mappings":"2dAiBA,MAQaA,EAAsBC,IAAqC,IAApC,MAAEC,EAAK,YAAEC,KAAgBC,GAAMH,EAC/D,MAAMI,GAAMC,EAAAA,EAAAA,MACNC,GAAgBC,EAAAA,EAAAA,UAAQ,KACnB,CACHC,KAAM,WACNC,MAAOP,EAAYO,SAExB,CAACP,EAAYO,QACVC,GAAkBC,EAAAA,EAAAA,IAAmBT,EAAYO,QAIhDG,EAAoBC,IAAyBC,EAAAA,EAAAA,UAASZ,IACrDa,KAAMC,IAA4BC,EAAAA,EAAAA,IAA2BX,IACrEY,EAAAA,EAAAA,YAAU,KACFF,GACAG,EAAmBH,EAAwB,GAAGR,KAClD,GACD,CAACQ,IACJ,MAAOI,EAAoBD,IAAsBL,EAAAA,EAAAA,YAC3CO,GAAaC,EAAAA,EAAAA,GAAoB,CACnCC,UAAWpB,EAAKoB,UAChBC,OAAQZ,EACRX,QACAwB,WAAYL,IAEVM,GAAWC,EAAAA,EAAAA,GAAgB,CAC7BJ,UAAWpB,EAAKoB,UAChBC,OAAQZ,EACRX,QACAoB,WAAYA,EAAWN,KACvBU,WAAYL,IAEVQ,GAAeC,EAAAA,EAAAA,GAAW3B,EAAYO,QACtCqB,EAAAA,EAAAA,GAAwB5B,EAAYO,MAAMsB,cAC1CC,EACAC,EAAoBL,IAAiBM,EAAAA,GAAUH,SACjD9B,GACuB,YAAvBmB,IACAS,EAAAA,EAAAA,GAAW3B,EAAYO,QACvBC,EACEyB,GAAiBC,EAAAA,EAAAA,UAAS,CAC5B,6BACAN,EAAAA,EAAAA,GAAwB5B,EAAYO,MAAMsB,WAC3CM,UACC,MAAMC,QAAiB,IAAIC,EAAAA,IAASnC,EAAIoC,UAAUC,SAAS,CACvDC,OAAQ,CAACd,GACTe,WAAY,CAAC,SAEjB,OAAOC,OAAOC,OAAOP,EAASQ,OAAO,GAAGC,OAAOC,GAAG,GACnD,CACCC,UAAWhB,IAef,OAbAf,EAAAA,EAAAA,YAAU,KACN,IAAKe,EACD,OAAOpB,EAAsBX,GAEjC,IAAKiC,EAAepB,KAChB,OAEJ,MAAMmC,EApEgBC,EAAC1C,EAAO0B,KAClC,MAAMiB,EAAI3C,EAAM4C,KAAOC,EAAAA,GAAeD,GAAK,GAAM,GAC3CE,GAAiBC,EAAAA,EAAAA,IAAgB,IAAIC,EAAAA,EAAUC,EAAAA,EAAcC,qBAAqBC,aACnFC,aAAa,KACbC,IAAIV,GACJU,IAAI3B,GACT,OAAO4B,EAAAA,EAAYC,mBAAmB,CAAEvD,MAAOA,EAAOe,OAAQ+B,GAAiB,EA8D/DJ,CAAsBjD,EAAYO,MAAO0B,EAAepB,MACpEF,EAAsB,IAAIkD,EAAAA,EAAY,CAClCtD,MAAOP,EAAYO,MACnBwD,UAAWvD,EAAgBwD,MAAMhB,EAAIe,aACtC,GACJ,CAAChE,EAAOC,EAAakB,EAAmC,OAAfV,QAAe,IAAfA,OAAe,EAAfA,EAAiByD,QAAQ,MAC7DC,EAAAA,EAAAA,KAAKC,EAAAA,GAAa,CAAEhD,WAAYA,KAAeK,KAAavB,EAAMD,YAAaU,EAAoBQ,mBAAoBA,EAAoBD,mBAAoBA,EAAoBH,wBAAyBA,GAA0B,E,uGCxFlP,MAAMsD,EAAgBC,EAAAA,GAAOC,MAAKC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mfASrBC,GAASA,EAAMC,MAAMC,cAgBrBC,EAAWC,EAAAA,YAAiB,CAAA/E,EAAiCgF,KAAQ,IAAxC,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,GAAWnF,EACpE,OAAQoE,EAAAA,EAAAA,KAAKE,EAAe,CAAEc,aAAc,MAAO/B,GAAI,WAAY,cAAe,eAAgB2B,IAAKA,EAAKK,MAAO,CAC3GC,SAAU,GAAFC,OAAKJ,EAAUK,KAAI,MAC3BC,MAAO,GAAFF,OAAKJ,EAAUM,MAAK,OAC1BC,UAAW,UAAWlF,KAAM,OAAQyE,MAAOA,EAAOU,SAAUC,IAC3DV,EAASU,EAAMC,OAAOZ,MAAM,GAC5B,IAEZH,EAASgB,YAAc,W,4DC1BvB,MAAMC,GAAaxB,EAAAA,GAAOT,IAAGW,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HACXC,GAASA,EAAMC,MAAMoB,2BAClBrB,GAASA,EAAMC,MAAMqB,eAKpCC,GAAkB3B,EAAAA,GAAO4B,KAAIC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,yEACtBC,GAASA,EAAMC,MAAMyB,gBAI5BC,GAAa/B,EAAAA,GAAOgC,IAAGC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,wEACRC,GAASA,EAAMC,MAAM6B,aAIpCC,GAAYnC,EAAAA,GAAOT,IAAG6C,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,0FAMtBkC,IAASrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAauC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,gFACfC,GAASA,EAAMC,MAAMmC,gBAI5BC,GAAOzC,EAAAA,GAAO4B,KAAIc,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,0EAEXC,GAASA,EAAMC,MAAMsC,aAG5BC,GAAgBnH,IAAmD,IAAAoH,EAAA,IAAlD,QAAEC,EAAO,OAAEC,EAAM,QAAEC,EAAO,UAAEC,EAAS,KAAEC,GAAMzH,EAChE,MAAM0H,GAASC,EAAAA,EAAAA,MACT3C,GAAM4C,EAAAA,EAAAA,QAAO,MAQnB,OAPA1G,EAAAA,EAAAA,YAAU,KACW,IAAA2G,EAAb7C,EAAI8C,UACqB,QAAzBD,EAAA7C,EAAI8C,QAAQC,qBAAa,IAAAF,GAAe,QAAfA,EAAzBA,EAA2BE,qBAAa,IAAAF,GAAxCA,EAA0CG,eAAe,CACrDC,SAAU,WAElB,GACD,CAACjD,KACIkD,EAAAA,EAAAA,MAAMC,GAAAA,GAAW,CAAEC,QAAQ,EAAOC,UAAU,EAAMC,SAAU,EAAClE,EAAAA,EAAAA,KAAKmE,GAAAA,GAAU,CAAEF,UAAU,EAAMG,QAASA,KAC/FhB,EAAUiB,EAAAA,EAAezF,KACzBqE,GAAS,EACViB,UAAUJ,EAAAA,EAAAA,MAAMQ,GAAAA,GAAiB,CAAEJ,SAAU,EAACJ,EAAAA,EAAAA,MAAMxB,GAAW,CAAE4B,SAAU,EAAClE,EAAAA,EAAAA,KAAKkC,GAAY,CAAEqC,IAAK,kDAAmDvE,EAAAA,EAAAA,KAAKwE,EAAAA,GAAQ,CAAEN,SAAUG,EAAAA,EAAezF,OAAQoB,EAAAA,EAAAA,KAAKwC,GAAQ,CAAE0B,SAAUZ,EAAoB,QAAdN,EAAK,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,eAAO,IAAAzB,EAAAA,EAAI,QAAWqB,EAAAA,EAAezF,MAAQsE,GAAUlD,EAAAA,EAAAA,KAAK4C,GAAM,CAAEsB,UAAUlE,EAAAA,EAAAA,KAAK0E,EAAAA,GAAU,CAAC,UAAS9G,OAAkBuF,EAAQwB,SAASC,KAAIC,IACtX7E,EAAAA,EAAAA,KAAKmE,GAAAA,GAAU,CAAEF,UAAU,EAAMG,QAASA,KAC1ChB,EAAUyB,EAAK3B,OAAOvF,SACtBsF,GAAS,EACViB,UAAUJ,EAAAA,EAAAA,MAAMQ,GAAAA,GAAiB,CAAEJ,SAAU,EAACJ,EAAAA,EAAAA,MAAMxB,GAAW,CAAE4B,SAAU,EAAClE,EAAAA,EAAAA,KAAKkC,GAAY,CAAEqC,IAAKM,EAAK3B,OAAO4B,SAAU9E,EAAAA,EAAAA,KAAKwE,EAAAA,GAAQ,CAAEN,SAAUW,EAAK3B,OAAO6B,UAAW/E,EAAAA,EAAAA,KAAKwC,GAAQ,CAAE0B,SAAUZ,EAAOuB,EAAKJ,QAASI,EAAK3B,OAAO8B,eAAkBH,EAAK3B,OAAOvF,UAAYuF,GAAUlD,EAAAA,EAAAA,KAAK4C,GAAM,CAAEhC,IAAKA,EAAKsD,UAAUlE,EAAAA,EAAAA,KAAK0E,EAAAA,GAAU,CAAC,UAAS9G,MAAiBiH,EAAK3B,OAAOvF,aACpX,EAELsH,GAAcC,IAA0C,IAAzC,OAAEhC,EAAM,QAAEC,EAAO,UAAEC,EAAS,KAAEC,GAAM6B,EAC5D,OAAQlF,EAAAA,EAAAA,KAAKmF,EAAAA,GAAU,CAAEC,QAAQ,EAAMC,QAASpC,IAAYjD,EAAAA,EAAAA,KAAK+C,GAAe,CAAEM,KAAMA,EAAMJ,QAASA,EAASC,OAAQA,EAAQC,QAASA,EAASC,UAAWA,IAAec,UAAUJ,EAAAA,EAAAA,MAAMnC,GAAY,CAAEuC,SAAU,EAAClE,EAAAA,EAAAA,KAAKwE,EAAAA,GAAQ,CAAEN,UAAUoB,EAAAA,EAAAA,IAAgBpC,EAAQC,MAAanD,EAAAA,EAAAA,KAAK8B,GAAiB,CAAEoC,UAAUlE,EAAAA,EAAAA,KAAKuF,EAAAA,GAAU,CAAC,SAAY,E,gBC7D9U,MAAMC,GAAoBA,CAAC5E,EAAK6E,KACnC,MAAM,IAAEC,EAAG,WAAEC,IAAeC,EAAAA,EAAAA,OAC5B9I,EAAAA,EAAAA,YAAU,KACN,IAAK4I,EACD,OACJ,MAAMG,EAASC,OAAOC,YACtB,SAASC,IACL,MAAMC,EAASrF,EAAI8C,QACnB,IAAKuC,EACD,OACJ,MAAMpF,EAAQgF,EAASK,KAAKL,OAAS,GAC/BM,EAASR,EAAaS,KAAKC,IAAI,GAAIxF,GAASA,EAClDoF,EAAOhF,MAAMkF,OAAS,GAAHhF,OAAMgF,EAAM,MAC/B,MAAMG,EAAcF,KAAKG,IAAIL,KAAKL,OAAS,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAI,KACnFJ,EAAS/B,UACT+B,EAAS/B,QAAQzC,MAAM4E,OAAS,GAAH1E,OAAMmF,EAAW,MAEtD,CAaA,MAAME,EAAWV,OAAOW,eAKxB,OAJID,IACAE,YAAW,IAAMV,EAAcW,KAAKH,IAAW,KAC/CA,EAASI,iBAAiB,SAAUZ,IAEjC,MAjBP,WACI,MAAMQ,EAAWV,OAAOW,eACpBD,GACAA,EAASK,oBAAoB,SAAUb,GAE3CU,YAAW,KACP,MAAMT,EAASrF,EAAI8C,QACduC,IAELA,EAAOhF,MAAMkF,OAAS,KAAI,GAElC,CAOIW,EAAa,CAChB,GACF,CAAClG,EAAI8C,QAAS+B,EAAS/B,SAAS,EAE1BqD,GAAc,CAAE3F,KAAM,GAAIC,MAAO,I,gBCpC9C,SAAS2F,GAAoBnG,GACzB,OAAOA,EAAMoG,SAAS,CAClBC,gBAAgBC,EAAAA,GAAAA,MAChBC,kBAAkBC,EAAAA,GAAAA,OAE1B,CACO,MAAMC,GAAqBA,CAACC,EAAOC,KACtC,MAAM,KAAEC,EAAI,QAAEpC,GAAYmC,EAC1B,OAAQC,GACJ,IAAK,SACD,MAAO,CACHC,WAAY,IACZC,UAAW,IAAItI,EAAAA,EAAU,GACzBuI,MAAOvC,EAAQuC,MACfC,QAAQ,EACRhM,OAAO,GAEf,IAAK,MACD,QAAuB+B,IAAnByH,EAAQ1G,OAAsB,CAC9B,MAAMmJ,EAAYzC,EAAQxE,MACrBpB,aAAa4F,EAAQ1G,QACrBoJ,cAAc,EAAG1I,EAAAA,EAAU2I,aAChC,MAAO,IACAT,EACHG,WAAYV,GAAoBO,EAAMM,OAASC,EAAYzC,EAAQxE,OACnEiH,UAAWA,EACXH,UAAWtC,EAAQxE,MACnBhF,OAAQ0L,EAAM1L,MAEtB,CAEI,MAAO,IACA0L,EACHG,WAAYV,GAAoB3B,EAAQxE,OACxC8G,UAAWtC,EAAQxE,MACnBhF,OAAQ0L,EAAM1L,OAI1B,IAAK,QAAS,KAAAoM,EAAAC,EACV,MAAMlD,EAAWuC,EAAMM,OAAS,EAAIN,EAAMK,MAAM5C,SAChD,IAAI0C,GAAaS,EAAAA,EAAAA,IAA6B9C,EAAQxE,QACjDuH,EAAAA,EAAAA,IAAgBV,EAAY1C,KAC7B0C,EAAaH,EAAMG,aAEnBW,EAAAA,EAAAA,IAAUX,KACVA,GAAaY,EAAAA,EAAAA,IAAgBZ,IAEjC,MAAMa,GAAcC,EAAAA,EAAAA,IAAiBd,GAC/BC,EAAYJ,EAAMM,OAASU,EAAY7I,IAAkB,QAAfuI,EAAC5C,EAAQ1G,cAAM,IAAAsJ,EAAAA,EAAI,GAAKM,EAClET,EAAYP,EAAMM,OAClBU,EACAA,EAAY9I,aAA2B,QAAfyI,EAAC7C,EAAQ1G,cAAM,IAAAuJ,EAAAA,EAAI,GACjD,MAAO,IACAX,EACHG,aACAC,YACAG,YACAjM,OAAO,EAEf,CACA,IAAK,QAAS,CACV,IAAKwJ,EAAQ1G,OACT,OAAO4I,EACX,MAAMO,EAAYP,EAAMI,UACnBlI,aAAa4F,EAAQ1G,QACrBoJ,cAAc,EAAG1I,EAAAA,EAAU2I,aAChC,MAAO,IACAT,EACHO,YAER,CACA,IAAK,SAAU,KAAAW,EAAAC,EACX,MAAMhB,EAAaV,GAAoBO,EAAMM,OACvCN,EAAMI,UAAUI,cAAcR,EAAMK,MAAM5C,SAAU3F,EAAAA,EAAU2I,aACN,QADkBS,EAC3D,QAD2DC,EAC1EnB,EAAMO,iBAAS,IAAAY,OAAA,EAAfA,EAAiBX,cAAc,EAAG1I,EAAAA,EAAU2I,oBAAY,IAAAS,EAAAA,EAAI,IAAIpJ,EAAAA,EAAU,IAChF,MAAO,IACAkI,EACHG,aACAG,QAASN,EAAMM,OAEvB,CACA,QACI,OAAON,EACf,ECrESoB,GAAa/M,IAAsG,IAArG,UAAEuB,EAAS,QAAE8F,EAAO,OAAE2F,EAAM,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,EAAU,YAAEC,EAAW,mBAAEC,GAAoBrN,EACvH,MAAM,EAAEsN,IAAMC,EAAAA,EAAAA,MACRC,GAAMC,EAAAA,EAAAA,MACN,WAAE1D,EAAU,KAAE2D,IAAS1D,EAAAA,EAAAA,MACvB2D,EAAapM,EAAUQ,QAAQ4L,WAE/BC,GADcC,EAAAA,EAAAA,MAC6BR,GACzCtM,KAAMwG,IAAYuG,EAAAA,EAAAA,OAClB/M,KAAM0G,IAASsG,EAAAA,EAAAA,OAChBC,EAAaC,IAAYC,EAAAA,EAAAA,YAAWxC,GD8DdyC,EAACjB,EAAUS,KAAe,IAAAS,EAAAC,EAAAC,EAAAC,EACvD,MAAMtC,EAAyB,QAAnBmC,EAAW,OAARlB,QAAQ,IAARA,OAAQ,EAARA,EAAUjB,cAAM,IAAAmC,GAAAA,EAC/B,MAAO,CACHtC,WAAgC,QAAtBuC,EAAU,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUpB,kBAAU,IAAAuC,EAAAA,EAC5BjD,IAAqBa,EAAiB,OAARiB,QAAQ,IAARA,OAAQ,EAARA,EAAUhB,UAAoB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUnB,YAAc,IAAItI,EAAAA,EAAU,IAC9FsI,UAA8B,QAArBuC,EAAU,OAARpB,QAAQ,IAARA,OAAQ,EAARA,EAAUnB,iBAAS,IAAAuC,EAAAA,EAAI,IAAI7K,EAAAA,EAAU,GAChDyI,UAAmB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUhB,UACrBF,OAAe,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUlB,SAAU2B,IAAea,EAAAA,EAAgBxL,IAAMd,EAAAA,GAAYuM,EAAAA,IAC5ExC,SACAhM,MAAsB,QAAjBsO,EAAU,OAARrB,QAAQ,IAARA,OAAQ,EAARA,EAAUjN,aAAK,IAAAsO,GAAAA,EACzB,ECxE8DJ,CAAkBjB,EAAUS,KACnF5M,KAAM2N,EAAWC,UAAWC,IAAgBC,EAAAA,EAAAA,IDyEtBb,IACvBA,EAAYhC,MAAM2B,aAAea,EAAAA,EAAgBM,KAClDd,EAAYhC,MAAM7C,QAClB4F,EAAAA,EAAAA,IAAiBf,EAAYhC,MAAO,CAAEgD,cAAc,IC5EEC,CAAkBjB,KACtEjN,KAAM8H,EAAS8F,UAAWO,IAAmBC,EAAAA,EAAAA,IAAoBnB,EAAYhC,OAC/EhH,GAAM4C,EAAAA,EAAAA,QAAO,MACbwH,GAAWxH,EAAAA,EAAAA,QAAO,MAClByH,GAAYzH,EAAAA,EAAAA,QAAO,MACzBgC,GAAkByF,EAAWD,GFoBGE,EAACtK,EAAKgH,MACtC9K,EAAAA,EAAAA,YAAU,KACN,MAAMqO,EAAUzE,YAAW,KACnB9F,EAAI8C,SACJ9C,EAAI8C,QAAQ0H,OAChB,GACD,KACH,MAAO,KACHC,aAAaF,EAAQ,CACxB,GACF,CAACvK,EAAI8C,QAASkE,GAAO,EE7BxBsD,CAAqBtK,EAAKgJ,EAAYhC,OACtC,MAAO1G,EAAUoK,IAAe5O,EAAAA,EAAAA,UAASqK,KACzCwE,EAAAA,EAAAA,kBAAgB,KACRP,EAAStH,SACT4H,EFEgBE,EAAC3K,EAAO4K,KAChC,MAAMpF,EAAMoF,EAAOC,YACnB,IAAItK,EAAO2F,GAAY3F,KACnBC,GAAQsK,EAAAA,GAAAA,GAAa9K,EAAO,OAAFM,OAASC,EAAI,oBAC3C,KAAOgF,KAAKwF,MAAMvK,GAASgF,EAAM,KAC7BjF,EAAOgF,KAAKC,IAAI,EAAGjF,EAAO,GAC1BC,GAAQsK,EAAAA,GAAAA,GAAa9K,EAAO,OAAFM,OAASC,EAAI,oBAE3C,MAAO,CACHC,MAAO+E,KAAKC,IAAID,KAAKwF,MAAMvK,GAAS,EAAkB,EAAfR,EAAMgL,OAAY,IACzDzK,KAAMA,EACT,EEbmBoK,CAAa5B,EAAYlC,WAAYsD,EAAStH,SAC9D,GACD,CAACsH,EAAStH,QAASkG,EAAYlC,cAClC5K,EAAAA,EAAAA,YAAU,KACN+M,EAAS,CAAEpC,KAAM,QAASpC,QAAS,CAAE1G,OAAiB,OAAT2L,QAAS,IAATA,OAAS,EAATA,EAAW3L,SAAW,GACpE,CAACkL,EAAUS,IACd,MAAMwB,GAAaC,EAAAA,EAAAA,cAAY,KAC3BlC,EAAS,CAAEpC,KAAM,SAAUpC,aAASzH,GAAY,GACjD,IACGoO,GAAUD,EAAAA,EAAAA,cAAalL,IACzBgJ,EAAS,CAAEpC,KAAM,QAASpC,QAAS,CAAExE,QAAOlC,OAAiB,OAAT2L,QAAS,IAATA,OAAS,EAATA,EAAW3L,SAAW,GAC3E,CAACkL,EAAUS,IACR2B,GAAQF,EAAAA,EAAAA,cAAY,KACtBlC,EAAS,CACLpC,KAAM,MACNpC,QAAS,CAAExE,MAAO4D,EAAQtF,eAAgBR,OAAiB,OAAT2L,QAAS,IAATA,OAAS,EAATA,EAAW3L,SAC/D,GACH,CAACkL,EAAUpF,EAAS6F,IACjB4B,GAAWH,EAAAA,EAAAA,cAAapO,IACrBwF,GAEL0G,EAAS,CACLpC,KAAM,SACNpC,QAAS,CAAEuC,OAAOuE,EAAAA,EAAAA,IAAiBxO,EAASwF,KAC9C,GACH,CAAC0G,EAAU1G,IACRiJ,EAAY3H,EAAQtF,eAAeW,MAAM8J,EAAYjC,WACrD0E,GAAgBD,EAAUE,IAAI,GAC9BC,IAAUpQ,EAAAA,EAAAA,UAAQ,IACZkQ,KACJhE,EAAAA,EAAAA,IAAUuB,EAAYlC,cACtBc,EAAAA,EAAAA,IAAiBoB,EAAYlC,YAAY8E,cAAc,IAC5D,CAACH,GAAezC,EAAYlC,aACzB+E,IAAaV,EAAAA,EAAAA,cAAY,KAC3BnD,EAAOgB,EAAY,GACpB,CAAChB,EAAQgB,IACN8C,IAAeX,EAAAA,EAAAA,cAAY,KACzBQ,GACA1D,EAAUe,GAGVR,EAAIuD,mBAAmB,QAC3B,GACD,CAACJ,GAAS1D,EAAWe,EAAaR,IAMrC,OAAQtF,EAAAA,EAAAA,MAAM8I,EAAAA,GAAiB,CAAEC,SALhB5O,UACb6O,EAAEC,kBACFD,EAAEE,iBACFN,IAAc,EAEmC/G,WAAYA,EAAYzB,SAAU,EAAEsF,IAA8BxJ,EAAAA,EAAAA,KAAKiN,EAAAA,GAA0B,CAAE/I,UAAUlE,EAAAA,EAAAA,KAAKkN,EAAAA,GAAoB,CAAEhJ,UAAUlE,EAAAA,EAAAA,KAAKgJ,EAAa,CAAE/F,QAASA,EAAS2F,OAAQ6D,GAAYvI,UAAUJ,EAAAA,EAAAA,MAAMqJ,EAAAA,GAAU,CAAEjJ,SAAU,CAACgF,EAAE,6BAA6BkE,QAAQ,UAAW,KAAKpN,EAAAA,EAAAA,KAAKqN,EAAAA,GAAe,CAAElQ,UAAWA,KAAc6C,EAAAA,EAAAA,KAAKsN,EAAAA,GAAkB,CAAEnQ,UAAWA,cAA4B2G,EAAAA,EAAAA,MAAMyJ,EAAAA,GAAa,CAAE3M,IAAKoK,EAAU9G,SAAU,EAAClE,EAAAA,EAAAA,KAAKwN,EAAAA,GAAc,CAAEtJ,SAAUqF,IAAea,EAAAA,EAAgBxL,KAAOoB,EAAAA,EAAAA,KAAKiF,GAAa,CAAE5B,KAAMA,EAAMH,QAAQyH,EAAAA,EAAAA,IAAiBf,EAAYhC,OAAQxE,UAAW8I,EAAU/I,QAAgB,OAAPA,QAAO,IAAPA,EAAAA,EAAW,CAAEwB,SAAU,OAAY3E,EAAAA,EAAAA,KAAKyN,EAAAA,GAAY,CAAEvJ,UAAUlE,EAAAA,EAAAA,KAAKwE,EAAAA,GAAQ,CAAEN,SAAU,eAAmBJ,EAAAA,EAAAA,MAAM4J,EAAAA,GAAY,CAAExJ,SAAU,EAAClE,EAAAA,EAAAA,KAAKU,EAAU,CAAEE,IAAKA,EAAKC,MAAO+I,EAAYlC,WAAY5G,SAAUkL,EAASjL,UAAWG,KAAalB,EAAAA,EAAAA,KAAK2N,EAAAA,GAAQ,CAAEzJ,SAAU0F,EAAY/B,OAASyB,EAAOM,EAAYhC,MAAM7C,aAAe/E,EAAAA,EAAAA,KAAK4N,EAAAA,GAAiB,CAAEhE,YAAaA,EAAakC,WAAYA,QAAmBhI,EAAAA,EAAAA,MAAM+J,EAAAA,GAAQ,CAAE3J,SAAU,EAAClE,EAAAA,EAAAA,KAAK8N,EAAAA,GAAW,CAAEC,SAAUnE,EAAY/N,MAAOuI,QAAS6H,EAAO/H,SAAUgF,EAAE,kCAAoCmD,IAAiBvI,EAAAA,EAAAA,MAAMkK,EAAAA,GAAW,CAAE9J,SAAU,CAACgF,EAAE,sCAAsCkE,QAAQ,YAAaa,EAAAA,GAAU3K,OAAO8I,EAAW,CAAEpH,SAAU4E,EAAYhC,MAAM5C,YAAc,IAAK4E,EAAYhC,MAAM7C,WAAe/E,EAAAA,EAAAA,KAAKkO,EAAAA,GAAkB,CAAEhK,SAAUgF,EAAE,uDAA0DlJ,EAAAA,EAAAA,KAAKmO,EAAAA,GAAK,CAAC,IAAK3E,IAA8BxJ,EAAAA,EAAAA,KAAKoO,EAAAA,GAA0B,CAAElK,UAAUlE,EAAAA,EAAAA,KAAKqO,EAAAA,GAAoB,CAAEnK,UAAUlE,EAAAA,EAAAA,KAAK+I,EAAY,CAAEnI,IAAKqK,EAAWqD,YAAa/B,GAAShC,UAAWC,GAAeM,EAAgB1G,QAASsI,WAA0B,E,2ECtF/wD,MAAM6B,GAA+B,CACjCnS,KAAM,WACNoS,WAAY,K,+CCAhB,MAAMC,IAAgCtO,EAAAA,EAAAA,IAAOuO,GAAAA,EAAPvO,CAA+BE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,oCAGxDqO,GAAiC/S,IAA6B,IAA5B,MAAEC,EAAK,IAAE+S,KAAQ7S,GAAMH,EAClE,MAAM,aAAEiT,IAAiBC,EAAAA,GAAAA,OACjBnS,KAAMoS,IAAiBC,EAAAA,GAAAA,KACzB/R,EDJH,SAAwCE,EAAWC,EAAQvB,GAC9D,MAAMoT,GAAYC,EAAAA,EAAAA,IAAuBX,IACnCY,GAAeC,EAAAA,GAAAA,GAAkBH,GACjCI,GAAkBC,EAAAA,GAAAA,MACxB,OAAOtR,EAAAA,EAAAA,UAAS,CAAC,+BAAgCb,EAAWC,EAAQvB,EAAOsT,IAAelR,UACtF,MAAMsR,QAAeN,IACfO,EAAUrS,EAAUqS,QAC1B,OAAOH,EAAgBI,SAASF,EAAQ,CACpCG,IAAIC,EAAAA,GAAAA,IAAqBxS,EAAUQ,QAAQA,SACrCR,EAAUQ,QAAQA,QAClBR,EAAUyS,UAAUjS,QAC1BP,OAAQA,EACRvB,QACAwJ,QAASmK,EAAU,CAAEpT,KAAM,UAAWyE,MAAO2O,QAAY5R,GAC3D,GACH,CACCiB,UAAW1B,EACX0S,eAAgB,UAExB,CCfuBC,CAA+B/T,EAAKoB,UAAWpB,EAAKD,YAAaD,GAC9EyB,ECNH,SAAoCH,EAAWC,EAAQvB,EAAO+S,EAAK3R,GACtE,MAAMoS,GAAkBC,EAAAA,GAAAA,MAClBS,GAAcC,EAAAA,GAAAA,MACdf,GAAYgB,EAAAA,EAAAA,MACZC,GAASC,EAAAA,GAAAA,OACPC,YAAaC,IAA6BC,EAAAA,EAAAA,MAClD,OAAOC,EAAAA,EAAAA,cAAYtS,UACf,IACI,MAAMuQ,EAA2B,GAAdgC,OAAO5B,GACpBW,QAAeN,EAAU,CAAE7S,KAAM,WAAYoS,eAC7CgB,EAAUrS,EAAUqS,cACpBH,EAAgBoB,KAAKlB,EAAQtS,EAAY,CAC3CyS,IAAIC,EAAAA,GAAAA,IAAqBxS,EAAUQ,QAAQA,SACrCR,EAAUQ,QAAQA,QAClBR,EAAUyS,UAAUjS,QAC1BP,OAAQA,EACRvB,QACAwJ,QAASmK,EAAU,CAAEpT,KAAM,UAAWyE,MAAO2O,QAAY5R,IAEzDR,EAAOf,MAAM4C,KAAOnB,EAAAA,GAAUmB,GAC9BiR,EAAO,YAGPA,EAAO,cAEf,CACA,MAAOpD,SACGiD,EAAYjD,EACtB,CAEA,aADMuD,KACC,CAAI,GAEnB,CD1BqBK,CAA2B3U,EAAKoB,UAAWpB,EAAKD,YAAaD,EAAO+S,EAAK3R,EAAWN,MACrG,OAAQqD,EAAAA,EAAAA,KAAKC,EAAAA,GAAa,CAAEhD,WAAYA,KAAeK,KAAavB,EAAMmI,UAAUlE,EAAAA,EAAAA,KAAK2Q,EAAAA,GAAiC,CAAEzM,SAAU6K,GAAgB/O,EAAAA,EAAAA,KAAKyO,GAA+B,CAAEmC,OAAQ,WAAYC,cAAe,GAAIC,UAAW/B,EAAa+B,UAAWC,eAAgBhC,EAAaiC,QAASC,YAAapC,EAAaqC,WAAYC,YAA2B,GAAdX,OAAO5B,KAAgB,QAAU,EEY9XwC,GAAcxV,IAAwD,IAAAyV,EAAA,IAAvD,QAAEpO,EAAO,MAAEqO,EAAK,cAAEC,EAAa,gBAAEC,GAAiB5V,EACnE,MAAMwN,GAAMC,EAAAA,EAAAA,MACN,WAAE1D,EAAU,IAAED,EAAG,UAAE+L,IAAc7L,EAAAA,EAAAA,OACjC,EAAEsD,IAAMC,EAAAA,EAAAA,OACNxM,KAAM+U,IAAWhI,EAAAA,EAAAA,MACnBiI,GAAclI,EAAAA,EAAAA,KACdmI,GAA0BC,EAAAA,GAAAA,MAC1BC,GAAQC,EAAAA,GAAAA,OACPC,EAAMC,IAAYvV,EAAAA,EAAAA,UAASkV,EAA0B,oBAAsB,aAC5EM,GAAUnG,EAAAA,EAAAA,cAAaoG,IACpBP,GAAmC,sBAARO,IAC5BA,EAAM,aAEVF,EAASE,EAAI,GACd,CAACF,EAAUL,KACPQ,EAAOC,IAAY3V,EAAAA,EAAAA,WAAS,IAC5B4V,EAAiBC,IAAsB7V,EAAAA,EAAAA,aACvCS,EAAWqV,IAAiB9V,EAAAA,EAAAA,UAAS6U,IACrCkB,EAAiBC,IAAsBhW,EAAAA,EAAAA,UAAS8U,IACvD1U,EAAAA,EAAAA,YAAU,KACa,IAAA6V,EAAAC,EAAfrB,GACAO,EAAM,aAAc,CAChBe,KAAM,cACNjL,MAAqC,QAAhC+K,EAAiB,OAAfF,QAAe,IAAfA,GAAsB,QAAPG,EAAfH,EAAiB7K,aAAK,IAAAgL,OAAA,EAAtBA,EAAwB7N,cAAM,IAAA4N,EAAAA,EAAI,OAEjD,GACD,IACH,MAAQhW,KAAMmW,IAAiBC,EAAAA,EAAAA,OACvB3C,YAAa4C,EAAiBzI,UAAW0I,IAAqBC,EAAAA,EAAAA,MAChEC,EAAgBtS,IAAU,IAAAuS,EAAAC,EACT,OAAfZ,QAAe,IAAfA,GAAsB,QAAPW,EAAfX,EAAiB7K,aAAK,IAAAwL,GAAtBA,EAAwB7J,aACT,OAAfkJ,QAAe,IAAfA,GAAsB,QAAPY,EAAfZ,EAAiB7K,aAAK,IAAAyL,OAAA,EAAtBA,EAAwB9J,cAAe1I,EAAMlD,QAAQ4L,YACrDmJ,OAAmB9U,GAEvB4U,EAAc3R,GACViS,GAAgBjS,EAAMlD,QAAQ4L,aAAea,EAAAA,EAAgBM,MAC7DgI,EAAmB,CAAE9K,OAAO0L,EAAAA,EAAAA,IAAYR,EAAanO,SAAS,KAClE,EAEE4O,EAAe5W,IAAS,IAAA6W,EAAAC,EAC1BpB,GAAS,GACTc,EAAaxW,GACbuV,EAAQ,UACRJ,EAAM,aAAc,CAChBe,KAAM,iBACNjL,MAAqC,QAAhC4L,EAAiB,OAAff,QAAe,IAAfA,GAAsB,QAAPgB,EAAfhB,EAAiB7K,aAAK,IAAA6L,OAAA,EAAtBA,EAAwB1O,cAAM,IAAAyO,EAAAA,EAAI,OAC3C,EAEAE,EAAmB/W,IAAS,IAAAgX,EAAAC,EAC9BvB,GAAS,GACTK,EAAmB/V,GACnBuV,EAAQ,WACRJ,EAAM,eAAgB,CAClBe,KAAM,cACNjL,MAAqC,QAAhC+L,EAAiB,OAAflB,QAAe,IAAfA,GAAsB,QAAPmB,EAAfnB,EAAiB7K,aAAK,IAAAgM,OAAA,EAAtBA,EAAwB7O,cAAM,IAAA4O,EAAAA,EAAI,OAC3C,EAEAE,GAAmBlX,IACrB0V,GAAS,GACTK,EAAmB/V,GACnBuV,EAAQ,YAAY,EAElB4B,GAAeA,KACbpO,IACAqO,EAAAA,EAAAA,GAAgB,WACpB1B,GAAS,GACTH,EAAQ,SAAS,EAwBf8B,IAAgBjI,EAAAA,EAAAA,cAAY9N,UAAiC,IAAxBb,OAAQ6W,EAAC,OAAE/Q,GAAQgR,EAC1D,GAAIhR,GAAUwO,EAAQ,CAClB,IAAIyC,EACJ,IACIA,GAAchI,EAAAA,EAAAA,IAAiBjJ,EAAQwO,EAC3C,CACA,MAAO5E,GAKH,OAJA1D,EAAIgL,SAASC,KAAK,OAAQ,CACtBC,OAAQ,OACRC,OAAQrL,EAAE,yBAEP,CACX,CACA,MAAMpN,EAAc,IAAI6D,EAAAA,EAAY,CAChCtD,MAAO8X,EACPtU,UAAWoU,GAAK,MAEpBvB,EAAmB,CACf/K,UAAW7L,EAAYqD,eACvByI,MAAOuM,EACPtM,QAAQ,EACRhM,OAAO,GAEf,MAEI6W,EAAmB,CACf/K,UAAWsM,GAAI7U,EAAAA,EAAAA,IAAgB6U,GAAK,IAAI5U,EAAAA,EAAU,KAClDuI,MAAsB,OAAf4J,QAAe,IAAfA,OAAe,EAAfA,EAAiB5J,MACxBC,QAAQ,EACRhM,OAAO,IAGf,OAAO,CAAI,GACZ,CAACuN,EAAKsI,EAAuB,OAAfF,QAAe,IAAfA,OAAe,EAAfA,EAAiB5J,QAC5B4M,GAASvW,UACX,MAAMwW,GAAQC,EAAAA,EAAAA,GAA4B,CAAEC,IAAKC,IACjD,IAAIH,EAWJ,OAAOrL,EAAIgL,SAASC,KAAK,OAAQ,CAC7BC,OAAQ,OACRC,OAAQrL,EAAE,8BAZO8K,GAAcS,SAnDdxW,WAA6B,IAAtB,QAAEN,EAAO,KAAEkX,GAAM3P,EAC7C,MAAML,EAAO,CAAElH,QAASA,EAAS4L,WAAYa,EAAAA,EAAgBxL,KACvDgR,QAAkBoD,EAAgBnO,GAClCiQ,GAAQlF,EAAUmF,iBAAsBnF,EAAUmF,eAAgBF,GACxE1B,EAAa,CACTxV,QAASkH,EACT+K,YACAJ,QAAa,OAAJqF,QAAI,IAAJA,EAAAA,EAAQ,GACjBC,SAEAA,GACA5C,EAAQ,SACZ,EAyCc8C,CAAiBP,EAW7B,EAMAQ,GAAU,CACZ,qBALwBzR,EAAAA,EAAAA,QAAO,MAM/BrG,WALiBqG,EAAAA,EAAAA,QAAO,MAMxBpG,QALcoG,EAAAA,EAAAA,QAAO,MAMrB0R,SALe1R,EAAAA,EAAAA,QAAO,OAMxBwO,GACIlW,IAAcK,EAAAA,EAAAA,UAAQ,IACJ,OAAfsW,QAAe,IAAfA,GAAAA,EAAiB7K,OAAyB,OAAf6K,QAAe,IAAfA,GAAAA,EAAiB9K,UAG1ChI,EAAAA,EAAYC,mBAAmB,CAClCvD,MAAOoW,EAAgB7K,MACvBxK,OAAQqV,EAAgB9K,YAJjB,MAMZ,CAAgB,OAAf8K,QAAe,IAAfA,GAAsB,QAAPpB,EAAfoB,EAAiB7K,aAAK,IAAAyJ,OAAA,EAAtBA,EAAwBpS,GAAmB,OAAfwT,QAAe,IAAfA,OAAe,EAAfA,EAAiB9K,YACjD,OAAQ3H,EAAAA,EAAAA,KAAKmV,GAAAA,GAAS,CAAExP,WAAYA,EAAY8L,UAAWA,EAAWvN,UAAUlE,EAAAA,EAAAA,KAAKoV,EAAAA,EAAiB,CAAEC,cAAcC,EAAAA,GAAAA,IAAoBlD,GAAQlO,UAAUlE,EAAAA,EAAAA,KAAKuV,EAAAA,EAAe,CAAEN,QAASA,GAASO,WAAY,gBAAiBC,eAAgBX,IACjOpO,WAAWoO,EAAMY,GAAAA,GAAS,EAC3BxR,SAAU0M,IAAW9M,EAAAA,EAAAA,MAAM,MAAO,CAAElD,IAAKqU,GAAS/Q,SAAU,CAAU,sBAAT8N,IAAiChS,EAAAA,EAAAA,KAAK2V,GAAAA,EAAuB,CAAE9I,SAAUsF,IACzHE,GAAS,GACTE,EAAmBJ,EAAIyD,UACvB1D,EAAQ,YAAY,EACrBjJ,mBAA+B,YAAX2H,EAAsBiF,OAAQA,KAAO7V,EAAAA,EAAAA,KAAK8V,GAAAA,GAAyB,CAAEC,MAAO7M,EAAE,+BAAgCjG,QAASA,IAAa8F,WAAYA,GAAAA,KAAyB,cAATiJ,IAAyBhS,EAAAA,EAAAA,KAAKgW,EAAAA,GAAe,CAAErZ,KAAMQ,EAAWgW,aAAcI,EAAaiB,OAAQA,GAAQyB,SAAU,UAAWC,kBAAmBjD,EAAkBkD,kBAAmB7E,EAAQ,CAACA,QAAS1T,EAAWmL,WAAYA,GAAAA,GAAYC,YAAaA,KAAOhJ,EAAAA,EAAAA,KAAKoW,GAAAA,GAAsB,CAAExN,OAAQgJ,EACnd,KACES,GAAS,GACTH,EAAQ,oBAAoB,OAE9BtU,EAAWmY,MAAO7M,EAAE,yBAA0BjG,QAASA,IAAagG,mBAA+B,YAAX2H,IAAmC,WAAToB,IAAsBhS,EAAAA,EAAAA,KAAK2I,GAAY,CAAEG,SAAU2J,EAAiBxP,QAASA,EAAS2F,OAAQiL,GAAiB1W,UAAWA,EAAW0L,UAAW6K,EAAiB3K,WAAYsN,GAAAA,GAAkBrN,YAAasN,GAAAA,GAAmBrN,mBAA+B,YAAX2H,IAAmC,YAAToB,IACxYJ,GAA2B9N,EAAAA,EAAAA,MAAM6K,GAAgC,CAAE1L,QAASA,EAAS2F,OAAQkL,GAAc3W,UAAWA,EAAWrB,YAAa6D,EAAAA,EAAYC,mBAAmB,CACtKvD,MAAOoW,EAAgB7K,MACvBxK,OAAQqV,EAAgB9K,YACxB9L,MAAO4W,EAAgB5W,MAAO+S,IAAK0D,EAAiBpO,SAAU,CAAY,YAAX0M,GAAwBe,IAAgB3R,EAAAA,EAAAA,KAAKuW,EAAAA,GAAsB,CAAErS,UAAUlE,EAAAA,EAAAA,KAAKiN,EAAAA,GAA0B,CAAE/I,UAAUlE,EAAAA,EAAAA,KAAKkN,EAAAA,GAAoB,CAAEhJ,UAAUlE,EAAAA,EAAAA,KAAKwW,EAAAA,GAAkB,CAAC,SAAyB,YAAX5F,GAAwBe,IAAgB3R,EAAAA,EAAAA,KAAKyW,EAAAA,GAAwB,CAAEvS,UAAUlE,EAAAA,EAAAA,KAAKoO,EAAAA,GAA0B,CAAElK,UAAUlE,EAAAA,EAAAA,KAAKqO,EAAAA,GAAoB,CAAEnK,UAAUlE,EAAAA,EAAAA,KAAK0W,EAAAA,GAAoB,CAAE3N,WAAY4N,GAAAA,eAAuC7S,EAAAA,EAAAA,MAAMnI,EAAqB,CAAEsH,QAASA,EAAS2F,OAAQkL,GAAc3W,UAAWA,EAAWrB,YAAaA,GAAaD,MAAO4W,EAAgB5W,MAAOqI,SAAU,CAAY,YAAX0M,GAAwBe,IAAgB3R,EAAAA,EAAAA,KAAKuW,EAAAA,GAAsB,CAAErS,UAAUlE,EAAAA,EAAAA,KAAKiN,EAAAA,GAA0B,CAAE/I,UAAUlE,EAAAA,EAAAA,KAAKkN,EAAAA,GAAoB,CAAEhJ,UAAUlE,EAAAA,EAAAA,KAAKwW,EAAAA,GAAkB,CAAC,SAAyB,YAAX5F,GAAwBe,IAAgB3R,EAAAA,EAAAA,KAAKyW,EAAAA,GAAwB,CAAEvS,UAAUlE,EAAAA,EAAAA,KAAKoO,EAAAA,GAA0B,CAAElK,UAAUlE,EAAAA,EAAAA,KAAKqO,EAAAA,GAAoB,CAAEnK,UAAUlE,EAAAA,EAAAA,KAAK0W,EAAAA,GAAoB,CAAE3N,WAAY4N,GAAAA,mBAA6C3E,MAAW,EA2C1nC,GAzC+B4E,KAC3B,MAAOC,EAAMC,IAAWpa,EAAAA,EAAAA,WAAS,IAC1B4U,EAAOyF,IAAYra,EAAAA,EAAAA,eAASkB,IAC5BoZ,EAAaC,IAAkBva,EAAAA,EAAAA,eAASkB,IACvCjB,KAAMwG,IAAYuG,EAAAA,EAAAA,OAClB0G,YAAa4C,EAAe,MAAEkE,IAAUhE,EAAAA,EAAAA,MAC1C9J,GAAMC,EAAAA,EAAAA,KACNyI,GAAQC,EAAAA,GAAAA,OACdjV,EAAAA,EAAAA,YAAU,KACN,MAAMqa,EAAWC,IACbF,IACA,MAAMG,EAAWD,EAAQ7C,OACzBwC,EAASK,EAAQ7C,OAAOjD,OACpB+F,EAAS1Z,QACTqV,EAAgB,CAAErV,QAAS0Z,EAAS1Z,UAAW2Z,MAAKC,IAChDN,GAAeO,EAAAA,GAAAA,IAAqBH,EAAUE,EAASpU,IACvD2T,GAAQ,EAAK,KAIjBG,EAAe,CAAEzF,iBAAiBiG,EAAAA,GAAAA,IAA4BJ,EAAUlU,KACxE2T,GAAQ,IAEZhF,EAAM,YAAa,CAAEe,KAAMwE,EAASxE,MAAO,EAG/C,OADAzJ,EAAIgL,SAASsD,GAAG,WAAYP,GACrB,KACH/N,EAAIgL,SAASuD,IAAI,WAAYR,EAAQ,CACxC,GACF,CAAChU,EAAS2O,IACb,MAAM7O,GAAU8I,EAAAA,EAAAA,cAAY,KACxBkL,OAAerZ,GACfkZ,GAAQ,EAAM,GACf,IACGc,GAAU7L,EAAAA,EAAAA,cAAY,KACxB,GAAK8K,EAEL,OAAQ7W,EAAAA,EAAAA,KAAKoR,GAAa,CAAEnO,QAASA,EAASqO,MAAOA,EAAOE,gBAA4B,OAAXwF,QAAW,IAAXA,OAAW,EAAXA,EAAaxF,gBAAiBD,cAA0B,OAAXyF,QAAW,IAAXA,OAAW,EAAXA,EAAazF,eAAgB,GACxJ,CAACsF,EAAMG,EAAa1F,IACvB,OAAQtR,EAAAA,EAAAA,KAAK6X,EAAAA,GAAc,CAAEC,OAAQjB,EAAMkB,YAAa9U,EAAS+U,YAAY,EAAMC,YAAY,EAAMC,QAAQlY,EAAAA,EAAAA,KAAKmY,EAAAA,SAAW,CAAC,GAAIjU,SAAU0T,GAAU,C,gGC5OnJ,SAASQ,EAAgBlU,EAAUmU,GACxC,IAIIC,EAAS9Z,OAAO+Z,OAAO,MAO3B,OANIrU,GAAUsU,EAAAA,SAAS5T,IAAIV,GAAU,SAAUuU,GAC7C,OAAOA,CACT,IAAGC,SAAQ,SAAUC,GAEnBL,EAAOK,EAAMC,KATF,SAAgBD,GAC3B,OAAON,IAASQ,EAAAA,EAAAA,gBAAeF,GAASN,EAAMM,GAASA,CACzD,CAOsBG,CAAOH,EAC7B,IACOL,CACT,CAiEA,SAASS,EAAQJ,EAAOK,EAAMzY,GAC5B,OAAsB,MAAfA,EAAMyY,GAAgBzY,EAAMyY,GAAQL,EAAMpY,MAAMyY,EACzD,CAaO,SAASC,EAAoBC,EAAWC,EAAkBC,GAC/D,IAAIC,EAAmBjB,EAAgBc,EAAUhV,UAC7CA,EA/DC,SAA4BoV,EAAMC,GAIvC,SAASC,EAAeZ,GACtB,OAAOA,KAAOW,EAAOA,EAAKX,GAAOU,EAAKV,EACxC,CALAU,EAAOA,GAAQ,CAAC,EAChBC,EAAOA,GAAQ,CAAC,EAQhB,IAcIE,EAdAC,EAAkBlb,OAAO+Z,OAAO,MAChCoB,EAAc,GAElB,IAAK,IAAIC,KAAWN,EACdM,KAAWL,EACTI,EAAY9N,SACd6N,EAAgBE,GAAWD,EAC3BA,EAAc,IAGhBA,EAAYE,KAAKD,GAKrB,IAAIE,EAAe,CAAC,EAEpB,IAAK,IAAIC,KAAWR,EAAM,CACxB,GAAIG,EAAgBK,GAClB,IAAKN,EAAI,EAAGA,EAAIC,EAAgBK,GAASlO,OAAQ4N,IAAK,CACpD,IAAIO,EAAiBN,EAAgBK,GAASN,GAC9CK,EAAaJ,EAAgBK,GAASN,IAAMD,EAAeQ,EAC7D,CAGFF,EAAaC,GAAWP,EAAeO,EACzC,CAGA,IAAKN,EAAI,EAAGA,EAAIE,EAAY9N,OAAQ4N,IAClCK,EAAaH,EAAYF,IAAMD,EAAeG,EAAYF,IAG5D,OAAOK,CACT,CAmBiBG,CAAmBd,EAAkBE,GAmCpD,OAlCA7a,OAAO0b,KAAKhW,GAAUwU,SAAQ,SAAUE,GACtC,IAAID,EAAQzU,EAAS0U,GACrB,IAAKC,EAAAA,EAAAA,gBAAeF,GAApB,CACA,IAAIwB,EAAWvB,KAAOO,EAClBiB,EAAWxB,KAAOS,EAClBgB,EAAYlB,EAAiBP,GAC7B0B,GAAYzB,EAAAA,EAAAA,gBAAewB,KAAeA,EAAU9Z,MAAMga,IAE1DH,GAAaD,IAAWG,EAQhBF,IAAWD,GAAYG,EAMxBF,GAAWD,IAAWtB,EAAAA,EAAAA,gBAAewB,KAI9CnW,EAAS0U,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClCS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,GAAIF,EAAU9Z,MAAMga,GACpBG,KAAM3B,EAAQJ,EAAO,OAAQO,GAC7ByB,MAAO5B,EAAQJ,EAAO,QAASO,MAXjChV,EAAS0U,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClC4B,IAAI,IAVNrW,EAAS0U,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClCS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,IAAI,EACJG,KAAM3B,EAAQJ,EAAO,OAAQO,GAC7ByB,MAAO5B,EAAQJ,EAAO,QAASO,IAZD,CA+BpC,IACOhV,CACT,CClIA,IAAIzF,EAASD,OAAOC,QAAU,SAAUmc,GACtC,OAAOpc,OAAO0b,KAAKU,GAAKhW,KAAI,SAAU5F,GACpC,OAAO4b,EAAI5b,EACb,GACF,EAuBIoW,EAA+B,SAAUyF,GAG3C,SAASzF,EAAgB7U,EAAOua,GAC9B,IAAIC,EAIAC,GAFJD,EAAQF,EAAiBlU,KAAKT,KAAM3F,EAAOua,IAAY5U,MAE9B8U,aAAaP,KC5C3B,SAAgCQ,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CDuC+CE,CAAuBJ,IAUlE,OAPAA,EAAMxT,MAAQ,CACZ6T,aAAc,CACZC,YAAY,GAEdL,aAAcA,EACdM,aAAa,GAERP,CACT,EAlBAQ,EAAAA,EAAAA,GAAenG,EAAiByF,GAoBhC,IAAIW,EAASpG,EAAgBqG,UAqE7B,OAnEAD,EAAOE,kBAAoB,WACzBxV,KAAKyV,SAAU,EACfzV,KAAK0V,SAAS,CACZR,aAAc,CACZC,YAAY,IAGlB,EAEAG,EAAOK,qBAAuB,WAC5B3V,KAAKyV,SAAU,CACjB,EAEAvG,EAAgB0G,yBAA2B,SAAkC5C,EAAWtd,GACtF,IDiBmC2E,EAAO6Y,ECjBtCD,EAAmBvd,EAAKsI,SACxB8W,EAAepf,EAAKof,aAExB,MAAO,CACL9W,SAFgBtI,EAAK0f,aDeY/a,ECbc2Y,EDaPE,ECbkB4B,EDcvD5C,EAAgB7X,EAAM2D,UAAU,SAAUyU,GAC/C,OAAO6B,EAAAA,EAAAA,cAAa7B,EAAO,CACzBS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,IAAI,EACJwB,OAAQhD,EAAQJ,EAAO,SAAUpY,GACjCoa,MAAO5B,EAAQJ,EAAO,QAASpY,GAC/Bma,KAAM3B,EAAQJ,EAAO,OAAQpY,IAEjC,KCtB8E0Y,EAAoBC,EAAWC,EAAkB6B,GAC3HM,aAAa,EAEjB,EAGAE,EAAOR,aAAe,SAAsBrC,EAAOqD,GACjD,IAAIC,EAAsB7D,EAAgBlS,KAAK3F,MAAM2D,UACjDyU,EAAMC,OAAOqD,IAEbtD,EAAMpY,MAAM6Y,UACdT,EAAMpY,MAAM6Y,SAAS4C,GAGnB9V,KAAKyV,SACPzV,KAAK0V,UAAS,SAAUrU,GACtB,IAAIrD,GAAWgY,EAAAA,EAAAA,GAAS,CAAC,EAAG3U,EAAMrD,UAGlC,cADOA,EAASyU,EAAMC,KACf,CACL1U,SAAUA,EAEd,IAEJ,EAEAsX,EAAOW,OAAS,WACd,IAAIC,EAAclW,KAAK3F,MACnB8b,EAAYD,EAAYE,UACxBjH,EAAe+G,EAAY/G,aAC3B9U,GAAQgc,EAAAA,EAAAA,GAA8BH,EAAa,CAAC,YAAa,iBAEjEhB,EAAelV,KAAKqB,MAAM6T,aAC1BlX,EAAWzF,EAAOyH,KAAKqB,MAAMrD,UAAUU,IAAIyQ,GAK/C,cAJO9U,EAAMwb,cACNxb,EAAMoa,aACNpa,EAAMma,KAEK,OAAd2B,EACkB1b,EAAAA,cAAoB6b,EAAAA,EAAuBC,SAAU,CACvE5b,MAAOua,GACNlX,GAGevD,EAAAA,cAAoB6b,EAAAA,EAAuBC,SAAU,CACvE5b,MAAOua,GACOza,EAAAA,cAAoB0b,EAAW9b,EAAO2D,GACxD,EAEOkR,CACT,CA3FmC,CA2FjCzU,EAAAA,WAEFyU,EAAgBsH,UAyDZ,CAAC,EACLtH,EAAgBuH,aA5KG,CACjBL,UAAW,MACXjH,aAAc,SAAsBsD,GAClC,OAAOA,CACT,GAyKF,S","sources":["../../../packages/uikit/dist/components/transfer/ConfirmTransferView.js","../../../packages/uikit/dist/components/transfer/Sentence.js","../../../packages/uikit/dist/components/transfer/amountView/AssetSelect.js","../../../packages/uikit/dist/components/transfer/amountView/amountHooks.js","../../../packages/uikit/dist/components/transfer/amountView/amountState.js","../../../packages/uikit/dist/components/transfer/amountView/AmountView.js","../../../packages/uikit/dist/hooks/blockchain/multisig/useEstimateNewMultisigTransfer.js","../../../packages/uikit/dist/components/transfer/ConfirmMultisigNewTransferView.js","../../../packages/uikit/dist/hooks/blockchain/multisig/useSendNewMultisigTransfer.js","../../../packages/uikit/dist/components/transfer/SendNotifications.js","../../../packages/uikit/node_modules/react-transition-group/esm/utils/ChildMapping.js","../../../packages/uikit/node_modules/react-transition-group/esm/TransitionGroup.js","../../../packages/uikit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useEstimateTransfer } from '../../hooks/blockchain/useEstimateTransfer';\nimport { useSendTransfer } from '../../hooks/blockchain/useSendTransfer';\nimport { ConfirmView } from './ConfirmView';\nimport { useAvailableSendersChoices } from '../../hooks/blockchain/useSender';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { TON_ASSET, TON_USDT_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useAssetWeiBalance } from '../../state/home';\nimport { JettonEncoder } from '@tonkeeper/core/dist/service/ton-blockchain/encoder/jetton-encoder';\nimport BigNumber from 'bignumber.js';\nimport { RatesApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { isTonAsset } from '@tonkeeper/core/dist/entries/crypto/asset/asset';\nimport { useQuery } from '@tanstack/react-query';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useActiveApi } from '../../state/wallet';\nconst gaslessApproximateFee = (asset, tokenToTonRate) => {\n    const k = asset.id === TON_USDT_ASSET.id ? 0.9 : 0.5;\n    const relativeAmount = shiftedDecimals(new BigNumber(JettonEncoder.jettonTransferAmount.toString()))\n        .multipliedBy(1.2)\n        .div(k)\n        .div(tokenToTonRate);\n    return AssetAmount.fromRelativeAmount({ asset: asset, amount: relativeAmount });\n};\nexport const ConfirmTransferView = ({ isMax, assetAmount, ...rest }) => {\n    const api = useActiveApi();\n    const operationType = useMemo(() => {\n        return {\n            type: 'transfer',\n            asset: assetAmount.asset\n        };\n    }, [assetAmount.asset]);\n    const assetWeiBalance = useAssetWeiBalance(assetAmount.asset);\n    /**\n     * for MAX button jettons gasless\n     */\n    const [assetAmountPatched, setAssetAmountPatched] = useState(assetAmount);\n    const { data: availableSendersChoices } = useAvailableSendersChoices(operationType);\n    useEffect(() => {\n        if (availableSendersChoices) {\n            onSenderTypeChange(availableSendersChoices[0].type);\n        }\n    }, [availableSendersChoices]);\n    const [selectedSenderType, onSenderTypeChange] = useState();\n    const estimation = useEstimateTransfer({\n        recipient: rest.recipient,\n        amount: assetAmountPatched,\n        isMax,\n        senderType: selectedSenderType\n    });\n    const mutation = useSendTransfer({\n        recipient: rest.recipient,\n        amount: assetAmountPatched,\n        isMax,\n        estimation: estimation.data,\n        senderType: selectedSenderType\n    });\n    const assetAddress = isTonAsset(assetAmount.asset)\n        ? tonAssetAddressToString(assetAmount.asset.address)\n        : undefined;\n    const shouldPatchAmount = assetAddress !== TON_ASSET.address &&\n        isMax &&\n        selectedSenderType === 'gasless' &&\n        isTonAsset(assetAmount.asset) &&\n        assetWeiBalance;\n    const tokenToTonRate = useQuery([\n        'current-token-to-ton-rate',\n        tonAssetAddressToString(assetAmount.asset.address)\n    ], async () => {\n        const response = await new RatesApi(api.tonApiV2).getRates({\n            tokens: [assetAddress],\n            currencies: ['TON']\n        });\n        return Object.values(response.rates)[0].prices.TON;\n    }, {\n        enabled: !!shouldPatchAmount\n    });\n    useEffect(() => {\n        if (!shouldPatchAmount) {\n            return setAssetAmountPatched(assetAmount);\n        }\n        if (!tokenToTonRate.data) {\n            return;\n        }\n        const fee = gaslessApproximateFee(assetAmount.asset, tokenToTonRate.data);\n        setAssetAmountPatched(new AssetAmount({\n            asset: assetAmount.asset,\n            weiAmount: assetWeiBalance.minus(fee.weiAmount)\n        }));\n    }, [isMax, assetAmount, selectedSenderType, assetWeiBalance?.toFixed(0)]);\n    return (_jsx(ConfirmView, { estimation: estimation, ...mutation, ...rest, assetAmount: assetAmountPatched, selectedSenderType: selectedSenderType, onSenderTypeChange: onSenderTypeChange, availableSendersChoices: availableSendersChoices }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst SentenceInput = styled.input `\n    padding: 0;\n    margin: 0;\n    border: none;\n    outline: none;\n    /* added styles */\n    font-family: inherit;\n    font-size: inherit;\n    background: transparent;\n    color: ${props => props.theme.textPrimary};\n\n    font-family: 'Montserrat', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n\n    line-height: 49px;\n    text-align: right;\n\n    -moz-appearance: textfield;\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n`;\nexport const Sentence = React.forwardRef(({ value, setValue, inputSize }, ref) => {\n    return (_jsx(SentenceInput, { autoComplete: \"off\", id: \"sentence\", \"data-testid\": \"amount-input\", ref: ref, style: {\n            fontSize: `${inputSize.size}px`,\n            width: `${inputSize.width}px`\n        }, inputMode: \"decimal\", type: \"text\", value: value, onChange: event => {\n            setValue(event.target.value);\n        } }));\n});\nSentence.displayName = 'Sentence';\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { getJettonSymbol } from '@tonkeeper/core/dist/utils/send';\nimport { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useFormatCoinValue } from '../../../hooks/balance';\nimport { DropDown } from '../../DropDown';\nimport { DoneIcon, DownIcon } from '../../Icon';\nimport { ListBlock, ListItem, ListItemPayload } from '../../List';\nimport { Body1, Label1 } from '../../Text';\nconst AssetValue = styled.div `\n    background: ${props => props.theme.buttonTertiaryBackground};\n    border-radius: ${props => props.theme.cornerMedium};\n    padding: 0.5rem 1rem;\n    display: flex;\n    gap: 0.5rem;\n`;\nconst DownIconWrapper = styled.span `\n    color: ${props => props.theme.iconSecondary};\n    display: flex;\n    align-items: center;\n`;\nconst AssetImage = styled.img `\n    border-radius: ${props => props.theme.cornerFull};\n    width: 24px;\n    height: 24px;\n`;\nconst AssetInfo = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    width: 200px;\n    overflow: hidden;\n`;\nconst Amount = styled(Body1) `\n    color: ${props => props.theme.textSecondary};\n    text-overflow: ellipsis;\n    overflow: hidden;\n`;\nconst Icon = styled.span `\n    padding-left: 0.5rem;\n    color: ${props => props.theme.accentBlue};\n    display: flex;\n`;\nconst AssetDropDown = ({ onClose, jetton, jettons, setJetton, info }) => {\n    const format = useFormatCoinValue();\n    const ref = useRef(null);\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.parentElement?.parentElement?.scrollIntoView({\n                behavior: 'smooth'\n            });\n        }\n    }, [ref]);\n    return (_jsxs(ListBlock, { margin: false, dropDown: true, children: [_jsx(ListItem, { dropDown: true, onClick: () => {\n                    setJetton(CryptoCurrency.TON);\n                    onClose();\n                }, children: _jsxs(ListItemPayload, { children: [_jsxs(AssetInfo, { children: [_jsx(AssetImage, { src: \"https://wallet.tonkeeper.com/img/toncoin.svg\" }), _jsx(Label1, { children: CryptoCurrency.TON }), _jsx(Amount, { children: format(info?.balance ?? 0) })] }), CryptoCurrency.TON === jetton ? (_jsx(Icon, { children: _jsx(DoneIcon, {}) })) : undefined] }) }), jettons.balances.map(item => {\n                return (_jsx(ListItem, { dropDown: true, onClick: () => {\n                        setJetton(item.jetton.address);\n                        onClose();\n                    }, children: _jsxs(ListItemPayload, { children: [_jsxs(AssetInfo, { children: [_jsx(AssetImage, { src: item.jetton.image }), _jsx(Label1, { children: item.jetton.symbol }), _jsx(Amount, { children: format(item.balance, item.jetton.decimals) })] }), item.jetton.address === jetton ? (_jsx(Icon, { ref: ref, children: _jsx(DoneIcon, {}) })) : undefined] }) }, item.jetton.address));\n            })] }));\n};\nexport const AssetSelect = ({ jetton, jettons, setJetton, info }) => {\n    return (_jsx(DropDown, { center: true, payload: onClose => (_jsx(AssetDropDown, { info: info, onClose: onClose, jetton: jetton, jettons: jettons, setJetton: setJetton })), children: _jsxs(AssetValue, { children: [_jsx(Label1, { children: getJettonSymbol(jetton, jettons) }), _jsx(DownIconWrapper, { children: _jsx(DownIcon, {}) })] }) }));\n};\n","import { useEffect } from 'react';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { getTextWidth } from '../../../hooks/textWidth';\nexport const useButtonPosition = (ref, blockRef) => {\n    const { ios, standalone } = useAppContext();\n    useEffect(() => {\n        if (!ios)\n            return;\n        const height = window.innerHeight;\n        function resizeHandler() {\n            const button = ref.current;\n            if (!button)\n                return;\n            const value = height - this.height + 16;\n            const bottom = standalone ? Math.max(32, value) : value;\n            button.style.bottom = `${bottom}px`;\n            const labelHeight = Math.min(this.height - 16 - 56 - 16 - 36 - 16 - 16 - 16 - 16 - 37, 272);\n            if (blockRef.current) {\n                blockRef.current.style.height = `${labelHeight}px`;\n            }\n        }\n        function blurHandler() {\n            const viewport = window.visualViewport;\n            if (viewport) {\n                viewport.removeEventListener('resize', resizeHandler);\n            }\n            setTimeout(() => {\n                const button = ref.current;\n                if (!button)\n                    return;\n                button.style.bottom = null;\n            });\n        }\n        const viewport = window.visualViewport;\n        if (viewport) {\n            setTimeout(() => resizeHandler.call(viewport), 300);\n            viewport.addEventListener('resize', resizeHandler);\n        }\n        return () => {\n            blurHandler();\n        };\n    }, [ref.current, blockRef.current]);\n};\nexport const defaultSize = { size: 40, width: 30 };\nexport const getInputSize = (value, parent) => {\n    const max = parent.clientWidth;\n    let size = defaultSize.size;\n    let width = getTextWidth(value, `600 ${size}px 'Montserrat'`);\n    while (Math.round(width) > max - 115) {\n        size = Math.max(1, size - 1);\n        width = getTextWidth(value, `600 ${size}px 'Montserrat'`);\n    }\n    return {\n        width: Math.max(Math.round(width) + 5, value.length * 6, 30),\n        size: size\n    };\n};\nexport const useAutoFocusOnChange = (ref, token) => {\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            if (ref.current) {\n                ref.current.focus();\n            }\n        }, 300);\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [ref.current, token]);\n};\n","import { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { TON_ASSET, TRON_USDT_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { legacyTonAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { getDecimalSeparator, getGroupSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { formatSendValue, isNumeric } from '@tonkeeper/core/dist/utils/send';\nimport BigNumber from 'bignumber.js';\nimport { inputToBigNumber, replaceTypedDecimalSeparator, seeIfValueValid } from './AmountViewUI';\nfunction formatStringToInput(value) {\n    return value.toFormat({\n        groupSeparator: getGroupSeparator(),\n        decimalSeparator: getDecimalSeparator()\n    });\n}\nexport const amountStateReducer = (state, action) => {\n    const { kind, payload } = action;\n    switch (kind) {\n        case 'select':\n            return {\n                inputValue: '0',\n                coinValue: new BigNumber(0),\n                token: payload.token,\n                inFiat: false,\n                isMax: false\n            };\n        case 'max': {\n            if (payload.prices !== undefined) {\n                const fiatValue = payload.value\n                    .multipliedBy(payload.prices)\n                    .decimalPlaces(2, BigNumber.ROUND_FLOOR);\n                return {\n                    ...state,\n                    inputValue: formatStringToInput(state.inFiat ? fiatValue : payload.value),\n                    fiatValue: fiatValue,\n                    coinValue: payload.value,\n                    isMax: !state.isMax\n                };\n            }\n            else {\n                return {\n                    ...state,\n                    inputValue: formatStringToInput(payload.value),\n                    coinValue: payload.value,\n                    isMax: !state.isMax\n                };\n            }\n        }\n        case 'input': {\n            const decimals = state.inFiat ? 2 : state.token.decimals;\n            let inputValue = replaceTypedDecimalSeparator(payload.value);\n            if (!seeIfValueValid(inputValue, decimals)) {\n                inputValue = state.inputValue;\n            }\n            if (isNumeric(inputValue)) {\n                inputValue = formatSendValue(inputValue);\n            }\n            const inputAmount = inputToBigNumber(inputValue);\n            const coinValue = state.inFiat ? inputAmount.div(payload.prices ?? 0) : inputAmount;\n            const fiatValue = state.inFiat\n                ? inputAmount\n                : inputAmount.multipliedBy(payload.prices ?? 0);\n            return {\n                ...state,\n                inputValue,\n                coinValue,\n                fiatValue,\n                isMax: false\n            };\n        }\n        case 'price': {\n            if (!payload.prices)\n                return state;\n            const fiatValue = state.coinValue\n                .multipliedBy(payload.prices)\n                .decimalPlaces(2, BigNumber.ROUND_FLOOR);\n            return {\n                ...state,\n                fiatValue\n            };\n        }\n        case 'toggle': {\n            const inputValue = formatStringToInput(state.inFiat\n                ? state.coinValue.decimalPlaces(state.token.decimals, BigNumber.ROUND_FLOOR)\n                : state.fiatValue?.decimalPlaces(2, BigNumber.ROUND_FLOOR) ?? new BigNumber(0));\n            return {\n                ...state,\n                inputValue,\n                inFiat: !state.inFiat\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport const toInitAmountState = (defaults, blockchain) => {\n    const inFiat = defaults?.inFiat ?? false;\n    return {\n        inputValue: defaults?.inputValue ??\n            formatStringToInput((inFiat ? defaults?.fiatValue : defaults?.coinValue) || new BigNumber(0)),\n        coinValue: defaults?.coinValue ?? new BigNumber(0),\n        fiatValue: defaults?.fiatValue,\n        token: defaults?.token || (blockchain === BLOCKCHAIN_NAME.TON ? TON_ASSET : TRON_USDT_ASSET),\n        inFiat,\n        isMax: defaults?.isMax ?? false\n    };\n};\nexport const toTokenRateSymbol = (amountState) => {\n    return amountState.token.blockchain === BLOCKCHAIN_NAME.TRON\n        ? amountState.token.symbol\n        : legacyTonAssetId(amountState.token, { userFriendly: true });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { jettonToTonAsset, legacyTonAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { isNumeric } from '@tonkeeper/core/dist/utils/send';\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { formatter } from '../../../hooks/balance';\nimport { useTranslation } from '../../../hooks/translation';\nimport { useIsFullWidthMode } from '../../../hooks/useIsFullWidthMode';\nimport { useUserAssetBalance } from '../../../state/asset';\nimport { useJettonList } from '../../../state/jetton';\nimport { useRate } from '../../../state/rates';\nimport { useWalletAccountInfo } from '../../../state/wallet';\nimport { Gap } from '../../Layout';\nimport { FullHeightBlock, NotificationFooter, NotificationFooterPortal, NotificationHeader, NotificationHeaderPortal } from '../../Notification';\nimport { Label1 } from '../../Text';\nimport { Sentence } from '../Sentence';\nimport { AmountBlock, AssetBadge, InputBlock, MaxButton, MaxRow, RecipientAddress, RecipientName, Remaining, RemainingInvalid, SecondaryAmount, SelectCenter, SubTitle, Symbol, inputToBigNumber } from './AmountViewUI';\nimport { AssetSelect } from './AssetSelect';\nimport { defaultSize, getInputSize, useAutoFocusOnChange, useButtonPosition } from './amountHooks';\nimport { amountStateReducer, toInitAmountState, toTokenRateSymbol } from './amountState';\nexport const AmountView = ({ recipient, onClose, onBack, onConfirm, defaults, MainButton, HeaderBlock, isAnimationProcess }) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const { standalone, fiat } = useAppContext();\n    const blockchain = recipient.address.blockchain;\n    const isFullWidth = useIsFullWidthMode();\n    const shouldHideHeaderAndFooter = isFullWidth && isAnimationProcess;\n    const { data: jettons } = useJettonList();\n    const { data: info } = useWalletAccountInfo();\n    const [amountState, dispatch] = useReducer(amountStateReducer, toInitAmountState(defaults, blockchain));\n    const { data: tokenRate, isLoading: rateLoading } = useRate(toTokenRateSymbol(amountState));\n    const { data: balance, isLoading: balanceLoading } = useUserAssetBalance(amountState.token);\n    const ref = useRef(null);\n    const refBlock = useRef(null);\n    const refButton = useRef(null);\n    useButtonPosition(refButton, refBlock);\n    useAutoFocusOnChange(ref, amountState.token);\n    const [fontSize, setFontSize] = useState(defaultSize);\n    useLayoutEffect(() => {\n        if (refBlock.current) {\n            setFontSize(getInputSize(amountState.inputValue, refBlock.current));\n        }\n    }, [refBlock.current, amountState.inputValue]);\n    useEffect(() => {\n        dispatch({ kind: 'price', payload: { prices: tokenRate?.prices } });\n    }, [dispatch, tokenRate]);\n    const toggleFiat = useCallback(() => {\n        dispatch({ kind: 'toggle', payload: undefined });\n    }, []);\n    const onInput = useCallback((value) => {\n        dispatch({ kind: 'input', payload: { value, prices: tokenRate?.prices } });\n    }, [dispatch, tokenRate]);\n    const onMax = useCallback(() => {\n        dispatch({\n            kind: 'max',\n            payload: { value: balance.relativeAmount, prices: tokenRate?.prices }\n        });\n    }, [dispatch, balance, tokenRate]);\n    const onJetton = useCallback((address) => {\n        if (!jettons)\n            return;\n        dispatch({\n            kind: 'select',\n            payload: { token: jettonToTonAsset(address, jettons) }\n        });\n    }, [dispatch, jettons]);\n    const remaining = balance.relativeAmount.minus(amountState.coinValue);\n    const enoughBalance = remaining.gte(0);\n    const isValid = useMemo(() => {\n        return (enoughBalance &&\n            isNumeric(amountState.inputValue) &&\n            inputToBigNumber(amountState.inputValue).isGreaterThan(0));\n    }, [enoughBalance, amountState.inputValue]);\n    const handleBack = useCallback(() => {\n        onBack(amountState);\n    }, [onBack, amountState]);\n    const handleSubmit = useCallback(() => {\n        if (isValid) {\n            onConfirm(amountState);\n        }\n        else {\n            sdk.hapticNotification('error');\n        }\n    }, [isValid, onConfirm, amountState, sdk]);\n    const onSubmit = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    return (_jsxs(FullHeightBlock, { onSubmit: onSubmit, standalone: standalone, children: [!shouldHideHeaderAndFooter && (_jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(HeaderBlock, { onClose: onClose, onBack: handleBack, children: _jsxs(SubTitle, { children: [t('send_screen_steps_done_to').replace('%{name}', ''), _jsx(RecipientName, { recipient: recipient }), _jsx(RecipientAddress, { recipient: recipient })] }) }) }) })), _jsxs(AmountBlock, { ref: refBlock, children: [_jsx(SelectCenter, { children: blockchain === BLOCKCHAIN_NAME.TON ? (_jsx(AssetSelect, { info: info, jetton: legacyTonAssetId(amountState.token), setJetton: onJetton, jettons: jettons ?? { balances: [] } })) : (_jsx(AssetBadge, { children: _jsx(Label1, { children: \"TRC20\" }) })) }), _jsxs(InputBlock, { children: [_jsx(Sentence, { ref: ref, value: amountState.inputValue, setValue: onInput, inputSize: fontSize }), _jsx(Symbol, { children: amountState.inFiat ? fiat : amountState.token.symbol })] }), _jsx(SecondaryAmount, { amountState: amountState, toggleFiat: toggleFiat })] }), _jsxs(MaxRow, { children: [_jsx(MaxButton, { maxValue: amountState.isMax, onClick: onMax, children: t('send_screen_steps_amount_max') }), enoughBalance ? (_jsxs(Remaining, { children: [t('send_screen_steps_amount_remaining').replace('%{amount}', formatter.format(remaining, { decimals: amountState.token.decimals })), ' ', amountState.token.symbol] })) : (_jsx(RemainingInvalid, { children: t('send_screen_steps_amount_insufficient_balance') }))] }), _jsx(Gap, {}), !shouldHideHeaderAndFooter && (_jsx(NotificationFooterPortal, { children: _jsx(NotificationFooter, { children: _jsx(MainButton, { ref: refButton, isDisabled: !isValid, isLoading: rateLoading || balanceLoading, onClick: handleSubmit }) }) }))] }));\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport { useTonAssetTransferService } from '../useBlockchainService';\nimport { useGetEstimationSender } from '../useSender';\nimport { useToQueryKeyPart } from '../../useToQueryKeyPart';\nconst multisigEstimateSenderChoice = {\n    type: 'multisig',\n    ttlSeconds: 60 * 5\n};\nexport function useEstimateNewMultisigTransfer(recipient, amount, isMax) {\n    const getSender = useGetEstimationSender(multisigEstimateSenderChoice);\n    const getSenderKey = useToQueryKeyPart(getSender);\n    const transferService = useTonAssetTransferService();\n    return useQuery(['multisig-transfer-estimation', recipient, amount, isMax, getSenderKey], async () => {\n        const sender = await getSender();\n        const comment = recipient.comment;\n        return transferService.estimate(sender, {\n            to: seeIfValidTonAddress(recipient.address.address)\n                ? recipient.address.address\n                : recipient.toAccount.address,\n            amount: amount,\n            isMax,\n            payload: comment ? { type: 'comment', value: comment } : undefined\n        });\n    }, {\n        enabled: !!recipient,\n        refetchOnMount: 'always'\n    });\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ConfirmView, ConfirmViewAdditionalBottomSlot } from './ConfirmView';\nimport { useEstimateNewMultisigTransfer } from '../../hooks/blockchain/multisig/useEstimateNewMultisigTransfer';\nimport { useSendNewMultisigTransfer } from '../../hooks/blockchain/multisig/useSendNewMultisigTransfer';\nimport { MultisigTransferDetails } from './multisig/MultisigTransferDetails';\nimport { useActiveMultisigAccountHost, useActiveMultisigWalletInfo } from '../../state/multisig';\nimport { styled } from 'styled-components';\nconst MultisigTransferDetailsStyled = styled(MultisigTransferDetails) `\n    margin-bottom: 1rem;\n`;\nexport const ConfirmMultisigNewTransferView = ({ isMax, ttl, ...rest }) => {\n    const { signerWallet } = useActiveMultisigAccountHost();\n    const { data: multisigInfo } = useActiveMultisigWalletInfo();\n    const estimation = useEstimateNewMultisigTransfer(rest.recipient, rest.assetAmount, isMax);\n    const mutation = useSendNewMultisigTransfer(rest.recipient, rest.assetAmount, isMax, ttl, estimation.data);\n    return (_jsx(ConfirmView, { estimation: estimation, ...mutation, ...rest, children: _jsx(ConfirmViewAdditionalBottomSlot, { children: multisigInfo ? (_jsx(MultisigTransferDetailsStyled, { status: \"progress\", signedWallets: [], threshold: multisigInfo.threshold, pendingWallets: multisigInfo.signers, hostAddress: signerWallet.rawAddress, secondsLeft: Number(ttl) * 60 })) : null }) }));\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useInvalidateActiveWalletQueries } from '../../../state/wallet';\nimport { useTransactionAnalytics } from '../../amplitude';\nimport { useTonAssetTransferService } from '../useBlockchainService';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport { useNotifyErrorHandle } from '../../useNotification';\nimport { useGetSender } from '../useSender';\nexport function useSendNewMultisigTransfer(recipient, amount, isMax, ttl, estimation) {\n    const transferService = useTonAssetTransferService();\n    const notifyError = useNotifyErrorHandle();\n    const getSender = useGetSender();\n    const track2 = useTransactionAnalytics();\n    const { mutateAsync: invalidateAccountQueries } = useInvalidateActiveWalletQueries();\n    return useMutation(async () => {\n        try {\n            const ttlSeconds = Number(ttl) * 60;\n            const sender = await getSender({ type: 'multisig', ttlSeconds });\n            const comment = recipient.comment;\n            await transferService.send(sender, estimation, {\n                to: seeIfValidTonAddress(recipient.address.address)\n                    ? recipient.address.address\n                    : recipient.toAccount.address,\n                amount: amount,\n                isMax,\n                payload: comment ? { type: 'comment', value: comment } : undefined\n            });\n            if (amount.asset.id === TON_ASSET.id) {\n                track2('send-ton');\n            }\n            else {\n                track2('send-jetton');\n            }\n        }\n        catch (e) {\n            await notifyError(e);\n        }\n        await invalidateAccountQueries();\n        return true;\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { toTronAsset } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { jettonToTonAsset } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { parseTonTransferWithAddress } from '@tonkeeper/core/dist/service/deeplinkingService';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport BigNumber from 'bignumber.js';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { openIosKeyboard } from '../../hooks/ios';\nimport { useTranslation } from '../../hooks/translation';\nimport { useIsFullWidthMode } from '../../hooks/useIsFullWidthMode';\nimport { useJettonList } from '../../state/jetton';\nimport { useTronBalances } from '../../state/tron/tron';\nimport { Notification, NotificationFooter, NotificationFooterPortal, NotificationHeader, NotificationHeaderPortal } from '../Notification';\nimport { ConfirmTransferView } from './ConfirmTransferView';\nimport { ConfirmViewButtons, ConfirmViewButtonsSlot, ConfirmViewTitle, ConfirmViewTitleSlot } from './ConfirmView';\nimport { RecipientView, useGetToAccount } from './RecipientView';\nimport { AmountView } from './amountView/AmountView';\nimport { AmountHeaderBlock, AmountMainButton, ConfirmMainButton, MainButton, RecipientHeaderBlock, Wrapper, childFactoryCreator, duration, makeTransferInitData, TransferViewHeaderBlock, makeTransferInitAmountState } from './common';\nimport { MultisigOrderFormView } from './MultisigOrderFormView';\nimport { useIsActiveAccountMultisig } from '../../state/multisig';\nimport { ConfirmMultisigNewTransferView } from './ConfirmMultisigNewTransferView';\nimport { useAnalyticsTrack } from '../../hooks/amplitude';\nconst SendContent = ({ onClose, chain, initRecipient, initAmountState }) => {\n    const sdk = useAppSdk();\n    const { standalone, ios, extension } = useAppContext();\n    const { t } = useTranslation();\n    const { data: filter } = useJettonList();\n    const isFullWidth = useIsFullWidthMode();\n    const isActiveAccountMultisig = useIsActiveAccountMultisig();\n    const track = useAnalyticsTrack();\n    const [view, _setView] = useState(isActiveAccountMultisig ? 'multisig-settings' : 'recipient');\n    const setView = useCallback((val) => {\n        if (!isActiveAccountMultisig && val === 'multisig-settings') {\n            val = 'recipient';\n        }\n        _setView(val);\n    }, [_setView, isActiveAccountMultisig]);\n    const [right, setRight] = useState(true);\n    const [multisigTimeout, setMultisigTimeout] = useState();\n    const [recipient, _setRecipient] = useState(initRecipient);\n    const [amountViewState, setAmountViewState] = useState(initAmountState);\n    useEffect(() => {\n        if (initRecipient) {\n            track('send_click', {\n                from: 'send_amount',\n                token: amountViewState?.token?.symbol ?? 'ton'\n            });\n        }\n    }, []);\n    const { data: tronBalances } = useTronBalances();\n    const { mutateAsync: getAccountAsync, isLoading: isAccountLoading } = useGetToAccount();\n    const setRecipient = (value) => {\n        if (amountViewState?.token?.blockchain &&\n            amountViewState?.token?.blockchain !== value.address.blockchain) {\n            setAmountViewState(undefined);\n        }\n        _setRecipient(value);\n        if (tronBalances && value.address.blockchain === BLOCKCHAIN_NAME.TRON) {\n            setAmountViewState({ token: toTronAsset(tronBalances.balances[0]) });\n        }\n    };\n    const onRecipient = (data) => {\n        setRight(true);\n        setRecipient(data);\n        setView('amount');\n        track('send_click', {\n            from: 'send_recipient',\n            token: amountViewState?.token?.symbol ?? 'ton'\n        });\n    };\n    const onConfirmAmount = (data) => {\n        setRight(true);\n        setAmountViewState(data);\n        setView('confirm');\n        track('send_confirm', {\n            from: 'send_amount',\n            token: amountViewState?.token?.symbol ?? 'ton'\n        });\n    };\n    const backToRecipient = (data) => {\n        setRight(false);\n        setAmountViewState(data);\n        setView('recipient');\n    };\n    const backToAmount = () => {\n        if (ios)\n            openIosKeyboard('decimal');\n        setRight(false);\n        setView('amount');\n    };\n    const processTron = (address) => {\n        const item = { address: address, blockchain: BLOCKCHAIN_NAME.TRON };\n        setRecipient({\n            address: item,\n            done: true\n        });\n        setView('amount');\n    };\n    const processRecipient = async ({ address, text }) => {\n        const item = { address: address, blockchain: BLOCKCHAIN_NAME.TON };\n        const toAccount = await getAccountAsync(item);\n        const done = !toAccount.memoRequired ? true : toAccount.memoRequired && text ? true : false;\n        setRecipient({\n            address: item,\n            toAccount,\n            comment: text ?? '',\n            done\n        });\n        if (done) {\n            setView('amount');\n        }\n    };\n    const processJetton = useCallback(async ({ amount: a, jetton }) => {\n        if (jetton && filter) {\n            let actualAsset;\n            try {\n                actualAsset = jettonToTonAsset(jetton, filter);\n            }\n            catch (e) {\n                sdk.uiEvents.emit('copy', {\n                    method: 'copy',\n                    params: t('Unexpected_QR_Code')\n                });\n                return false;\n            }\n            const assetAmount = new AssetAmount({\n                asset: actualAsset,\n                weiAmount: a || '0'\n            });\n            setAmountViewState({\n                coinValue: assetAmount.relativeAmount,\n                token: actualAsset,\n                inFiat: false,\n                isMax: false\n            });\n        }\n        else {\n            setAmountViewState({\n                coinValue: a ? shiftedDecimals(a) : new BigNumber('0'),\n                token: initAmountState?.token,\n                inFiat: false,\n                isMax: false\n            });\n        }\n        return true;\n    }, [sdk, filter, initAmountState?.token]);\n    const onScan = async (signature) => {\n        const param = parseTonTransferWithAddress({ url: signature });\n        if (param) {\n            const ok = await processJetton(param);\n            if (ok) {\n                await processRecipient(param);\n            }\n            return;\n        }\n        // TODO: ENABLE TRON\n        // if (seeIfValidTronAddress(signature)) {\n        //     return processTron(signature);\n        // }\n        return sdk.uiEvents.emit('copy', {\n            method: 'copy',\n            params: t('Unexpected_QR_Code')\n        });\n    };\n    const multisigSettingsRef = useRef(null);\n    const recipientRef = useRef(null);\n    const amountRef = useRef(null);\n    const confirmRef = useRef(null);\n    const nodeRef = {\n        'multisig-settings': multisigSettingsRef,\n        recipient: recipientRef,\n        amount: amountRef,\n        confirm: confirmRef\n    }[view];\n    const assetAmount = useMemo(() => {\n        if (!amountViewState?.token || !amountViewState?.coinValue) {\n            return null;\n        }\n        return AssetAmount.fromRelativeAmount({\n            asset: amountViewState.token,\n            amount: amountViewState.coinValue\n        });\n    }, [amountViewState?.token?.id, amountViewState?.coinValue]);\n    return (_jsx(Wrapper, { standalone: standalone, extension: extension, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(right), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                    setTimeout(done, duration);\n                }, children: status => (_jsxs(\"div\", { ref: nodeRef, children: [view === 'multisig-settings' && (_jsx(MultisigOrderFormView, { onSubmit: val => {\n                                setRight(true);\n                                setMultisigTimeout(val.lifetime);\n                                setView('recipient');\n                            }, isAnimationProcess: status === 'exiting', Header: () => (_jsx(TransferViewHeaderBlock, { title: t('multisig_create_order_title'), onClose: onClose })), MainButton: MainButton })), view === 'recipient' && (_jsx(RecipientView, { data: recipient, setRecipient: onRecipient, onScan: onScan, keyboard: \"decimal\", isExternalLoading: isAccountLoading, acceptBlockchains: chain ? [chain] : undefined, MainButton: MainButton, HeaderBlock: () => (_jsx(RecipientHeaderBlock, { onBack: isActiveAccountMultisig\n                                    ? () => {\n                                        setRight(false);\n                                        setView('multisig-settings');\n                                    }\n                                    : undefined, title: t('transaction_recipient'), onClose: onClose })), isAnimationProcess: status === 'exiting' })), view === 'amount' && (_jsx(AmountView, { defaults: amountViewState, onClose: onClose, onBack: backToRecipient, recipient: recipient, onConfirm: onConfirmAmount, MainButton: AmountMainButton, HeaderBlock: AmountHeaderBlock, isAnimationProcess: status === 'exiting' })), view === 'confirm' &&\n                            (isActiveAccountMultisig ? (_jsxs(ConfirmMultisigNewTransferView, { onClose: onClose, onBack: backToAmount, recipient: recipient, assetAmount: AssetAmount.fromRelativeAmount({\n                                    asset: amountViewState.token,\n                                    amount: amountViewState.coinValue\n                                }), isMax: amountViewState.isMax, ttl: multisigTimeout, children: [status !== 'exiting' && isFullWidth && (_jsx(ConfirmViewTitleSlot, { children: _jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(ConfirmViewTitle, {}) }) }) })), status !== 'exiting' && isFullWidth && (_jsx(ConfirmViewButtonsSlot, { children: _jsx(NotificationFooterPortal, { children: _jsx(NotificationFooter, { children: _jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton }) }) }) }))] })) : (_jsxs(ConfirmTransferView, { onClose: onClose, onBack: backToAmount, recipient: recipient, assetAmount: assetAmount, isMax: amountViewState.isMax, children: [status !== 'exiting' && isFullWidth && (_jsx(ConfirmViewTitleSlot, { children: _jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(ConfirmViewTitle, {}) }) }) })), status !== 'exiting' && isFullWidth && (_jsx(ConfirmViewButtonsSlot, { children: _jsx(NotificationFooterPortal, { children: _jsx(NotificationFooter, { children: _jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton }) }) }) }))] })))] })) }, view) }) }));\n};\nconst SendActionNotification = () => {\n    const [open, setOpen] = useState(false);\n    const [chain, setChain] = useState(undefined);\n    const [tonTransfer, setTonTransfer] = useState(undefined);\n    const { data: jettons } = useJettonList();\n    const { mutateAsync: getAccountAsync, reset } = useGetToAccount();\n    const sdk = useAppSdk();\n    const track = useAnalyticsTrack();\n    useEffect(() => {\n        const handler = (options) => {\n            reset();\n            const transfer = options.params;\n            setChain(options.params.chain);\n            if (transfer.address) {\n                getAccountAsync({ address: transfer.address }).then(account => {\n                    setTonTransfer(makeTransferInitData(transfer, account, jettons));\n                    setOpen(true);\n                });\n            }\n            else {\n                setTonTransfer({ initAmountState: makeTransferInitAmountState(transfer, jettons) });\n                setOpen(true);\n            }\n            track('send_open', { from: transfer.from });\n        };\n        sdk.uiEvents.on('transfer', handler);\n        return () => {\n            sdk.uiEvents.off('transfer', handler);\n        };\n    }, [jettons, track]);\n    const onClose = useCallback(() => {\n        setTonTransfer(undefined);\n        setOpen(false);\n    }, []);\n    const Content = useCallback(() => {\n        if (!open)\n            return undefined;\n        return (_jsx(SendContent, { onClose: onClose, chain: chain, initAmountState: tonTransfer?.initAmountState, initRecipient: tonTransfer?.initRecipient }));\n    }, [open, tonTransfer, chain]);\n    return (_jsx(Notification, { isOpen: open, handleClose: onClose, hideButton: true, backShadow: true, footer: _jsx(_Fragment, {}), children: Content }));\n};\nexport default SendActionNotification;\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["ConfirmTransferView","_ref","isMax","assetAmount","rest","api","useActiveApi","operationType","useMemo","type","asset","assetWeiBalance","useAssetWeiBalance","assetAmountPatched","setAssetAmountPatched","useState","data","availableSendersChoices","useAvailableSendersChoices","useEffect","onSenderTypeChange","selectedSenderType","estimation","useEstimateTransfer","recipient","amount","senderType","mutation","useSendTransfer","assetAddress","isTonAsset","tonAssetAddressToString","address","undefined","shouldPatchAmount","TON_ASSET","tokenToTonRate","useQuery","async","response","RatesApi","tonApiV2","getRates","tokens","currencies","Object","values","rates","prices","TON","enabled","fee","gaslessApproximateFee","k","id","TON_USDT_ASSET","relativeAmount","shiftedDecimals","BigNumber","JettonEncoder","jettonTransferAmount","toString","multipliedBy","div","AssetAmount","fromRelativeAmount","weiAmount","minus","toFixed","_jsx","ConfirmView","SentenceInput","styled","input","_templateObject","_taggedTemplateLiteral","props","theme","textPrimary","Sentence","React","ref","value","setValue","inputSize","autoComplete","style","fontSize","concat","size","width","inputMode","onChange","event","target","displayName","AssetValue","buttonTertiaryBackground","cornerMedium","DownIconWrapper","span","_templateObject2","iconSecondary","AssetImage","img","_templateObject3","cornerFull","AssetInfo","_templateObject4","Amount","Body1","_templateObject5","textSecondary","Icon","_templateObject6","accentBlue","AssetDropDown","_info$balance","onClose","jetton","jettons","setJetton","info","format","useFormatCoinValue","useRef","_ref$current$parentEl","current","parentElement","scrollIntoView","behavior","_jsxs","ListBlock","margin","dropDown","children","ListItem","onClick","CryptoCurrency","ListItemPayload","src","Label1","balance","DoneIcon","balances","map","item","image","symbol","decimals","AssetSelect","_ref2","DropDown","center","payload","getJettonSymbol","DownIcon","useButtonPosition","blockRef","ios","standalone","useAppContext","height","window","innerHeight","resizeHandler","button","this","bottom","Math","max","labelHeight","min","viewport","visualViewport","setTimeout","call","addEventListener","removeEventListener","blurHandler","defaultSize","formatStringToInput","toFormat","groupSeparator","getGroupSeparator","decimalSeparator","getDecimalSeparator","amountStateReducer","state","action","kind","inputValue","coinValue","token","inFiat","fiatValue","decimalPlaces","ROUND_FLOOR","_payload$prices","_payload$prices2","replaceTypedDecimalSeparator","seeIfValueValid","isNumeric","formatSendValue","inputAmount","inputToBigNumber","_state$fiatValue$deci","_state$fiatValue","AmountView","onBack","onConfirm","defaults","MainButton","HeaderBlock","isAnimationProcess","t","useTranslation","sdk","useAppSdk","fiat","blockchain","shouldHideHeaderAndFooter","useIsFullWidthMode","useJettonList","useWalletAccountInfo","amountState","dispatch","useReducer","toInitAmountState","_defaults$inFiat","_defaults$inputValue","_defaults$coinValue","_defaults$isMax","BLOCKCHAIN_NAME","TRON_USDT_ASSET","tokenRate","isLoading","rateLoading","useRate","TRON","legacyTonAssetId","userFriendly","toTokenRateSymbol","balanceLoading","useUserAssetBalance","refBlock","refButton","useAutoFocusOnChange","timeout","focus","clearTimeout","setFontSize","useLayoutEffect","getInputSize","parent","clientWidth","getTextWidth","round","length","toggleFiat","useCallback","onInput","onMax","onJetton","jettonToTonAsset","remaining","enoughBalance","gte","isValid","isGreaterThan","handleBack","handleSubmit","hapticNotification","FullHeightBlock","onSubmit","e","stopPropagation","preventDefault","NotificationHeaderPortal","NotificationHeader","SubTitle","replace","RecipientName","RecipientAddress","AmountBlock","SelectCenter","AssetBadge","InputBlock","Symbol","SecondaryAmount","MaxRow","MaxButton","maxValue","Remaining","formatter","RemainingInvalid","Gap","NotificationFooterPortal","NotificationFooter","isDisabled","multisigEstimateSenderChoice","ttlSeconds","MultisigTransferDetailsStyled","MultisigTransferDetails","ConfirmMultisigNewTransferView","ttl","signerWallet","useActiveMultisigAccountHost","multisigInfo","useActiveMultisigWalletInfo","getSender","useGetEstimationSender","getSenderKey","useToQueryKeyPart","transferService","useTonAssetTransferService","sender","comment","estimate","to","seeIfValidTonAddress","toAccount","refetchOnMount","useEstimateNewMultisigTransfer","notifyError","useNotifyErrorHandle","useGetSender","track2","useTransactionAnalytics","mutateAsync","invalidateAccountQueries","useInvalidateActiveWalletQueries","useMutation","Number","send","useSendNewMultisigTransfer","ConfirmViewAdditionalBottomSlot","status","signedWallets","threshold","pendingWallets","signers","hostAddress","rawAddress","secondsLeft","SendContent","_amountViewState$toke9","chain","initRecipient","initAmountState","extension","filter","isFullWidth","isActiveAccountMultisig","useIsActiveAccountMultisig","track","useAnalyticsTrack","view","_setView","setView","val","right","setRight","multisigTimeout","setMultisigTimeout","_setRecipient","amountViewState","setAmountViewState","_amountViewState$toke","_amountViewState$toke2","from","tronBalances","useTronBalances","getAccountAsync","isAccountLoading","useGetToAccount","setRecipient","_amountViewState$toke3","_amountViewState$toke4","toTronAsset","onRecipient","_amountViewState$toke5","_amountViewState$toke6","onConfirmAmount","_amountViewState$toke7","_amountViewState$toke8","backToRecipient","backToAmount","openIosKeyboard","processJetton","a","_ref3","actualAsset","uiEvents","emit","method","params","onScan","param","parseTonTransferWithAddress","url","signature","text","done","memoRequired","processRecipient","nodeRef","confirm","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","duration","MultisigOrderFormView","lifetime","Header","TransferViewHeaderBlock","title","RecipientView","keyboard","isExternalLoading","acceptBlockchains","RecipientHeaderBlock","AmountMainButton","AmountHeaderBlock","ConfirmViewTitleSlot","ConfirmViewTitle","ConfirmViewButtonsSlot","ConfirmViewButtons","ConfirmMainButton","SendActionNotification","open","setOpen","setChain","tonTransfer","setTonTransfer","reset","handler","options","transfer","then","account","makeTransferInitData","makeTransferInitAmountState","on","off","Content","Notification","isOpen","handleClose","hideButton","backShadow","footer","_Fragment","getChildMapping","mapFn","result","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","obj","_React$Component","context","_this","handleExited","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","propTypes","defaultProps"],"sourceRoot":""}