{"version":3,"file":"static/js/338.07f7a5a2.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/activity/ton/ActivityActionDetails.js","../../../packages/uikit/dist/components/activity/ton/StakeNotifications.js","../../../packages/uikit/dist/components/activity/ton/ActivityNotification.js","../../../packages/uikit/dist/components/activity/tron/ActivityActionDetails.js","../../../packages/uikit/dist/components/activity/tron/ActivityNotification.js","../../../packages/uikit/dist/components/activity/tron/TronActivityAction.js","../../../packages/uikit/dist/components/activity/tron/TronActivityEvents.js","../../../packages/uikit/dist/components/activity/ActivityGroup.js","../../../packages/uikit/dist/hooks/useFetchNext.js","../../../packages/uikit/dist/state/mixedActivity.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useFormatCoinValue } from '../../../hooks/balance';\nimport { useTranslation } from '../../../hooks/translation';\nimport { useFormatFiat, useRate } from '../../../state/rates';\nimport { ListBlock } from '../../List';\nimport { ActivityDetailsHeader, Amount, FailedDetail, TransferComment, TransferOpCode } from '../ActivityDetailsLayout';\nimport { ActionBeneficiaryDetails, ActionDate, ActionDetailsBlock, ActionExtraDetails, ActionRecipientDetails, ActionSenderDetails, ActionTransactionDetails, ErrorActivityNotification, Title } from '../NotificationCommon';\nimport { useActiveWallet } from '../../../state/wallet';\nconst TonTransferActionContent = ({ tonTransfer, timestamp, event, isScam, status }) => {\n    const wallet = useActiveWallet();\n    const { data } = useRate(CryptoCurrency.TON);\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(tonTransfer.amount));\n    const kind = tonTransfer.recipient.address === wallet.rawAddress ? 'received' : 'send';\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsx(ActivityDetailsHeader, { isScam: isScam, amount: tonTransfer.amount, symbol: CryptoCurrency.TON, total: fiatAmount, timestamp: timestamp, kind: kind, status: status }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [kind === 'received' && _jsx(ActionSenderDetails, { sender: tonTransfer.sender }), kind === 'send' && _jsx(ActionRecipientDetails, { recipient: tonTransfer.recipient }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra }), _jsx(TransferComment, { comment: isScam ? undefined : tonTransfer.comment })] })] }));\n};\nexport const TonTransferActionNotification = ({ action, timestamp, event, isScam }) => {\n    const { tonTransfer } = action;\n    if (!tonTransfer) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    return (_jsx(TonTransferActionContent, { tonTransfer: tonTransfer, event: event, isScam: isScam, timestamp: timestamp, status: action.status }));\n};\nexport const AuctionBidActionDetails = ({ action, timestamp, event }) => {\n    const { t } = useTranslation();\n    const { auctionBid } = action;\n    const format = useFormatCoinValue();\n    const { data } = useRate(CryptoCurrency.TON);\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(auctionBid?.amount.value ?? 0));\n    if (!auctionBid) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: t('transaction_type_bid') }), _jsxs(Amount, { children: [format(auctionBid.amount.value), \" \", auctionBid.amount.tokenName] }), fiatAmount && _jsxs(Amount, { children: [\"\\u2248\\u2009\", fiatAmount] }), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp }), _jsx(FailedDetail, { status: action.status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionBeneficiaryDetails, { beneficiary: auctionBid.auction }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra })] })] }));\n};\nexport const DomainRenewActionDetails = ({ action, timestamp, event }) => {\n    const { domainRenew } = action;\n    if (!domainRenew) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: domainRenew.domain }), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp }), _jsx(FailedDetail, { status: action.status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionSenderDetails, { sender: domainRenew.renewer, bounced: true }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra })] })] }));\n};\nexport const SmartContractExecActionDetails = ({ action, timestamp, event }) => {\n    const { smartContractExec } = action;\n    const format = useFormatCoinValue();\n    const { data } = useRate(CryptoCurrency.TON);\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(smartContractExec?.tonAttached ?? 0));\n    if (!smartContractExec) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsxs(Title, { children: [\"-\\u2009\", format(smartContractExec.tonAttached), \" \", CryptoCurrency.TON] }), fiatAmount && _jsxs(Amount, { children: [\"\\u2248\\u2009\", fiatAmount] }), _jsx(ActionDate, { kind: \"call\", timestamp: timestamp }), _jsx(FailedDetail, { status: action.status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionRecipientDetails, { recipient: smartContractExec.contract, bounced: true }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra }), _jsx(TransferOpCode, { operation: smartContractExec.operation })] })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useFormatCoinValue } from '../../../hooks/balance';\nimport { useTranslation } from '../../../hooks/translation';\nimport { useFormatFiat, useRate } from '../../../state/rates';\nimport { ListBlock } from '../../List';\nimport { Amount, FailedDetail } from '../ActivityDetailsLayout';\nimport { ActionDate, ActionDetailsBlock, ActionExtraDetails, ActionPoolDetails, ActionTransactionDetails, ErrorActivityNotification, Title } from '../NotificationCommon';\nconst DepositStakeActionContent = ({ depositStake, timestamp, event, status }) => {\n    const { t } = useTranslation();\n    const { data } = useRate(CryptoCurrency.TON);\n    const format = useFormatCoinValue();\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(depositStake.amount));\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: t('staking_deposit') }), _jsxs(Amount, { children: [\"-\\u2009\", format(depositStake.amount), \" \", CryptoCurrency.TON] }), _jsxs(Amount, { children: [\"\\u2248\\u2009\", fiatAmount] }), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp }), _jsx(FailedDetail, { status: status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionPoolDetails, { pool: depositStake.pool }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra })] })] }));\n};\nexport const DepositStakeActionNotification = ({ action, timestamp, event, isScam }) => {\n    const { depositStake } = action;\n    if (!depositStake) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    else {\n        return (_jsx(DepositStakeActionContent, { depositStake: depositStake, timestamp: timestamp, event: event, isScam: isScam, status: action.status }));\n    }\n};\nconst WithdrawStakeActionContent = ({ withdrawStake, timestamp, event, status }) => {\n    const { t } = useTranslation();\n    const { data } = useRate(CryptoCurrency.TON);\n    const format = useFormatCoinValue();\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(withdrawStake.amount));\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: t('staking_withdraw') }), _jsxs(Amount, { children: [\"+\\u2009\", format(withdrawStake.amount), \" \", CryptoCurrency.TON] }), _jsxs(Amount, { children: [\"\\u2248\\u2009\", fiatAmount] }), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp }), _jsx(FailedDetail, { status: status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionPoolDetails, { pool: withdrawStake.pool }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra })] })] }));\n};\nexport const WithdrawStakeActionNotification = ({ action, timestamp, event, isScam }) => {\n    const { withdrawStake } = action;\n    if (!withdrawStake) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    else {\n        return (_jsx(WithdrawStakeActionContent, { withdrawStake: withdrawStake, timestamp: timestamp, event: event, isScam: isScam, status: action.status }));\n    }\n};\nconst WithdrawRequestStakeActionContent = ({ withdrawStakeRequest, timestamp, event, status }) => {\n    const { t } = useTranslation();\n    const { data } = useRate(CryptoCurrency.TON);\n    const format = useFormatCoinValue();\n    const { fiatAmount } = useFormatFiat(data, formatDecimals(withdrawStakeRequest.amount ?? 0));\n    return (_jsxs(ActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: t('activityActionModal_withdrawal_request') }), withdrawStakeRequest.amount && (_jsxs(_Fragment, { children: [_jsxs(Amount, { children: [\"+\\u2009\", format(withdrawStakeRequest.amount), \" \", CryptoCurrency.TON] }), _jsxs(Amount, { children: [\"\\u2248\\u2009\", fiatAmount] })] })), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp }), _jsx(FailedDetail, { status: status })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionPoolDetails, { pool: withdrawStakeRequest.pool }), _jsx(ActionTransactionDetails, { eventId: event.eventId }), _jsx(ActionExtraDetails, { extra: event.extra })] })] }));\n};\nexport const WithdrawRequestStakeActionNotification = ({ action, timestamp, event, isScam }) => {\n    const { withdrawStakeRequest } = action;\n    if (!withdrawStakeRequest) {\n        return _jsx(ErrorActivityNotification, { event: event });\n    }\n    else {\n        return (_jsx(WithdrawRequestStakeActionContent, { withdrawStakeRequest: withdrawStakeRequest, timestamp: timestamp, event: event, isScam: isScam, status: action.status }));\n    }\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { Notification } from '../../Notification';\nimport { ErrorActivityNotification } from '../NotificationCommon';\nimport { AuctionBidActionDetails, DomainRenewActionDetails, SmartContractExecActionDetails, TonTransferActionNotification } from './ActivityActionDetails';\nimport { ContractDeployActionDetails } from './ContractDeployAction';\nimport { JettonBurnActionNotification, JettonMintActionNotification, JettonTransferActionNotification, SwapTokensActionDetails } from './JettonNotifications';\nimport { NftItemTransferActionDetails, NftPurchaseActionDetails } from './NftActivity';\nimport { DepositStakeActionNotification, WithdrawRequestStakeActionNotification, WithdrawStakeActionNotification } from './StakeNotifications';\nimport { SubscribeActionDetails, UnSubscribeActionDetails } from './SubscribeAction';\nconst ActivityContent = props => {\n    switch (props.action.type) {\n        case 'TonTransfer':\n            return _jsx(TonTransferActionNotification, { ...props });\n        case 'NftItemTransfer':\n            return _jsx(NftItemTransferActionDetails, { ...props });\n        case 'ContractDeploy':\n            return _jsx(ContractDeployActionDetails, { ...props });\n        case 'UnSubscribe':\n            return _jsx(UnSubscribeActionDetails, { ...props });\n        case 'Subscribe':\n            return _jsx(SubscribeActionDetails, { ...props });\n        case 'AuctionBid':\n            return _jsx(AuctionBidActionDetails, { ...props });\n        case 'DomainRenew':\n            return _jsx(DomainRenewActionDetails, { ...props });\n        case 'SmartContractExec':\n            return _jsx(SmartContractExecActionDetails, { ...props });\n        case 'JettonTransfer':\n            return _jsx(JettonTransferActionNotification, { ...props });\n        case 'JettonSwap':\n            return _jsx(SwapTokensActionDetails, { ...props });\n        case 'JettonMint':\n            return _jsx(JettonMintActionNotification, { ...props });\n        case 'JettonBurn':\n            return _jsx(JettonBurnActionNotification, { ...props });\n        case 'DepositStake':\n            return _jsx(DepositStakeActionNotification, { ...props });\n        case 'WithdrawStake':\n            return _jsx(WithdrawStakeActionNotification, { ...props });\n        case 'WithdrawStakeRequest':\n            return _jsx(WithdrawRequestStakeActionNotification, { ...props });\n        case 'NftPurchase':\n            return _jsx(NftPurchaseActionDetails, { ...props });\n        case 'Unknown':\n            return _jsx(ErrorActivityNotification, { event: props.event });\n        default: {\n            console.log(props);\n            return (_jsx(ErrorActivityNotification, { event: props.event, children: props.action.type }));\n        }\n    }\n};\nexport const ActivityNotification = ({ value, handleClose }) => {\n    const Content = useCallback(() => {\n        if (!value)\n            return undefined;\n        return (_jsx(ActivityContent, { isScam: value.isScam, action: value.action, timestamp: value.timestamp, event: value.event }));\n    }, [value, handleClose]);\n    return (_jsx(Notification, { isOpen: !!value, handleClose: handleClose, children: Content }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMemo } from 'react';\nimport { useTranslation } from '../../../hooks/translation';\nimport { useFormatFiat, useRate } from '../../../state/rates';\nimport { ListBlock } from '../../List';\nimport { ActivityDetailsHeader } from '../ActivityDetailsLayout';\nimport { ActionDate, ActionDeployerAddress, ActionRecipientAddress, ActionSenderAddress, ActionTransactionDetails, ActionTronFeeDetails, Title, TronActionDetailsBlock, TronErrorActivityNotification } from '../NotificationCommon';\nconst TronSendTRC20ActionContent = ({ sendTRC20, timestamp, event }) => {\n    const amount = useMemo(() => formatDecimals(sendTRC20.amount, sendTRC20.token.decimals), [sendTRC20]);\n    const { data } = useRate(sendTRC20.token.symbol);\n    const { fiatAmount } = useFormatFiat(data, amount);\n    return (_jsxs(TronActionDetailsBlock, { event: event, children: [_jsx(ActivityDetailsHeader, { amount: sendTRC20.amount, decimals: sendTRC20.token.decimals, symbol: sendTRC20.token.symbol, total: fiatAmount, timestamp: timestamp, kind: \"send\" }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionRecipientAddress, { address: sendTRC20.recipient }), _jsx(ActionTransactionDetails, { eventId: event.txHash }), event.fees && _jsx(ActionTronFeeDetails, { fees: event.fees })] })] }));\n};\nexport const TronSendTRC20ActionNotification = ({ action, timestamp, event }) => {\n    const { sendTRC20 } = action;\n    if (!sendTRC20) {\n        return _jsx(TronErrorActivityNotification, { event: event });\n    }\n    return _jsx(TronSendTRC20ActionContent, { sendTRC20: sendTRC20, event: event, timestamp: timestamp });\n};\nconst TronReceiveTRC20ActionContent = ({ receiveTRC20, timestamp, event }) => {\n    const amount = useMemo(() => formatDecimals(receiveTRC20.amount, receiveTRC20.token.decimals), [receiveTRC20]);\n    const { data } = useRate(receiveTRC20.token.symbol);\n    const { fiatAmount } = useFormatFiat(data, amount);\n    return (_jsxs(TronActionDetailsBlock, { event: event, children: [_jsx(ActivityDetailsHeader, { amount: receiveTRC20.amount, decimals: receiveTRC20.token.decimals, symbol: receiveTRC20.token.symbol, total: fiatAmount, timestamp: timestamp, kind: \"received\" }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionSenderAddress, { address: receiveTRC20.sender }), _jsx(ActionTransactionDetails, { eventId: event.txHash })] })] }));\n};\nexport const TronReceiveTRC20ActionNotification = ({ action, timestamp, event }) => {\n    const { receiveTRC20 } = action;\n    if (!receiveTRC20) {\n        return _jsx(TronErrorActivityNotification, { event: event });\n    }\n    return (_jsx(TronReceiveTRC20ActionContent, { receiveTRC20: receiveTRC20, event: event, timestamp: timestamp }));\n};\nexport const ContractDeployActionDetails = ({ action, timestamp, event }) => {\n    const { t } = useTranslation();\n    const { contractDeploy } = action;\n    if (!contractDeploy) {\n        return _jsx(TronErrorActivityNotification, { event: event });\n    }\n    return (_jsxs(TronActionDetailsBlock, { event: event, children: [_jsxs(\"div\", { children: [_jsx(Title, { children: t('transaction_type_wallet_initialized') }), _jsx(ActionDate, { kind: \"send\", timestamp: timestamp })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ActionDeployerAddress, { address: contractDeploy.ownerAddress }), _jsx(ActionTransactionDetails, { eventId: event.txHash }), event.fees && _jsx(ActionTronFeeDetails, { fees: event.fees })] })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { Notification } from '../../Notification';\nimport { TronErrorActivityNotification } from '../NotificationCommon';\nimport { ContractDeployActionDetails, TronReceiveTRC20ActionNotification, TronSendTRC20ActionNotification } from './ActivityActionDetails';\nconst ActivityContent = props => {\n    switch (props.action.type) {\n        case 'ReceiveTRC20':\n            return _jsx(TronReceiveTRC20ActionNotification, { ...props });\n        case 'SendTRC20':\n            return _jsx(TronSendTRC20ActionNotification, { ...props });\n        case 'ContractDeploy':\n            return _jsx(ContractDeployActionDetails, { ...props });\n        default: {\n            console.log(props);\n            return (_jsx(TronErrorActivityNotification, { event: props.event, children: props.action.type }));\n        }\n    }\n};\nexport const TronActivityNotification = ({ value, handleClose }) => {\n    const Content = useCallback(() => {\n        if (!value)\n            return undefined;\n        return (_jsx(ActivityContent, { action: value.action, timestamp: value.timestamp, event: value.event }));\n    }, [value, handleClose]);\n    return (_jsx(Notification, { isOpen: !!value, handleClose: handleClose, children: Content }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport { useFormatCoinValue } from '../../../hooks/balance';\nimport { useTranslation } from '../../../hooks/translation';\nimport { ReceiveActivityAction, SendActivityAction, WalletDeployActivityAction } from '../ActivityActionLayout';\nimport { ErrorAction } from '../CommonAction';\nconst ReceiveTRC20 = ({ receiveTRC20, date }) => {\n    const format = useFormatCoinValue();\n    return (_jsx(ReceiveActivityAction, { amount: format(receiveTRC20.amount, receiveTRC20.token.decimals), symbol: receiveTRC20.token.symbol, sender: toShortValue(receiveTRC20.sender), date: date }));\n};\nconst SendTRC20 = ({ sendTRC20, date }) => {\n    const format = useFormatCoinValue();\n    return (_jsx(SendActivityAction, { amount: format(sendTRC20.amount, sendTRC20.token.decimals), symbol: sendTRC20.token.symbol, recipient: toShortValue(sendTRC20.recipient), date: date }));\n};\nconst ContractDeploy = ({ contractDeploy, date }) => {\n    return (_jsx(WalletDeployActivityAction, { address: toShortValue(contractDeploy.ownerAddress), date: date }));\n};\nexport const TronActivityAction = ({ action, date }) => {\n    const { t } = useTranslation();\n    if (action.receiveTRC20) {\n        return _jsx(ReceiveTRC20, { receiveTRC20: action.receiveTRC20, date: date });\n    }\n    if (action.sendTRC20) {\n        return _jsx(SendTRC20, { sendTRC20: action.sendTRC20, date: date });\n    }\n    if (action.contractDeploy) {\n        return _jsx(ContractDeploy, { contractDeploy: action.contractDeploy, date: date });\n    }\n    console.log(action);\n    return _jsx(ErrorAction, { children: t('txActions_signRaw_types_unknownTransaction') });\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ListItem } from '../../List';\nimport { ProgressIcon } from '../ActivityLayout';\nimport { TronActivityAction } from './TronActivityAction';\nexport const TronActivityEvents = ({ event, date, timestamp, setTronAction }) => {\n    return (_jsx(_Fragment, { children: event.actions.map((action, index) => (_jsxs(ListItem, { onClick: () => setTronAction({\n                action,\n                timestamp: timestamp,\n                event\n            }), children: [_jsx(TronActivityAction, { action: action, date: date }), event.inProgress && _jsx(ProgressIcon, {})] }, index))) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMemo, useState } from 'react';\nimport { formatActivityDate, getActivityTitle } from '../../state/activity';\nimport { getMixedActivityGroups } from '../../state/mixedActivity';\nimport { CoinHistorySkeleton, HistoryBlock, SkeletonListWithImages } from '../Skeleton';\nimport { Group, List, Title } from './ActivityLayout';\nimport { ActivityNotification } from './ton/ActivityNotification';\nimport { TonActivityEvents } from './ton/TonActivityEvents';\nimport { TronActivityNotification } from './tron/ActivityNotification';\nimport { TronActivityEvents } from './tron/TronActivityEvents';\nimport { useTranslation } from '../../hooks/translation';\nexport const ActivityList = ({ isFetched, isFetchingNextPage, tonEvents, tronEvents }) => {\n    const activity = useMemo(() => {\n        return getMixedActivityGroups(tonEvents, tronEvents);\n    }, [tonEvents, tronEvents]);\n    if (!isFetched) {\n        return _jsx(CoinHistorySkeleton, {});\n    }\n    return (_jsxs(HistoryBlock, { children: [_jsx(MixedActivityGroup, { items: activity }), isFetchingNextPage && _jsx(SkeletonListWithImages, { size: 3 })] }));\n};\nexport const MixedActivityGroup = ({ items }) => {\n    const [tonAction, seTonAction] = useState(undefined);\n    const [tronAction, setTronAction] = useState(undefined);\n    const { i18n } = useTranslation();\n    return (_jsxs(_Fragment, { children: [items.map(([eventKey, events]) => {\n                return (_jsxs(Group, { children: [_jsx(Title, { children: getActivityTitle(i18n.language, eventKey, events[0].timestamp) }), events.map(({ timestamp, event, key }) => {\n                            const date = formatActivityDate(i18n.language, eventKey, timestamp);\n                            return (_jsx(List, { children: event.kind === 'tron' ? (_jsx(TronActivityEvents, { event: event.event, date: date, timestamp: timestamp, setTronAction: setTronAction })) : event.kind === 'ton' ? (_jsx(TonActivityEvents, { event: event.event, date: date, timestamp: timestamp, setActivity: seTonAction })) : null }, key));\n                        })] }, eventKey));\n            }), _jsx(ActivityNotification, { value: tonAction, handleClose: () => seTonAction(undefined) }), _jsx(TronActivityNotification, { value: tronAction, handleClose: () => setTronAction(undefined) })] }));\n};\n","import { throttle } from '@tonkeeper/core/dist/utils/common';\nimport { useEffect } from 'react';\nexport const useFetchNext = (hasNextPage, isFetchingNextPage, fetchNextPage, standalone, ref) => {\n    useEffect(() => {\n        if (!hasNextPage)\n            return;\n        const element = standalone ? ref?.current : window;\n        if (!element)\n            return;\n        const handler = throttle(() => {\n            if (isFetchingNextPage)\n                return;\n            if (document.documentElement.className === 'is-locked')\n                return;\n            if (element === window) {\n                if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500) {\n                    fetchNextPage();\n                }\n            }\n            else {\n                const item = element;\n                if (item.scrollTop >= item.scrollHeight - window.innerHeight - 500) {\n                    fetchNextPage();\n                }\n            }\n        }, 50);\n        element.addEventListener('scroll', handler);\n        handler();\n        return () => {\n            element.removeEventListener('scroll', handler);\n        };\n    }, [hasNextPage, standalone, ref]);\n};\n","import { groupGenericActivity } from './activity';\nconst cutOffTronEvents = (tonEvents, tronEvents) => {\n    if (!tonEvents || !tonEvents.pages.length) {\n        return tronEvents;\n    }\n    if (tonEvents.pageParams.length) {\n        const pastPageParam = tonEvents.pageParams[tonEvents.pageParams.length - 1];\n        if (pastPageParam === undefined || pastPageParam === 0) {\n            return tronEvents;\n        }\n    }\n    const { events } = tonEvents.pages[tonEvents.pages.length - 1];\n    if (!events.length)\n        return tronEvents;\n    const lastEvents = events[events.length - 1];\n    const lastTime = lastEvents.timestamp * 1000;\n    return {\n        pageParams: tronEvents.pageParams,\n        pages: tronEvents.pages.map(page => {\n            return { ...page, events: page.events.filter(event => event.timestamp > lastTime) };\n        })\n    };\n};\nexport const getMixedActivity = (tonEvents, tronEvents) => {\n    const activity = [];\n    if (tonEvents) {\n        tonEvents.pages.forEach(page => {\n            const tonActivity = page.events.map(event => ({\n                timestamp: event.timestamp * 1000,\n                key: event.eventId,\n                event: { kind: 'ton', event }\n            }));\n            activity.push(...tonActivity);\n        });\n    }\n    if (tronEvents) {\n        const events = cutOffTronEvents(tonEvents, tronEvents);\n        events.pages.forEach(page => {\n            const tronActivity = page.events.map(event => ({\n                timestamp: event.timestamp,\n                key: `${event.txHash}-${event.actions.map(item => item.type).join('-')}`,\n                event: { kind: 'tron', event }\n            }));\n            activity.push(...tronActivity);\n        });\n    }\n    return activity;\n};\nexport const getMixedActivityGroups = (tonEvents, tronEvents) => {\n    return groupGenericActivity(getMixedActivity(tonEvents, tronEvents));\n};\n"],"names":["TonTransferActionContent","_ref","tonTransfer","timestamp","event","isScam","status","wallet","useActiveWallet","data","useRate","CryptoCurrency","TON","fiatAmount","useFormatFiat","formatDecimals","amount","kind","recipient","address","rawAddress","_jsxs","ActionDetailsBlock","children","_jsx","ActivityDetailsHeader","symbol","total","ListBlock","margin","fullWidth","ActionSenderDetails","sender","ActionRecipientDetails","ActionTransactionDetails","eventId","ActionExtraDetails","extra","TransferComment","comment","undefined","TonTransferActionNotification","_ref2","action","ErrorActivityNotification","AuctionBidActionDetails","_ref3","_auctionBid$amount$va","t","useTranslation","auctionBid","format","useFormatCoinValue","value","Title","Amount","tokenName","ActionDate","FailedDetail","ActionBeneficiaryDetails","beneficiary","auction","DomainRenewActionDetails","_ref4","domainRenew","domain","renewer","bounced","SmartContractExecActionDetails","_ref5","_smartContractExec$to","smartContractExec","tonAttached","contract","TransferOpCode","operation","DepositStakeActionContent","depositStake","ActionPoolDetails","pool","DepositStakeActionNotification","WithdrawStakeActionContent","withdrawStake","WithdrawStakeActionNotification","WithdrawRequestStakeActionContent","_withdrawStakeRequest","withdrawStakeRequest","_Fragment","WithdrawRequestStakeActionNotification","_ref6","ActivityContent","props","type","NftItemTransferActionDetails","ContractDeployActionDetails","UnSubscribeActionDetails","SubscribeActionDetails","JettonTransferActionNotification","SwapTokensActionDetails","JettonMintActionNotification","JettonBurnActionNotification","NftPurchaseActionDetails","console","log","ActivityNotification","handleClose","Content","useCallback","Notification","isOpen","TronSendTRC20ActionContent","sendTRC20","useMemo","token","decimals","TronActionDetailsBlock","ActionRecipientAddress","txHash","fees","ActionTronFeeDetails","TronSendTRC20ActionNotification","TronErrorActivityNotification","TronReceiveTRC20ActionContent","receiveTRC20","ActionSenderAddress","TronReceiveTRC20ActionNotification","contractDeploy","ActionDeployerAddress","ownerAddress","TronActivityNotification","ReceiveTRC20","date","ReceiveActivityAction","toShortValue","SendTRC20","SendActivityAction","ContractDeploy","WalletDeployActivityAction","TronActivityAction","ErrorAction","TronActivityEvents","setTronAction","actions","map","index","ListItem","onClick","inProgress","ProgressIcon","ActivityList","isFetched","isFetchingNextPage","tonEvents","tronEvents","activity","getMixedActivityGroups","HistoryBlock","MixedActivityGroup","items","SkeletonListWithImages","size","CoinHistorySkeleton","tonAction","seTonAction","useState","tronAction","i18n","eventKey","events","Group","getActivityTitle","language","key","formatActivityDate","List","TonActivityEvents","setActivity","useFetchNext","hasNextPage","fetchNextPage","standalone","ref","useEffect","element","current","window","handler","throttle","document","documentElement","className","innerHeight","scrollY","body","offsetHeight","item","scrollTop","scrollHeight","addEventListener","removeEventListener","groupGenericActivity","getMixedActivity","pages","forEach","page","tonActivity","push","cutOffTronEvents","length","pageParams","pastPageParam","lastTime","filter","tronActivity","concat","join"],"sourceRoot":""}