{"version":3,"file":"static/js/33.eb7343a5.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/transfer/nft/Common.js","../../../packages/uikit/dist/components/transfer/nft/ConfirmNftView.js","../../../packages/uikit/dist/components/transfer/nft/SendNftNotification.js","../../../packages/uikit/node_modules/react-transition-group/esm/utils/ChildMapping.js","../../../packages/uikit/node_modules/react-transition-group/esm/TransitionGroup.js","../../../packages/uikit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { formatAddress, toShortValue } from '@tonkeeper/core/dist/utils/common';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { ChevronLeftIcon } from '../../Icon';\nimport { ListBlock, ListItem, ListItemPayload } from '../../List';\nimport { NotificationCancelButton, NotificationTitleBlock } from '../../Notification';\nimport { Label1 } from '../../Text';\nimport { RoundedButton } from '../../fields/RoundedButton';\nimport { Label } from '../common';\nimport { useActiveTonNetwork } from '../../../state/wallet';\nexport const ConfirmHeaderBlock = ({ onBack, onClose }) => {\n    return (_jsxs(NotificationTitleBlock, { children: [_jsx(RoundedButton, { onClick: onBack, children: _jsx(ChevronLeftIcon, {}) }), _jsx(NotificationCancelButton, { handleClose: onClose })] }));\n};\nexport const NftDetailsBlock = ({ nftItem }) => {\n    const { t } = useTranslation();\n    const sdk = useAppSdk();\n    const network = useActiveTonNetwork();\n    return (_jsxs(ListBlock, { fullWidth: true, children: [nftItem.collection && (_jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.collection.address, network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_collection_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.collection.address, network, true)) })] }) })), _jsx(ListItem, { onClick: () => sdk.copyToClipboard(formatAddress(nftItem.address, network, true)), children: _jsxs(ListItemPayload, { children: [_jsx(Label, { children: t('NFT_item_id') }), _jsx(Label1, { children: toShortValue(formatAddress(nftItem.address, network, true)) })] }) })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Gap } from '../../Layout';\nimport { ListBlock } from '../../List';\nimport { FullHeightBlock } from '../../Notification';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { useTransactionAnalytics } from '../../../hooks/amplitude';\nimport { QueryKey } from '../../../libs/queryKey';\nimport { Image, ImageMock, Info, SendingTitle, Title } from '../Confirm';\nimport { ConfirmViewContext, ConfirmViewDetailsComment, ConfirmViewDetailsFee, ConfirmViewDetailsRecipient } from '../ConfirmView';\nimport { NftDetailsBlock } from './Common';\nimport { useAccountsState, useActiveAccount, useInvalidateActiveWalletQueries } from '../../../state/wallet';\nimport { useActiveMultisigAccountHost, useActiveMultisigWalletInfo, useIsActiveAccountMultisig } from '../../../state/multisig';\nimport { MultisigTransferDetails } from '../multisig/MultisigTransferDetails';\nimport { styled } from 'styled-components';\nimport { BATTERY_SENDER_CHOICE, EXTERNAL_SENDER_CHOICE, useAvailableSendersChoices, useGetEstimationSender, useGetSender } from '../../../hooks/blockchain/useSender';\nimport { useTonRawTransactionService } from '../../../hooks/blockchain/useBlockchainService';\nimport { NFTEncoder } from '@tonkeeper/core/dist/service/ton-blockchain/encoder/nft-encoder';\nimport BigNumber from 'bignumber.js';\nimport { comment } from '@ton/core';\nimport { useNotifyErrorHandle } from '../../../hooks/useNotification';\nimport { zeroFee } from '@tonkeeper/core/dist/service/ton-blockchain/utils';\nimport { useToQueryKeyPart } from '../../../hooks/useToQueryKeyPart';\nconst assetAmount = new AssetAmount({\n    asset: TON_ASSET,\n    weiAmount: 0\n});\nconst useNftTransferEstimation = (nftItem, data, selectedSenderType) => {\n    const account = useActiveAccount();\n    const accounts = useAccountsState();\n    const notifyError = useNotifyErrorHandle();\n    const senderChoice = useMemo(() => {\n        if (!selectedSenderType) {\n            return undefined;\n        }\n        if (account.type === 'ton-multisig') {\n            return { type: 'multisig', ttlSeconds: 5 * 60 };\n        }\n        if (selectedSenderType === 'external') {\n            return EXTERNAL_SENDER_CHOICE;\n        }\n        if (selectedSenderType === 'battery') {\n            return BATTERY_SENDER_CHOICE;\n        }\n        throw new Error(`Unsupported sender type for nft transfer ${selectedSenderType}`);\n    }, [selectedSenderType, account]);\n    const getSender = useGetEstimationSender(senderChoice);\n    const getSenderKey = useToQueryKeyPart(getSender);\n    const rawTransactionService = useTonRawTransactionService();\n    return useQuery([QueryKey.estimate, data?.address, accounts, getSenderKey], async () => {\n        try {\n            if (account.type === 'watch-only') {\n                throw new Error('account not controllable');\n            }\n            const nftEncoder = new NFTEncoder(account.activeTonWallet.rawAddress);\n            const sender = await getSender();\n            const nftTransferMsg = nftEncoder.encodeNftTransfer({\n                nftAddress: nftItem.address,\n                recipientAddress: data.address.address,\n                forwardPayload: data.comment ? comment(data.comment) : null,\n                responseAddress: 'excessAddress' in sender && sender.excessAddress\n                    ? sender.excessAddress\n                    : undefined\n            });\n            return await rawTransactionService.estimate(sender, nftTransferMsg);\n        }\n        catch (e) {\n            await notifyError(e);\n            throw e;\n        }\n    }, { enabled: data != null && !!getSender && senderChoice !== undefined });\n};\nconst useSendNft = (recipient, nftItem, fee, options) => {\n    const account = useActiveAccount();\n    const track2 = useTransactionAnalytics();\n    const { mutateAsync: invalidateAccountQueries } = useInvalidateActiveWalletQueries();\n    const getSender = useGetSender();\n    const rawTransactionService = useTonRawTransactionService();\n    const notifyError = useNotifyErrorHandle();\n    return useMutation(async () => {\n        if (account.type === 'watch-only') {\n            console.error(\"Can't send a transfer using this account\");\n            return false;\n        }\n        if (!fee)\n            return false;\n        if (fee.asset.id !== TON_ASSET.id) {\n            throw new Error(`Unexpected fee asset ${fee.asset.symbol}`);\n        }\n        try {\n            let senderChoice;\n            if (account.type === 'ton-multisig') {\n                if (options.multisigTTL === undefined) {\n                    throw new Error('TTL must be specified for multisig sending');\n                }\n                senderChoice = {\n                    type: 'multisig',\n                    ttlSeconds: 60 * Number(options.multisigTTL)\n                };\n            }\n            else if (options.selectedSenderType === 'external') {\n                senderChoice = EXTERNAL_SENDER_CHOICE;\n            }\n            else if (options.selectedSenderType === 'battery') {\n                senderChoice = BATTERY_SENDER_CHOICE;\n            }\n            else {\n                throw new Error(`Unsupported sender type for nft transfer ${options.selectedSenderType}`);\n            }\n            const sender = await getSender(senderChoice);\n            const nftEncoder = new NFTEncoder(account.activeTonWallet.rawAddress);\n            const nftTransferAmountWei = new BigNumber(NFTEncoder.nftTransferBase.toString()).plus(fee.weiAmount);\n            const nftTransferMsg = nftEncoder.encodeNftTransfer({\n                nftAddress: nftItem.address,\n                recipientAddress: recipient.address.address,\n                forwardPayload: recipient.comment ? comment(recipient.comment) : null,\n                nftTransferAmountWei,\n                responseAddress: 'excessAddress' in sender && sender.excessAddress\n                    ? sender.excessAddress\n                    : undefined\n            });\n            await rawTransactionService.send(sender, zeroFee, nftTransferMsg);\n            track2('send-nft');\n        }\n        catch (e) {\n            await notifyError(e);\n        }\n        await invalidateAccountQueries();\n        return true;\n    });\n};\nconst operationTypeSendNFT = { type: 'nfr_transfer' };\nexport const ConfirmNftView = ({ recipient, onClose, nftItem, headerBlock, mainButton, multisigTTL }) => {\n    const { standalone } = useAppContext();\n    const [done, setDone] = useState(false);\n    const { t } = useTranslation();\n    const isActiveMultisig = useIsActiveAccountMultisig();\n    const { data: availableSendersChoices } = useAvailableSendersChoices(operationTypeSendNFT);\n    const [selectedSenderType, onSenderTypeChange] = useState();\n    useEffect(() => {\n        if (availableSendersChoices) {\n            onSenderTypeChange(availableSendersChoices[0].type);\n        }\n    }, [availableSendersChoices]);\n    const estimation = useNftTransferEstimation(nftItem, recipient, selectedSenderType);\n    const { mutateAsync, isLoading, error, reset } = useSendNft(recipient, nftItem, estimation.data?.extra, { multisigTTL, selectedSenderType: selectedSenderType });\n    const image = nftItem.previews?.find(item => item.resolution === '100x100');\n    const handleSubmit = async () => {\n        if (isLoading)\n            return false;\n        try {\n            reset();\n            const isDone = await mutateAsync();\n            if (isDone) {\n                setDone(true);\n                setTimeout(onClose, 2000);\n            }\n            return isDone;\n        }\n        catch (err) {\n            console.error(err);\n            return false;\n        }\n    };\n    const onSubmit = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        handleSubmit();\n    };\n    return (_jsx(ConfirmViewContext.Provider, { value: {\n            recipient,\n            assetAmount,\n            estimation,\n            formState: { done, isLoading, error },\n            onClose: () => onClose(),\n            onBack: () => { },\n            handleSubmit\n        }, children: _jsxs(FullHeightBlock, { onSubmit: onSubmit, standalone: standalone, children: [headerBlock, _jsxs(Info, { children: [image ? _jsx(Image, { src: image.url }) : _jsx(ImageMock, {}), _jsx(SendingTitle, { children: nftItem.dns ?? nftItem.metadata.name }), _jsx(Title, { children: t('txActions_signRaw_types_nftItemTransfer') })] }), _jsxs(ListBlock, { margin: false, fullWidth: true, children: [_jsx(ConfirmViewDetailsRecipient, {}), _jsx(ConfirmViewDetailsFee, { availableSendersChoices: availableSendersChoices, selectedSenderType: selectedSenderType, onSenderTypeChange: onSenderTypeChange }), _jsx(ConfirmViewDetailsComment, {})] }), _jsx(NftDetailsBlock, { nftItem: nftItem }), _jsx(Gap, {}), isActiveMultisig && multisigTTL ? (_jsx(MayBeMultisigDetalis, { ttl: multisigTTL })) : null, mainButton] }) }));\n};\nconst MultisigTransferDetailsStyled = styled(MultisigTransferDetails) `\n    margin-bottom: 1rem;\n`;\nconst MayBeMultisigDetalis = ({ ttl }) => {\n    const { data: multisigInfo } = useActiveMultisigWalletInfo();\n    const { signerWallet } = useActiveMultisigAccountHost();\n    if (!multisigInfo) {\n        return null;\n    }\n    return (_jsx(MultisigTransferDetailsStyled, { status: \"progress\", signedWallets: [], threshold: multisigInfo.threshold, pendingWallets: multisigInfo.signers, hostAddress: signerWallet.rawAddress, secondsLeft: Number(ttl) * 60 }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { parseTonTransferWithAddress } from '@tonkeeper/core/dist/service/deeplinkingService';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Notification } from '../../Notification';\nimport { ConfirmViewButtons } from '../ConfirmView';\nimport { RecipientView, useGetToAccount } from '../RecipientView';\nimport { ConfirmMainButton, MainButton, RecipientHeaderBlock, Wrapper, childFactoryCreator, duration, TransferViewHeaderBlock } from '../common';\nimport { ConfirmHeaderBlock } from './Common';\nimport { ConfirmNftView } from './ConfirmNftView';\nimport { MultisigOrderFormView } from '../MultisigOrderFormView';\nimport { useIsActiveAccountMultisig } from '../../../state/multisig';\nconst SendContent = ({ nftItem, onClose }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { standalone, extension } = useAppContext();\n    const multisigSettingsRef = useRef(null);\n    const recipientRef = useRef(null);\n    const confirmRef = useRef(null);\n    const [right, setRight] = useState(true);\n    const [recipient, setRecipient] = useState();\n    const isMultisig = useIsActiveAccountMultisig();\n    const { mutateAsync: getAccountAsync } = useGetToAccount();\n    const onRecipient = async (data) => {\n        setRight(true);\n        setRecipient(data);\n        setView('confirm');\n    };\n    const backToRecipient = useCallback(() => {\n        setRight(false);\n        setRecipient(value => (value ? { ...value, done: false } : undefined));\n        setView('recipient');\n    }, [setRecipient]);\n    const [multisigTimeout, setMultisigTimeout] = useState();\n    const [view, setView] = useState(isMultisig ? 'multisig-settings' : 'recipient');\n    const processRecipient = useCallback(async ({ address }) => {\n        const item = { address: address };\n        const toAccount = await getAccountAsync(item);\n        onRecipient({\n            address: { ...item, blockchain: BLOCKCHAIN_NAME.TON },\n            toAccount,\n            comment: '',\n            done: true\n        });\n    }, [onRecipient, getAccountAsync]);\n    const onScan = async (signature) => {\n        const param = parseTonTransferWithAddress({ url: signature });\n        if (param === null) {\n            return sdk.uiEvents.emit('copy', {\n                method: 'copy',\n                params: t('Unexpected_QR_Code')\n            });\n        }\n        else {\n            await processRecipient(param);\n        }\n    };\n    const nodeRef = {\n        'multisig-settings': multisigSettingsRef,\n        recipient: recipientRef,\n        confirm: confirmRef\n    }[view];\n    return (_jsx(Wrapper, { standalone: standalone, extension: extension, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(right), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                    setTimeout(done, duration);\n                }, children: status => (_jsxs(\"div\", { ref: nodeRef, children: [view === 'multisig-settings' && (_jsx(MultisigOrderFormView, { onSubmit: val => {\n                                setRight(true);\n                                setMultisigTimeout(val.lifetime);\n                                setView('recipient');\n                            }, isAnimationProcess: status === 'exiting', Header: () => (_jsx(TransferViewHeaderBlock, { title: t('multisig_create_order_title'), onClose: onClose })), MainButton: MainButton })), view === 'recipient' && (_jsx(RecipientView, { data: recipient, setRecipient: onRecipient, onScan: onScan, acceptBlockchains: [BLOCKCHAIN_NAME.TON], MainButton: MainButton, HeaderBlock: () => (_jsx(RecipientHeaderBlock, { title: t('nft_transfer_title'), onClose: onClose, onBack: isMultisig ? backToRecipient : undefined })) })), view === 'confirm' && (_jsx(ConfirmNftView, { onClose: onClose, recipient: recipient, nftItem: nftItem, mainButton: _jsx(ConfirmViewButtons, { MainButton: ConfirmMainButton }), headerBlock: _jsx(ConfirmHeaderBlock, { onBack: backToRecipient, onClose: onClose }), multisigTTL: multisigTimeout }))] })) }, view) }) }));\n};\nconst SendNftNotification = () => {\n    const sdk = useAppSdk();\n    const [nftItem, setNft] = useState();\n    const onClose = useCallback(() => {\n        setNft(undefined);\n    }, [setNft]);\n    useEffect(() => {\n        const handler = (options) => {\n            setNft(options.params);\n        };\n        sdk.uiEvents.on('transferNft', handler);\n        return () => {\n            sdk.uiEvents.off('transferNft', handler);\n        };\n    }, []);\n    const Content = useCallback(() => {\n        if (!nftItem)\n            return undefined;\n        return _jsx(SendContent, { onClose: onClose, nftItem: nftItem });\n    }, [nftItem, onClose]);\n    return (_jsx(Notification, { isOpen: !!nftItem, handleClose: onClose, hideButton: true, backShadow: true, children: Content }));\n};\nexport default SendNftNotification;\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["ConfirmHeaderBlock","_ref","onBack","onClose","_jsxs","NotificationTitleBlock","children","_jsx","RoundedButton","onClick","ChevronLeftIcon","NotificationCancelButton","handleClose","NftDetailsBlock","_ref2","nftItem","t","useTranslation","sdk","useAppSdk","network","useActiveTonNetwork","ListBlock","fullWidth","collection","ListItem","copyToClipboard","formatAddress","address","ListItemPayload","Label","Label1","toShortValue","assetAmount","AssetAmount","asset","TON_ASSET","weiAmount","operationTypeSendNFT","type","ConfirmNftView","_estimation$data","_nftItem$previews","_nftItem$dns","recipient","headerBlock","mainButton","multisigTTL","standalone","useAppContext","done","setDone","useState","isActiveMultisig","useIsActiveAccountMultisig","data","availableSendersChoices","useAvailableSendersChoices","selectedSenderType","onSenderTypeChange","useEffect","estimation","useNftTransferEstimation","account","useActiveAccount","accounts","useAccountsState","notifyError","useNotifyErrorHandle","senderChoice","useMemo","ttlSeconds","EXTERNAL_SENDER_CHOICE","BATTERY_SENDER_CHOICE","Error","concat","getSender","useGetEstimationSender","getSenderKey","useToQueryKeyPart","rawTransactionService","useTonRawTransactionService","useQuery","QueryKey","estimate","async","nftEncoder","NFTEncoder","activeTonWallet","rawAddress","sender","nftTransferMsg","encodeNftTransfer","nftAddress","recipientAddress","forwardPayload","comment","responseAddress","excessAddress","undefined","e","enabled","mutateAsync","isLoading","error","reset","useSendNft","fee","options","track2","useTransactionAnalytics","invalidateAccountQueries","useInvalidateActiveWalletQueries","useGetSender","useMutation","console","id","symbol","Number","nftTransferAmountWei","BigNumber","nftTransferBase","toString","plus","send","zeroFee","extra","image","previews","find","item","resolution","handleSubmit","isDone","setTimeout","err","ConfirmViewContext","Provider","value","formState","FullHeightBlock","onSubmit","stopPropagation","preventDefault","Info","Image","src","url","ImageMock","SendingTitle","dns","metadata","name","Title","margin","ConfirmViewDetailsRecipient","ConfirmViewDetailsFee","ConfirmViewDetailsComment","Gap","MayBeMultisigDetalis","ttl","MultisigTransferDetailsStyled","styled","MultisigTransferDetails","_templateObject","_taggedTemplateLiteral","multisigInfo","useActiveMultisigWalletInfo","signerWallet","useActiveMultisigAccountHost","status","signedWallets","threshold","pendingWallets","signers","hostAddress","secondsLeft","SendContent","extension","multisigSettingsRef","useRef","recipientRef","confirmRef","right","setRight","setRecipient","isMultisig","getAccountAsync","useGetToAccount","onRecipient","setView","backToRecipient","useCallback","multisigTimeout","setMultisigTimeout","view","processRecipient","toAccount","blockchain","BLOCKCHAIN_NAME","TON","onScan","param","parseTonTransferWithAddress","signature","uiEvents","emit","method","params","nodeRef","confirm","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","duration","ref","MultisigOrderFormView","val","lifetime","isAnimationProcess","Header","TransferViewHeaderBlock","title","MainButton","RecipientView","acceptBlockchains","HeaderBlock","RecipientHeaderBlock","ConfirmViewButtons","ConfirmMainButton","SendNftNotification","setNft","handler","on","off","Content","Notification","isOpen","hideButton","backShadow","getChildMapping","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps"],"sourceRoot":""}