{"version":3,"file":"static/js/109.1ca8a9c9.chunk.js","mappings":"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","sources":["../../../packages/uikit/dist/components/PairKeystoneNotification.js","../../../packages/uikit/dist/hooks/navigate.js","../../../packages/core/dist/service/keystone/ur.js","../../../packages/uikit/dist/components/home/AccountView.js","../../../packages/uikit/dist/components/home/qrCodeView.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { KeystoneTonSDK } from '@keystonehq/keystone-sdk/dist/chains/ton';\nimport { constructKeystoneSignRequest } from '@tonkeeper/core/dist/service/keystone/ur';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppContext } from '../hooks/appContext';\nimport { useAppSdk } from '../hooks/appSdk';\nimport { useKeystoneScanner } from '../hooks/keystoneScanner';\nimport { useNavigate } from '../hooks/navigate';\nimport { useTranslation } from '../hooks/translation';\nimport { Notification, NotificationBlock } from './Notification';\nimport { Button } from './fields/Button';\nimport { Background, HeaderBlock } from './home/AccountView';\nimport { KeystoneAnimatedQRCode } from './home/qrCodeView';\nimport { useActiveWallet } from '../state/wallet';\nimport { formatAddress } from '@tonkeeper/core/dist/utils/common';\nexport const SignerContent = ({ sdk, transactionParams, onClose, handleResult }) => {\n    const wallet = useActiveWallet();\n    const { t } = useTranslation();\n    const { extension } = useAppContext();\n    useNavigate(sdk, onClose);\n    const onSubmit = useCallback((ur) => {\n        const signature = new KeystoneTonSDK().parseSignature(ur);\n        handleResult(signature.signature);\n    }, []);\n    const openScanner = useKeystoneScanner(null, onSubmit);\n    const ur = useMemo(() => {\n        return constructKeystoneSignRequest(transactionParams.message, transactionParams.messageType, formatAddress(wallet.rawAddress), transactionParams.pathInfo);\n    }, [transactionParams]);\n    return (_jsxs(NotificationBlock, { onSubmit: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            openScanner();\n        }, children: [_jsx(HeaderBlock, { title: t('keystone_sign_title'), description: t('keystone_sign_subtitle') }), _jsx(Background, { extension: extension, margin: true, children: _jsx(KeystoneAnimatedQRCode, { data: ur }) }), _jsx(Button, { primary: true, size: \"large\", fullWidth: true, type: \"submit\", children: t('signer_scan_result') })] }));\n};\nconst PairKeystoneNotification = () => {\n    const sdk = useAppSdk();\n    const [transactionParams, setTransactionParams] = useState(undefined);\n    const [requestId, setId] = useState(undefined);\n    const close = useCallback(() => {\n        setTransactionParams(undefined);\n        setId(undefined);\n    }, []);\n    const handleResult = useCallback((result) => {\n        sdk.uiEvents.emit('response', {\n            method: 'response',\n            id: requestId,\n            params: result\n        });\n        close();\n    }, [sdk, requestId, close]);\n    const onCancel = useCallback(() => {\n        if (requestId) {\n            sdk.uiEvents.emit('response', {\n                method: 'response',\n                id: requestId,\n                params: new Error('Cancel auth request')\n            });\n        }\n        close();\n    }, [requestId, sdk, close]);\n    useEffect(() => {\n        const handler = (options) => {\n            setTransactionParams(options.params);\n            setId(options.id);\n        };\n        sdk.uiEvents.on('keystone', handler);\n        return () => {\n            sdk.uiEvents.off('keystone', handler);\n        };\n    }, [sdk]);\n    const Content = useCallback(() => {\n        if (!transactionParams || !requestId)\n            return undefined;\n        return (_jsx(SignerContent, { sdk: sdk, transactionParams: transactionParams, onClose: onCancel, handleResult: handleResult }));\n    }, [sdk, transactionParams, requestId, onCancel, handleResult]);\n    return (_jsx(Notification, { isOpen: transactionParams != null && requestId != null, handleClose: onCancel, children: Content }));\n};\nexport default PairKeystoneNotification;\n","import { useEffect } from 'react';\nexport const useNavigate = (sdk, onNavigate) => {\n    useEffect(() => {\n        sdk.uiEvents.on('navigate', onNavigate);\n        return () => {\n            sdk.uiEvents.off('navigate', onNavigate);\n        };\n    }, [sdk, onNavigate]);\n};\n","import { KeystoneTonSDK } from '@keystonehq/keystone-sdk/dist/chains/ton';\nexport const constructKeystoneSignRequest = (message, messageType, address, pathInfo) => {\n    const tonSdk = new KeystoneTonSDK({ origin: 'TonKeeper' });\n    return tonSdk.generateSignRequest({\n        signData: message.toString('hex'),\n        dataType: messageType === 'transaction' ? 1 : 2,\n        address,\n        xfp: pathInfo?.mfp,\n        derivationPath: pathInfo?.path\n    });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { formatAddress, formatTransferUrl } from '@tonkeeper/core/dist/utils/common';\nimport { useRef, useState } from 'react';\nimport { QRCode } from 'react-qrcode-logo';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled, { css } from 'styled-components';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { useTranslation } from '../../hooks/translation';\nimport { useTronWalletState } from '../../state/tron/tron';\nimport { CopyIcon } from '../Icon';\nimport { FullHeightBlockResponsive, NotificationBlock, NotificationHeader, NotificationHeaderPortal, NotificationTitleRow } from '../Notification';\nimport { Body1, H3 } from '../Text';\nimport { Button } from '../fields/Button';\nimport { childFactoryCreator, duration, Wrapper } from '../transfer/common';\nimport { QrWrapper } from './qrCodeView';\nimport { useActiveTonNetwork, useActiveWallet, useIsActiveWalletWatchOnly } from '../../state/wallet';\nimport { AccountBadge } from '../account/AccountBadge';\nimport { useAssetImage } from '../../state/asset';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { Address } from '@ton/core';\nconst CopyBlock = styled.div `\n    display: flex;\n    align-items: center;\n`;\nexport const Background = styled.div `\n    padding: 20px;\n    width: 100%;\n    box-sizing: border-box;\n    border-radius: 20px;\n    background: white;\n    max-width: 300px;\n\n    ${props => props.margin &&\n    css `\n            margin-bottom: 16px;\n        `}\n\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                max-width: 217px;\n                padding: 16px;\n            }\n        `}\n\n    canvas {\n        width: 100% !important;\n        height: 100% !important;\n        position: absolute;\n    }\n`;\nexport const AddressText = styled(Body1) `\n    display: inline-block;\n    word-break: break-all;\n    color: black;\n    margin: 16px 4px 0;\n    text-align: center;\n    font-family: ${p => p.theme.fontMono};\n\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                margin-top: 8px;\n            }\n        `}\n`;\nconst TextBlock = styled.div `\n    display: flex;\n    padding-bottom: 16px;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    ${props => props.extension &&\n    css `\n            @media (max-width: 768px) {\n                padding-bottom: 0;\n            }\n        `}\n`;\nconst Title = styled(H3) `\n    text-align: center;\n`;\nconst Description = styled(Body1) `\n    text-align: center;\n    color: ${props => props.theme.textSecondary};\n`;\nconst WatchOnlyBadge = styled(AccountBadge) `\n    width: fit-content;\n    margin: 0 auto 10px;\n`;\n/*const values = [\n    { name: BLOCKCHAIN_NAME.TON, id: BLOCKCHAIN_NAME.TON },\n    { name: 'TRC20', id: BLOCKCHAIN_NAME.TRON }\n];*/\nexport const HeaderBlock = ({ title, description }) => {\n    const { extension } = useAppContext();\n    return (_jsxs(TextBlock, { extension: extension, children: [title && _jsx(Title, { children: title }), _jsx(Description, { children: description })] }));\n};\nconst CopyButton = ({ address }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    return (_jsx(CopyBlock, { children: _jsxs(Button, { secondary: true, onClick: e => {\n                e.preventDefault();\n                sdk.copyToClipboard(address, t('address_copied'));\n            }, children: [_jsx(CopyIcon, {}), _jsx(\"span\", { children: t('Copy_address') })] }) }));\n};\nconst ReceiveTon = ({ jetton }) => {\n    const sdk = useAppSdk();\n    const { extension } = useAppContext();\n    const wallet = useActiveWallet();\n    const isWatchOnly = useIsActiveWalletWatchOnly();\n    const { t } = useTranslation();\n    const network = useActiveTonNetwork();\n    const assetImage = useAssetImage({\n        blockchain: BLOCKCHAIN_NAME.TON,\n        address: jetton ? Address.parse(jetton) : TON_ASSET.address\n    });\n    const address = formatAddress(wallet.rawAddress, network);\n    return (_jsxs(NotificationBlock, { children: [_jsx(HeaderBlock, { title: t('receive_ton'), description: t('receive_ton_description') }), _jsxs(Background, { extension: extension, onClick: e => {\n                    e.preventDefault();\n                    sdk.copyToClipboard(address, t('address_copied'));\n                }, children: [isWatchOnly && _jsx(WatchOnlyBadge, { accountType: \"watch-only\" }), _jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: formatTransferUrl({\n                                address,\n                                jetton\n                            }), logoImage: assetImage || 'https://wallet.tonkeeper.com/img/toncoin.svg', logoPadding: 8, qrStyle: \"dots\", eyeRadius: {\n                                inner: 2,\n                                outer: 16\n                            } }) }), _jsx(AddressText, { extension: extension, children: address })] }), _jsx(CopyButton, { address: address })] }));\n};\nconst ReceiveTron = ({ tron }) => {\n    const sdk = useAppSdk();\n    const { t } = useTranslation();\n    const { extension } = useAppContext();\n    return (_jsxs(NotificationBlock, { children: [_jsx(HeaderBlock, { title: t('receive_trc20'), description: t('receive_trc20_description') }), _jsxs(Background, { extension: extension, onClick: e => {\n                    e.preventDefault();\n                    sdk.copyToClipboard(tron.walletAddress, t('address_copied'));\n                }, children: [_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: tron.walletAddress, logoImage: \"https://wallet-dev.tonkeeper.com/img/usdt.svg\", logoPadding: 8, qrStyle: \"dots\", eyeRadius: {\n                                inner: 2,\n                                outer: 16\n                            } }) }), _jsx(AddressText, { extension: extension, children: tron.walletAddress })] }), _jsx(CopyButton, { address: tron.walletAddress })] }));\n};\nexport const ReceiveContent = ({ chain = BLOCKCHAIN_NAME.TON, jetton, handleClose }) => {\n    const { standalone } = useAppContext();\n    const [active] = useState(chain);\n    const { data: tron } = useTronWalletState(active === BLOCKCHAIN_NAME.TRON);\n    const tonRef = useRef(null);\n    const tronRef = useRef(null);\n    const isTon = active === BLOCKCHAIN_NAME.TON || !tron;\n    const nodeRef = isTon ? tonRef : tronRef;\n    const state = isTon ? 'ton' : 'tron';\n    return (_jsxs(FullHeightBlockResponsive, { standalone: standalone, children: [_jsx(NotificationHeaderPortal, { children: _jsx(NotificationHeader, { children: _jsx(NotificationTitleRow, { handleClose: handleClose, center: true }) }) }), _jsx(Wrapper, { standalone: false, extension: true, fullWidth: true, children: _jsx(TransitionGroup, { childFactory: childFactoryCreator(!isTon), children: _jsx(CSSTransition, { nodeRef: nodeRef, classNames: \"right-to-left\", addEndListener: done => {\n                            setTimeout(done, duration);\n                        }, children: _jsx(\"div\", { ref: nodeRef, children: isTon ? (_jsx(ReceiveTon, { jetton: jetton?.toLowerCase() ===\n                                    TON_ASSET.address.toString().toLowerCase()\n                                    ? undefined\n                                    : jetton })) : (_jsx(ReceiveTron, { tron: tron })) }) }, state) }) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport UREncoder from '@ngraveio/bc-ur/dist/urEncoder';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { QRCode } from 'react-qrcode-logo';\nimport { styled } from 'styled-components';\nexport const QrWrapper = styled.div `\n    width: 100%;\n    padding-bottom: 100%;\n    position: relative;\n`;\nfunction chunks(arr, len) {\n    var chunks = [], i = 0, n = arr.length;\n    while (i < n) {\n        chunks.push(arr.slice(i, (i += len)));\n    }\n    return chunks;\n}\nexport const AnimatedQrCode = React.memo(({ message }) => {\n    const [value, setValue] = useState('');\n    useEffect(() => {\n        let arr = [...message];\n        const items = chunks(arr, 256);\n        if (items.length === 1) {\n            setValue(message);\n        }\n        else {\n            let count = 0;\n            const timer = setInterval(() => {\n                let current = items[count];\n                setValue(current.join(''));\n                // increment our counter\n                count++;\n                // reset counter if we reach end of array\n                if (count === items.length) {\n                    count = 0;\n                }\n            }, 100);\n            return () => clearInterval(timer);\n        }\n    }, [message]);\n    return (_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: value, qrStyle: \"dots\", eyeRadius: {\n                inner: 2,\n                outer: 16\n            } }) }));\n});\nexport const KeystoneAnimatedQRCode = ({ data }) => {\n    const urEncoder = useMemo(() => {\n        return new UREncoder(data);\n    }, []);\n    const [value, setValue] = useState(urEncoder.nextPart());\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setValue(urEncoder.nextPart().toUpperCase());\n        }, 200);\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n    return (_jsx(QrWrapper, { children: _jsx(QRCode, { size: 400, value: value, qrStyle: \"dots\", eyeRadius: {\n                inner: 2,\n                outer: 16\n            } }) }));\n};\n"],"names":["SignerContent","_ref","sdk","transactionParams","onClose","handleResult","wallet","useActiveWallet","t","useTranslation","extension","useAppContext","useNavigate","onNavigate","useEffect","uiEvents","on","off","onSubmit","useCallback","ur","signature","KeystoneTonSDK","parseSignature","openScanner","useKeystoneScanner","useMemo","message","messageType","address","formatAddress","rawAddress","pathInfo","origin","generateSignRequest","signData","toString","dataType","xfp","mfp","derivationPath","path","constructKeystoneSignRequest","_jsxs","NotificationBlock","e","preventDefault","stopPropagation","children","_jsx","HeaderBlock","title","description","Background","margin","KeystoneAnimatedQRCode","data","Button","primary","size","fullWidth","type","PairKeystoneNotification","useAppSdk","setTransactionParams","useState","undefined","requestId","setId","close","result","emit","method","id","params","onCancel","Error","handler","options","Content","Notification","isOpen","handleClose","CopyBlock","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","props","css","_templateObject3","_templateObject4","AddressText","Body1","_templateObject5","p","theme","fontMono","_templateObject6","TextBlock","_templateObject7","_templateObject8","Title","H3","_templateObject9","Description","_templateObject10","textSecondary","WatchOnlyBadge","AccountBadge","_templateObject11","CopyButton","_ref2","secondary","onClick","copyToClipboard","CopyIcon","ReceiveTon","_ref3","jetton","isWatchOnly","useIsActiveWalletWatchOnly","network","useActiveTonNetwork","assetImage","useAssetImage","blockchain","BLOCKCHAIN_NAME","TON","Address","parse","TON_ASSET","accountType","QrWrapper","QRCode","value","formatTransferUrl","logoImage","logoPadding","qrStyle","eyeRadius","inner","outer","ReceiveTron","_ref4","tron","walletAddress","ReceiveContent","_ref5","chain","standalone","active","useTronWalletState","TRON","tonRef","useRef","tronRef","isTon","nodeRef","state","FullHeightBlockResponsive","NotificationHeaderPortal","NotificationHeader","NotificationTitleRow","center","Wrapper","TransitionGroup","childFactory","childFactoryCreator","CSSTransition","classNames","addEndListener","done","setTimeout","duration","ref","toLowerCase","React","setValue","items","arr","len","chunks","i","n","length","push","slice","count","timer","setInterval","current","join","clearInterval","urEncoder","UREncoder","nextPart","interval","toUpperCase"],"sourceRoot":""}