{"version":3,"file":"static/js/106.b8124ab0.chunk.js","mappings":"4JACO,SAASA,EAAmBC,GAC/B,OAAOC,IAAe,IAAd,MAAEC,GAAOD,EACb,OAAQE,EAAAA,EAAAA,MAAM,MAAO,CAAEC,KAAM,QAASC,SAAU,EAACC,EAAAA,EAAAA,KAAK,IAAK,CAAED,SAAUL,KAAaM,EAAAA,EAAAA,KAAK,IAAK,CAAED,SAAU,2BAA4BC,EAAAA,EAAAA,KAAK,MAAO,CAAEC,MAAO,CAAEC,MAAO,OAASH,SAAUH,EAAMO,YAAc,CAEnN,C,+MCFA,MAAMC,EACe,EADfA,EAEc,GAEPC,EAAiBA,KAC1B,MAAMC,GAAMC,EAAAA,EAAAA,KACZ,OAAOC,EAAAA,EAAAA,UAAS,CAACC,EAAAA,EAAOC,eAAeC,UACnC,MAAMC,QAAgBN,EAAIO,QAAQC,IAAIL,EAAAA,EAAOC,cAC7C,MAAO,CACHK,iBAAwB,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,kBAAmBX,EAC7CY,gBAAuB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASI,iBAAkBZ,EAC9C,GACH,E,qCCkBC,SAASa,IACZ,MAAQC,YAAaC,GAzBlB,WACH,MAAMC,GAASC,EAAAA,EAAAA,OACT,YAAEC,IAAgBC,EAAAA,EAAAA,KAClBC,GAASC,EAAAA,EAAAA,OACPC,KAAMC,GAAiBtB,IACzBuB,EAAWJ,EAAOK,2BACxB,OAAOC,EAAAA,EAAAA,cAAYC,IACf,IAAKJ,EACD,MAAM,IAAIK,MAAM,0CAEpB,OAAOV,EAAYW,WAAW,CAC1BF,KAAMG,EAAmBH,GACzBnB,QAAS,CACLuB,cAAef,EAAOgB,WACtBC,SAAU,IAAIC,EAAAA,EAAUX,EAAaZ,iBAChCwB,IAAI,KACJC,cAAc,GACdC,cACDb,GAAY,CAAEc,gBAAiBC,EAAAA,QAAQC,MAAMhB,GAAUiB,kBACvDd,EAAKe,eAAiB,CAAEA,cAAef,EAAKe,iBAEtD,GAEV,CAEoCC,IACxBrB,KAAMsB,IAAmBC,EAAAA,EAAAA,OACzBC,cAAeC,IAAkBC,EAAAA,EAAAA,OACjC1B,KAAM2B,IAAuBC,EAAAA,EAAAA,MACrC,OAAOxB,EAAAA,EAAAA,cAAYnB,UACf,MAAM4C,EAAkB,CAACpC,EAAOY,IAC1ByB,GAAsBH,GACtBA,EAAmBI,gBAAgBC,gBAEvB,OAAdV,QAAc,IAAdA,GAAAA,EAAgBW,oBAAoBC,GAAG,IAAMJ,GAC7CD,EAAgBM,KAAK1C,EAAO,IAAKY,EAAMe,cAAeH,EAAAA,QAAQC,MAAMO,GAAeN,iBAEvF,MAAMiB,QAAgBC,QAAQC,IAAIT,GAC5BU,EAAaH,EAAQ,GACrBI,EAAoB,CACtBC,aAAcC,KAAKC,MAAQ,KAAkB,IAC7CC,SAAU,CACN,CACIC,QAAS5B,EAAAA,QAAQC,MAAMqB,EAAWO,IAAI/B,SAAS,CAAEgC,YAAY,IAC7DC,OAAQT,EAAWU,MACnBC,QAASX,EAAWY,QAI1BC,EAAiBhB,EAAQ,GAc/B,OAbIgB,IACAZ,EAAkBa,iBAAmB,CACjC,CAACC,EAAAA,GAA4BC,SAAU,CACnC,CACIV,QAAS5B,EAAAA,QAAQC,MAAMkC,EAAeN,IAAI/B,SAAS,CAC/CgC,YAAY,IAEhBC,OAAQI,EAAeH,MACvBC,QAASE,EAAeD,SAKjCX,CAAiB,GAEhC,CACA,MAAMhC,EAAsBH,GACF,WAAlBA,EAAKmD,SACE,CACHA,SAAU,SACVC,YAAapD,EAAKqD,MAAMC,UAGV,WAAlBtD,EAAKmD,SACE,CACHA,SAAU,SACVI,YAAavD,EAAKqD,MAAMC,eAGhCE,EAAAA,EAAAA,GAAkBxD,G,iLCxEtB,MAAMyD,EAAkB,IAAIC,IACfC,EAAgB,CAAC,SAAU,UAClCC,GAAgBC,EAAAA,EAAAA,IAAK,IAC3B,IAAIC,EAAgB,EACb,SAASC,IACZ,MAAMC,GAAMC,EAAAA,EAAAA,OACLC,EAAcC,IAAmBC,EAAAA,EAAAA,IAAQR,IACzCS,IAAaC,EAAAA,EAAAA,OACbC,IAAWC,EAAAA,EAAAA,OACXC,IAAsBC,EAAAA,EAAAA,MACtBC,EAAGC,IAAmBC,EAAAA,EAAAA,MACvBC,GAAiBC,EAAAA,EAAAA,OACjB,YAAExF,IAAgBC,EAAAA,EAAAA,KAClBwF,GAAQvG,EAAAA,EAAAA,UAAS,CACnBwG,SAAU,CACNC,EAAAA,GAASC,cACTd,EAAUe,GACVb,EAAQa,GACU,OAAlBX,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBY,UAAUhB,EAAUiB,UAAUC,QAAQ,IAE9DC,QAAS5G,UAAsB,IAAf,OAAE6G,GAAQ7H,EACtBuG,EAAgB,IAChBS,OAAgBc,GAChB5B,GAAgC,EAChC,MAAM6B,EAAsB7B,EAC5B,GAAIgB,EACA,MAAO,GAEXc,EAAgBvB,GAChBuB,EAAgBrB,GAChB,MAAMsB,GAAgBC,EAAAA,EAAAA,IAAkBrB,EAAoBJ,EAAUiB,UACtE,IAAIS,EAAoB,GACxB,OAAO,IAAI/D,SAAQ,CAACgE,EAAKC,KACrB,IAAIC,EAAyB,EAC7BvC,EAAcwC,SAAQvH,UAClB,IACI,MAAMwH,EAAc7G,EAAY8G,cAAcC,EAAejC,EAAU7B,SAAU8D,EAAe/B,EAAQ/B,SAAUqD,EAAcN,QAAQ,GAAIpC,GACxIsC,IACAA,EAAOc,QAAU,IAAMH,EAAYI,UAEvC,MAAMC,QAAqBL,EACrBpG,QAAa0G,EAAmBD,EAAczC,EAAKK,EAAWE,GACpE,GAAIoB,IAAwB7B,EAExB,YADAmC,EAAI,IAAIhG,MAAM,0BAGlB,MAAM0G,EAAmBC,EAAU5G,GAAM,GACzC+F,EAAoBa,EAAUb,EAAkBc,OAAOF,IACnDZ,EAAkB,GAAG1C,OACrBuB,EAAgBmB,EAAkB,IAEtC5B,GAAgB2C,GAAKF,EAAU,IAAIE,EAAGH,MACtCT,GAAkD,EAC9CA,IAA2BvC,EAAcoD,QACzCf,EAAID,EAEZ,CACA,MAAOiB,GACH,GAAIrB,IAAwB7B,EAExB,YADAmC,EAAI,IAAIhG,MAAM,0BAGlBgH,QAAQpJ,MAAMmJ,GACd,MAAMhH,EAAO,CACTmD,WACAE,MAAO,MAEX0C,EAAoBa,EAAUb,EAAkBc,OAAO7G,IACnD+F,EAAkB,GAAG1C,OACrBuB,EAAgBmB,EAAkB,IAEtC5B,GAAgB2C,GAAKF,EAAU,IAAIE,EAAG9G,MACtCkG,GAAkD,EAC9CA,IAA2BvC,EAAcoD,QACzCf,EAAID,EAEZ,IACF,GACJ,EAENmB,UAAW,IAEf,OAAOC,EAAAA,EAAAA,UAAQ,KAAM,IACdnC,EACHd,kBACA,CAACc,EAAOd,GAChB,CACA,MAAMoC,EAAkB9D,IACb4E,EAAAA,EAAAA,IAAM5E,GAAW,MAAQA,EAAQ1B,cAEtCuG,EAAoB7E,GACH,QAAZA,EAAoB,MAAQ5B,EAAAA,QAAQC,MAAM2B,GAE/CoE,EAAaU,GACRA,EAAMC,QAAQC,MAAK,CAACC,EAAGC,IACrBD,EAAEpE,MAGFqE,EAAErE,MAGAqE,EAAErE,MAAMZ,GAAGkF,UAAUC,WAAWH,EAAEpE,MAAMZ,GAAGkF,YAFtC,EAHD,IAQbjB,EAAqB9H,MAAO6H,EAAczC,EAAKK,EAAWE,KAC5D,MAAMsD,QAAmBC,EAAcrB,EAAasB,OAAQ/D,GAC5D,GAA8B,WAA1ByC,EAAatD,SACb,OAAmC,IAA/BsD,EAAasB,OAAOhB,OACb,CACH,CACI5D,SAAU,SACVE,MAAO,OAIZoD,EAAasB,OAAOC,KAAIC,IAAK,CAChC9E,SAAU,SACVE,MAAO,CACH6E,KAAM,IAAIC,EAAAA,EAAY,CAClBC,MAAO/D,EACPsD,UAAWM,EAAEI,aAEjB5F,GAAI,IAAI0F,EAAAA,EAAY,CAChBC,MAAO7D,EACPoD,UAAWM,EAAEK,WAEjBC,KAAMN,EAAEM,KAAKP,KAAIxF,GAAWqF,EAAWW,MAAKf,IAAKgB,EAAAA,EAAAA,GAAYhB,EAAEjF,QAAS6E,EAAiB7E,QACzFkG,cAAe,IAAIP,EAAAA,EAAY,CAC3BC,MAAOO,EAAAA,GACPhB,UAAWM,EAAES,gBAEjBpF,SAAU2E,EAAEW,oBAIxB,GAA8B,WAA1BnC,EAAatD,SAAuB,CACpC,MAAME,EAAQoD,EAAasB,OAAO,GAClC,OAAK1E,EAGE,CACH,CACIF,SAAU,SACVE,MAAO,CACH6E,KAAM,IAAIC,EAAAA,EAAY,CAClBC,MAAO/D,EACPsD,UAAWtE,EAAMgF,aAErB5F,GAAI,IAAI0F,EAAAA,EAAY,CAChBC,MAAO7D,EACPoD,UAAWtE,EAAMiF,WAErBI,cAAe,IAAIP,EAAAA,EAAY,CAC3BC,MAAOO,EAAAA,GACPhB,UAAWtE,EAAMqF,gBAErBpF,SAAUD,EAAMwF,eAChBN,KAAMlF,EAAMkF,KAAKP,KAAIxF,GAAWqF,EAAWW,MAAKf,IAAKgB,EAAAA,EAAAA,GAAYhB,EAAEjF,QAAS6E,EAAiB7E,WAnB9F,CAAC,CAAEW,SAAU,SAAUE,MAAO,MAuB7C,CACA,MAAO,EAAE,EAEPyE,EAAgBlJ,MAAOmJ,EAAQ/D,KACjC,MAAM8E,EAAYf,EAAOgB,SAAQ1F,GAASA,EAAMkF,KAAKP,IAAIX,KACzD,OAAOrF,QAAQC,IAAI6G,EAAUd,KAAIxF,GAAWwG,EAAShF,EAAKxB,KAAU,EAElEoD,EAAmBwC,IAChB3E,EAAgBwF,IAAIb,EAAM5F,UAC3BiB,EAAgByF,IAAId,EAAM5F,QAASR,QAAQmH,QAAQf,GACvD,EAEEY,EAAWpK,MAAOoF,EAAKxB,KACzB,IAAI4E,EAAAA,EAAAA,IAAM5E,GACN,OAAOmG,EAAAA,GAEX,GAAIlF,EAAgBwF,IAAIzG,GACpB,OAAOiB,EAAgB1E,IAAIyD,GAE/B,MACM4G,EADS,IAAIC,EAAAA,IAAWrF,EAAIsF,UACjBC,cAAc,CAAEC,UAAWhH,EAAQ1B,gBAAiB2I,MAAKC,IAAY,CAClFC,OAAQD,EAASE,SAASD,OAC1BrE,SAAUuE,OAAOH,EAASE,SAAStE,UACnCwE,KAAMJ,EAASE,SAASE,KACxBC,WAAYC,EAAAA,EAAgBC,IAC5BzH,UACA4C,IAAI8E,EAAAA,EAAAA,GAAYF,EAAAA,EAAgBC,IAAKzH,GACrC2H,MAAOT,EAASE,SAASO,UAG7B,OADA1G,EAAgByF,IAAI1G,EAAS4G,GACtBA,CAAC,E,eCxML,MAAMgB,GAAaxM,IAAoC,IAAnC,QAAEyM,EAAO,kBAAEC,GAAmB1M,EACrD,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,OACPC,IAAc9F,EAAAA,EAAAA,MACdL,IAAaC,EAAAA,EAAAA,OACZ3E,KAAM8K,IAAQC,EAAAA,EAAAA,OAChB,WAAEC,EAAYhL,KAAMiL,GAAoB7G,KACvC8G,IAAgBhG,EAAAA,EAAAA,MACjBiG,GAAcC,EAAAA,EAAAA,OACZpL,KAAMqL,GAAgB1M,IAE9B,IADuByG,EAAAA,EAAAA,MAEnB,OAAQ9G,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUC,WAAW,EAAMC,UAAU,EAAMpN,SAAUiK,EAAE,uBAExF,IAAK0C,GAA6B,OAAfC,QAAe,IAAfA,GAAAA,EAAiBS,OAAMvE,IAAMA,EAAEzD,QAC9C,OAAQpF,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUE,UAAU,EAAMpN,SAAUiK,EAAE,iCAEvE,GAAK0C,IAA2B,OAAZE,QAAY,IAAZA,IAAAA,EAAcxH,SAAWoH,QAAuB/E,IAAhBoF,IAA8BE,EAC9E,OAAQ/M,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUC,WAAW,EAAMG,SAAS,EAAMtN,SAAUiK,EAAE,cAEvF,IAAK4C,IAAiBA,EAAaxH,MAC/B,OAAQpF,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUC,WAAW,EAAMC,UAAU,EAAMpN,SAAUiK,EAAE,iCAGxF,GADmC,OAAVuC,QAAU,IAAVA,OAAU,EAAVA,EAAY3I,IAAG0J,EAAAA,EAAAA,IAAgBd,EAAKpG,EAAUiB,WAEnE,OAAQrH,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUC,WAAW,EAAMC,UAAU,EAAMpN,SAAUiK,EAAE,2BAGxF,OADsC,OAAX6C,QAAW,IAAXA,OAAW,EAAXA,EAAajJ,GAAGmJ,EAAY/L,kBAE3ChB,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUC,WAAW,EAAMC,UAAU,EAAMpN,SAAUiK,EAAE,iCAEhFhK,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEC,KAAM,SAAUM,SAAS,EAAMnB,QAASA,EAASiB,QAAShB,EAAmBtM,SAAUiK,EAAE,aAAc,E,wCChC3H,MAAMwD,IAAkBC,EAAAA,EAAAA,aAAW,CAAA9N,EAA4B+N,KAAQ,IAAnC,UAAEC,EAAS,WAAEC,GAAYjO,EAChE,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,OACP3H,EAAOkJ,IAAYC,EAAAA,GAAAA,KAC1B,OAAQ9N,EAAAA,EAAAA,KAAK+N,GAAAA,GAAO,CAAE5G,GAAI,cAAexC,MAAOA,EAAOqJ,SAAUjF,GAAK8E,EAAS9E,GAAI2E,IAAKA,EAAKP,SAAUS,EAAYK,MAAOjE,EAAE,eAAgBkE,aAAa,EAAMP,UAAWA,EAAWV,KAAM,SAAU,I,wCCFzM,MAAMkB,GAAmCC,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,oFAK7CC,IAAmBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAaK,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,sEAGzBnD,GAAKA,EAAEuD,MAAMC,gBAEpBC,GAAeR,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,4HAUzBQ,IAAqBV,EAAAA,EAAAA,IAAOW,GAAAA,GAAPX,CAAoBY,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,mBACzCnD,GAA6B,eAAxBA,EAAEuD,MAAMO,aAAgC,sBAEtCC,GAA4BvP,IAAsC,IAArC,OAAEwP,EAAM,QAAEC,EAAO,YAAEC,GAAa1P,EACtE,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,MACd,OAAQtM,EAAAA,EAAAA,KAAKsP,EAAAA,SAAW,CAAEvP,UAAUC,EAAAA,EAAAA,KAAK8O,GAAoB,CAAEK,OAAQA,EAAQI,YAAaH,EAASrP,SAAUA,KAAOF,EAAAA,EAAAA,MAAMsO,GAAkC,CAAEpO,SAAU,EAACC,EAAAA,EAAAA,KAAKwP,EAAAA,GAAQ,CAAEzP,SAAUiK,EAAE,2BAA2ByF,QAAQ,UAAWJ,MAAiBrP,EAAAA,EAAAA,KAAKuO,GAAkB,CAAExO,SAAUiK,EAAE,qCAAsCnK,EAAAA,EAAAA,MAAM+O,GAAc,CAAE7O,SAAU,EAACC,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEO,SAAS,EAAMnB,QAASA,IAAMgD,GAAQ,GAAQrP,SAAUiK,EAAE,aAAchK,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEE,WAAW,EAAMd,QAASA,IAAMgD,GAAQ,GAAOrP,SAAUiK,EAAE,0BAAgC,E,8CClBtjB,MAAM0F,GAAwBtB,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,gPAalCqB,GAAUvB,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,0EAGFnD,GAAKA,EAAEuD,MAAMkB,kBAExBC,GAAiBlQ,IAAoC,IAAnC,iBAAEmQ,EAAgB,SAAEC,GAAUpQ,EACzD,MAAOqQ,EAAkBC,IAAuBC,EAAAA,EAAAA,UAASJ,EAAiBxG,MAAM,EAAG,KAC7EoE,GAAMyC,EAAAA,EAAAA,QAAO,OACnBC,EAAAA,EAAAA,YAAU,KACNH,EAAoBH,EAAiBxG,MAAM,EAAG,IAAI,GACnD,CAACwG,IAUJ,OAAQ9P,EAAAA,EAAAA,KAAK0P,GAAuB,CAAEhC,IAAKA,EAAK2C,UAAUC,EAAAA,GAAAA,KATzCD,KACb,GAAQ,OAAH3C,QAAG,IAAHA,IAAAA,EAAK6C,QACN,OAEqB7C,EAAI6C,QAAQC,aAAe9C,EAAI6C,QAAQE,aAAe/C,EAAI6C,QAAQG,UACpE,KACnBT,GAAoBU,GAAKb,EAAiBxG,MAAM,EAAGqH,EAAE7H,OAAS,KAClE,GAEyE,KAAM/I,SAAU+P,EAAiBhH,OAAUkH,EAAiBjG,KAAI,CAAC6G,EAAWC,KAAWhR,EAAAA,EAAAA,MAAMiR,EAAAA,SAAU,CAAE/Q,SAAU,EAACC,EAAAA,EAAAA,KAAK+Q,GAAe,CAAE3E,QAASA,IAAM2D,EAASa,EAAUI,YAAY7G,OAAQyG,UAAWA,IAAcC,IAAUf,EAAiBhH,OAAS,IAAK9I,EAAAA,EAAAA,KAAK2P,GAAS,CAAC,KAAOiB,EAAUI,YAAY7G,MAAMhD,OAAUnH,EAAAA,EAAAA,KAAKiR,GAAe,CAAElB,SAAUA,KAAe,EAExbmB,GAA0B9C,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,4IAM7BnD,GAAKA,EAAEuD,MAAMC,gBAEpBsC,GAAgBE,IAAkB,IAAjB,SAAEpB,GAAUoB,EAC/B,MAAM,EAAEnH,IAAMsC,EAAAA,EAAAA,OACN5K,KAAMkP,EAAS,WAAElE,IAAe0E,EAAAA,GAAAA,OACjCC,EAAUC,IAAepB,EAAAA,EAAAA,WAAS,IACnC,OAAEqB,IAAWC,EAAAA,GAAAA,MACnB,GAAI9E,EACA,OAAQ1M,EAAAA,EAAAA,KAAKkR,GAAyB,CAAEnR,UAAUC,EAAAA,EAAAA,KAAKyR,EAAAA,GAAa,CAAC,KAEzE,IAAKb,EACD,OAAQ5Q,EAAAA,EAAAA,KAAKkR,GAAyB,CAAEnR,UAAUC,EAAAA,EAAAA,KAAKwO,EAAAA,GAAO,CAAEzO,SAAUiK,EAAE,6BAShF,OAAQnK,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,EAACC,EAAAA,EAAAA,KAAKkP,GAA2B,CAAEC,OAAQkC,EAAUjC,QAPzEsC,IACbJ,GAAY,GACRI,IACAH,EAAOX,EAAUI,YAAY7G,OAC7B4F,EAASa,EAAUI,YAAY7G,OACnC,EAEwGkF,YAAauB,EAAUI,YAAY7G,MAAMuB,UAAW1L,EAAAA,EAAAA,KAAK+Q,GAAe,CAAE3E,QAASA,IAAMkF,GAAY,GAAOV,UAAWA,MAAgB,EAEjPe,GAAuBvD,EAAAA,GAAOwD,OAAM5C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,kSAadnD,GAAKA,EAAEuD,MAAMmD,oBAGnCC,GAAa1D,EAAAA,GAAO2D,IAAGC,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,yEAKvB2D,GAAY7D,EAAAA,GAAO7L,IAAG2P,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,0FAKtB6D,GAAgB/D,EAAAA,GAAO7L,IAAG6P,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,oSAWxBkB,EAAAA,IACSrE,GAAKA,EAAEuD,MAAM2D,cAOxBC,GAAqBlE,EAAAA,GAAO7L,IAAGgQ,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,2GAIhBnD,GAAKA,EAAEuD,MAAM8D,gBAI5BC,IAAsBrE,EAAAA,EAAAA,IAAO+D,GAAP/D,CAAqBsE,KAAAA,IAAApE,EAAAA,EAAAA,GAAA,wFACpCnD,GAAKA,EAAEuD,MAAMC,gBAMpBgE,IAAevE,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAcwE,KAAAA,IAAAtE,EAAAA,EAAAA,GAAA,2BACtBnD,GAAMA,EAAE0H,OAAS1H,EAAEuD,MAAMoE,aAAe3H,EAAEuD,MAAM2D,cAEvDtB,GAAgBgC,IAA4B,IAA3B,UAAEnC,EAAS,QAAExE,GAAS2G,EACzC,MAAMC,EAAgBpC,EAAUI,YAAYiC,eAAeJ,UACrD,KAAEK,IAASC,EAAAA,GAAAA,MACX7S,GAAMC,EAAAA,EAAAA,KAeZ,OAAQV,EAAAA,EAAAA,MAAM8R,GAAsB,CAAEvF,QAASA,EAASrM,SAAU,EAACC,EAAAA,EAAAA,KAAK8R,GAAY,CAAEsB,IAAKxC,EAAUI,YAAY7G,MAAM+B,SAAUrM,EAAAA,EAAAA,MAAMoS,GAAW,CAAElS,SAAU,EAACF,EAAAA,EAAAA,MAAMsS,GAAe,CAAEpS,SAAU,EAACC,EAAAA,EAAAA,KAAKwP,EAAAA,GAAQ,CAAEzP,SAAU6Q,EAAUI,YAAY7G,MAAMuB,UAAW1L,EAAAA,EAAAA,KAAKsS,GAAoB,CAAElG,QAdpQrD,IAGpB,IAAIsK,EAFJtK,EAAEuK,iBACFvK,EAAEwK,kBAGEF,GADAlK,EAAAA,EAAAA,IAAMyH,EAAUI,YAAY7G,MAAM5F,SACpB,8BAGA,yBAAHqE,OAA4BgI,EAAUI,YAAY7G,MAAM5F,QAAQ9B,SAAS,CAChF+Q,SAAS,KAGjBlT,EAAImT,SAASJ,EAAY,EAEwRtT,UAAUC,EAAAA,EAAAA,KAAK0T,EAAAA,GAAa,CAAC,MAAO1T,EAAAA,EAAAA,KAAK2S,GAAc,CAAEE,OAAQG,EAAejT,SAAU6Q,EAAUI,YAAY2C,2BAA6B9T,EAAAA,EAAAA,MAAM4S,GAAqB,CAAE1S,SAAU,EAACC,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAU6Q,EAAUI,YAAY7G,MAAM0B,QAAUmH,IAAkBhT,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,UAAU8T,EAAAA,GAAAA,IAAmBX,EAAMtC,EAAUkD,sBAA2B,E,yBCnJppB,MAAMC,IAAwBnO,EAAAA,EAAAA,SAAK6B,GAO7BqH,IAAqBV,EAAAA,EAAAA,IAAOW,GAAAA,GAAPX,CAAoBC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kCAGlC0F,GAA6BA,KACtC,MAAM,EAAEhK,IAAMsC,EAAAA,EAAAA,OACPyD,EAAUkE,IAAa9N,EAAAA,EAAAA,IAAQ4N,IAChC3E,EAAWjF,IACL,OAAR4F,QAAQ,IAARA,GAAAA,EAAUX,QAAQjF,GAClB8J,OAAUxM,EAAU,EAExB,OAAQzH,EAAAA,EAAAA,KAAKsP,EAAAA,SAAW,CAAEvP,UAAUC,EAAAA,EAAAA,KAAK8O,GAAoB,CAAEK,SAAUY,EAAUR,YAAaA,IAAMH,OAAQ3H,GAAYyM,MAAOlK,EAAE,eAAgBmK,QAAQnU,EAAAA,EAAAA,KAAK,MAAO,CAAC,GAAID,SAAUA,KAAMC,EAAAA,EAAAA,KAAKoU,GAAuB,CAAErE,SAAUX,OAAgB,EAElPiF,IAAwBjG,EAAAA,EAAAA,IAAOZ,GAAPY,CAAuBK,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,oCAG/CgG,GAA+BlG,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,mBACzCnD,GAA6B,eAAxBA,EAAEuD,MAAMO,aACbsF,EAAAA,EAAAA,IAAGvF,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,2DAGHiG,EAAAA,EAAAA,IAAGvC,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,qFAIHqB,GAAUvB,EAAAA,GAAO7L,IAAG2P,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,6GAIFnD,GAAKA,EAAEuD,MAAMkB,kBAE/B4E,GAAmBpG,EAAAA,GAAO7L,IAAG6P,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,0GAM7B8F,GAAwBzU,IAAkB,IAAjB,SAAEoQ,GAAUpQ,EACvC,MAAMmQ,GAAmB2E,EAAAA,GAAAA,MACnBC,GAAWvE,EAAAA,EAAAA,WACVzJ,EAAGiO,IAAa7G,EAAAA,GAAAA,KAKvB,OAJAsC,EAAAA,EAAAA,YAAU,KACNwE,YAAW,SAAAC,EAAA,OAAc,OAARH,QAAQ,IAARA,GAAiB,QAATG,EAARH,EAAUnE,eAAO,IAAAsE,OAAA,EAAjBA,EAAmBC,OAAO,GAAE,KACtC,IAAMH,EAAU,MACxB,KACK9U,EAAAA,EAAAA,MAAMyU,GAA8B,CAAEvU,SAAU,EAACC,EAAAA,EAAAA,KAAKqU,GAAuB,CAAE3G,IAAKgH,EAAU9G,YAAakC,KAAqB9P,EAAAA,EAAAA,KAAK2P,GAAS,CAAC,GAAIG,GAAoB9P,EAAAA,EAAAA,KAAK6P,GAAgB,CAAEE,SAAUA,EAAUD,iBAAkBA,KAAwB9P,EAAAA,EAAAA,KAAKwU,GAAkB,CAAEzU,UAAUC,EAAAA,EAAAA,KAAKyR,EAAAA,GAAa,CAAC,OAAU,E,aCvDxU,MAAMsD,IAAc3G,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAcC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4LAMrBnD,GAAKA,EAAEuD,MAAM2D,cAIpB2C,GAAkB5G,EAAAA,GAAOwD,OAAMnD,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,gRAYzByG,IACS5J,GAAKA,EAAEuD,MAAMC,gBAI5BmD,GAAa1D,EAAAA,GAAO2D,IAAGlD,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,8FAMhB2G,GAAkBtV,IAAyC,IAAxC,MAAEuV,EAAK,cAAEC,EAAa,UAAExH,GAAWhO,EAC/D,MACMyV,ED9B4BhG,KAClC,MAAO1I,EAAGuN,IAAa9N,EAAAA,EAAAA,IAAQ4N,IAC/B,OAAOsB,EAAAA,EAAAA,cAAY,IAAMpB,GAAU,KAAM,CACrC7E,eACC,CAAC6E,EAAW7E,GAAS,EC0BTkG,EADDD,EAAAA,EAAAA,cAAarL,GAAMA,GAAKmL,EAAcnL,IAAI,CAACmL,KAE3D,OAAQtV,EAAAA,EAAAA,MAAMmV,GAAiB,CAAErH,UAAWA,EAAWvB,QAASgJ,EAAUrV,SAAU,EAACC,EAAAA,EAAAA,KAAK8R,GAAY,CAAEsB,IAAK8B,EAAMhJ,SAAUlM,EAAAA,EAAAA,KAAK+U,GAAa,CAAEhV,SAAUmV,EAAMxJ,UAAW1L,EAAAA,EAAAA,KAAKuV,EAAAA,GAAY,CAAC,KAAM,E,yCClCxM,MAAMC,GAAqBpH,EAAAA,GAAOqH,MAAKpH,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6NAM1BnD,GAAMA,EAAEuK,UAAYvK,EAAEuD,MAAMiH,UAAYxK,EAAEuD,MAAM2D,aAGvDuD,EAAAA,IAGWzK,GAAKA,EAAEuD,MAAMoE,e,+BCX9B,MAAM+C,IAAczH,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iDACpBnD,GAAKA,EAAEuD,MAAMC,gBAGbmH,GAAiBnW,IAAuB,IAAtB,OAAE+E,EAAM,MAAEyF,GAAOxK,EAC5C,MAAM,KAAEuT,IAASC,EAAAA,GAAAA,OACTzR,KAAMqU,EAAI,UAAEC,IAAcC,EAAAA,GAAAA,KAAQC,EAAAA,EAAAA,GAAwB/L,EAAM5F,UACxE,IAAKG,EACD,OAAO1E,EAAAA,EAAAA,KAAK,MAAO,CAAC,GAExB,IAAKgW,IAAkB,OAAJD,QAAI,IAAJA,IAAAA,EAAMI,QACrB,OAAOnW,EAAAA,EAAAA,KAAK,MAAO,CAAC,GAExB,GAAIgW,EACA,OAAOhW,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,UAEnE,MAAMC,GAAS3C,EAAAA,GAAAA,IAAmBX,EAAM,IAAI5Q,EAAAA,EAAUyT,EAAKI,QAAQM,aAAa/R,IAChF,OAAO7E,EAAAA,EAAAA,MAAMgW,GAAa,CAAE9V,SAAU,CAAC,aAAgByW,IAAU,E,yBChBrE,MAAMX,IAAczH,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,2BACpBnD,GAAKA,EAAEuD,MAAMC,gBAEpB+H,GAAmBtI,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,2EAK7BqI,GAAYvI,EAAAA,GAAOwD,OAAM/C,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,oRAGlBnD,GAAKA,EAAEuD,MAAMkI,aAcbC,GAAwBA,KACjC,MAAOnQ,EAAGoQ,IAAiBrQ,EAAAA,EAAAA,MACpB0D,IAAS9D,EAAAA,EAAAA,OACR3E,KAAMqV,IAAYtK,EAAAA,EAAAA,MAC1B,OAAQzM,EAAAA,EAAAA,KAAKgX,GAAmB,CAAED,QAASA,EAAS1P,SAAU8C,EAAM9C,SAAU4P,MAAOA,IAAMH,GAAcxJ,EAAAA,EAAAA,IAAgByJ,EAAS5M,EAAM9C,YAAa,EAE5I6P,GAAsBA,KAC/B,MAAO/M,IAAS5D,EAAAA,EAAAA,MACVwQ,GAAUI,EAAAA,GAAAA,IAAmB,CAAE5S,QAAS4F,EAAM5F,QAASuH,WAAYC,EAAAA,EAAgBC,MACzF,OAAOhM,EAAAA,EAAAA,KAAKgX,GAAmB,CAAED,QAASA,EAAS1P,SAAU8C,EAAM9C,UAAW,EAE5E2P,GAAoBrX,IAAsC,IAArC,QAAEoX,EAAO,SAAE1P,EAAW,EAAC,MAAE4P,GAAOtX,EACvD,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,MACR8K,GAASC,EAAAA,GAAAA,MACf,OAAQxX,EAAAA,EAAAA,MAAM6W,GAAkB,CAAE3W,SAAU,EAACF,EAAAA,EAAAA,MAAMgW,GAAa,CAAE9V,SAAU,CAACiK,EAAE,gBAAiB,WAAe+M,GAAW/W,EAAAA,EAAAA,KAAK6V,GAAa,CAAE9V,SAAUqX,EAAOL,EAAS1P,MAAiBrH,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,UAAaU,IAAUjX,EAAAA,EAAAA,KAAK2W,GAAW,CAAExJ,UAAW4J,GAAWA,EAAQlE,SAAUzG,QAAS6K,EAAOlX,UAAUC,EAAAA,EAAAA,KAAKsX,EAAAA,GAAQ,CAAEvX,SAAUiK,EAAE,kBAAsB,E,sBCtCjZ,MAAMuN,GAAuBnJ,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0GAErBnD,GAAKA,EAAEuD,MAAMmD,oBACV1G,GAA6B,eAAxBA,EAAEuD,MAAMO,YAA+B9D,EAAEuD,MAAM8I,cAAgBrM,EAAEuD,MAAM+I,cAG3FC,GAActJ,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,gMACjBnD,GAAKA,EAAEuD,MAAMC,gBAcpBgJ,GAAYvJ,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,kEAKtBsJ,GAAcxJ,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,+JAWxBuJ,IAAwBzJ,EAAAA,EAAAA,IAAO6G,GAAP7G,CAAuB4D,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,+BAG/CwJ,IAAwB1J,EAAAA,EAAAA,KH5BCzO,IAAyD,IAAxD,MAAEgF,EAAK,SAAEqJ,EAAQ,SAAE3G,EAAQ,UAAEsG,EAAS,UAAE+H,GAAW/V,EAC/E,MAAO8V,EAAOsC,IAAY7H,EAAAA,EAAAA,UAAS,KAuBnCE,EAAAA,EAAAA,YAAU,KACN,GAAKzL,GAID,IAAK8Q,EAAMuC,UAASC,EAAAA,GAAAA,OAChB,IACoB,IAAI3V,EAAAA,GAAU4V,EAAAA,GAAAA,IAAqBzC,GAAOhG,SAAQwI,EAAAA,GAAAA,MAAuB,MAC5EE,GAAGxT,IACZoT,GAASK,EAAAA,GAAAA,IAAkBzT,GAEnC,CACA,MAAO+B,GACH,OAXRqR,EAAS,GAcb,GACD,CAACpT,IACJ,MAAM0T,GAAmBJ,EAAAA,GAAAA,MACzB,OAAQjY,EAAAA,EAAAA,KAAKwV,GAAoB,CAAErO,GAAI,cAAexC,MAAO8Q,EAAOzH,SAAUjF,GAzC7DuP,KACb,IAAIC,GAAaC,EAAAA,GAAAA,IAA6BF,GAC9C,IAAKC,EAGD,OAFAR,EAAS,SACT/J,OAASvG,GAGb,IAAKgR,EAAAA,GAAAA,IAAgBF,EAAYlR,KAG7BqR,EAAAA,GAAAA,IAAUH,GAAa,CACvB,IAAKA,EAAWP,UAASC,EAAAA,GAAAA,OAAwB,CAC7C,MAAMU,EAAU,IAAIrW,EAAAA,GAAU4V,EAAAA,GAAAA,IAAqBK,GAAY9I,SAAQwI,EAAAA,GAAAA,MAAuB,MACxFW,EAAc,IAAItW,EAAAA,GAAU4V,EAAAA,GAAAA,IAAqBzC,GAAOhG,SAAQwI,EAAAA,GAAAA,MAAuB,MACxFU,EAAQR,GAAGS,KACZ5K,EAAS2K,GACTJ,GAAaM,EAAAA,GAAAA,IAAgBN,GAErC,CACAR,EAASQ,EACb,GAqB+EO,CAAQ/P,EAAEgQ,OAAOpU,OAAQqU,YAAa,IAAFpQ,OAAMyP,EAAgB,MAAM1K,UAAWA,EAAW+H,UAAWA,EAAWuD,UAAW,WAAY,GGf5L7K,CAAuB8D,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,wBAGxC4K,GAAgBvZ,IAAkB,IAAjB,SAAEI,GAAUJ,EACtC,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,OACPC,EAAYuK,IAAiBrQ,EAAAA,EAAAA,MAC7BL,EAAW+S,IAAgB9S,EAAAA,EAAAA,OAC1B3E,KAAM8K,IAAQC,EAAAA,EAAAA,MACtB,OAAQ5M,EAAAA,EAAAA,MAAM0X,GAAsB,CAAExX,SAAU,EAACF,EAAAA,EAAAA,MAAM6X,GAAa,CAAE3X,SAAU,EAACC,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUiK,EAAE,gBAAiBhK,EAAAA,EAAAA,KAAK6W,GAAuB,CAAC,OAAQhX,EAAAA,EAAAA,MAAM8X,GAAW,CAAE5X,SAAU,EAACC,EAAAA,EAAAA,KAAK6X,GAAuB,CAAE3C,MAAO9O,EAAW+O,cAAegE,KAAiBnZ,EAAAA,EAAAA,KAAK8X,GAAuB,CAAEnT,MAAO4H,EAAYyB,UAAUoL,EAAAA,GAAAA,IAAStC,GAAgBzP,SAAUjB,EAAUiB,SAAUqO,YAAalJ,KACpXD,GACFA,EAAW3I,IAAG0J,EAAAA,EAAAA,IAAgBd,EAAKpG,EAAUiB,iBAAmBrH,EAAAA,EAAAA,KAAK4X,GAAa,CAAE7X,UAAUC,EAAAA,EAAAA,KAAK8V,GAAgB,CAAEpR,OAAQ6H,EAAYpC,MAAO/D,MAAiBrG,IAAY,E,yBCnDzM,MAAMsZ,GAAyBjL,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8GAEvBnD,GAAKA,EAAEuD,MAAMmD,oBACV1G,GAA6B,eAAxBA,EAAEuD,MAAMO,YAA+B9D,EAAEuD,MAAM8I,cAAgBrM,EAAEuD,MAAM+I,cAG3F6B,GAAUlL,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,2IACbnD,GAAKA,EAAEuD,MAAMC,gBAQb4K,GAAgBA,KACzB,MAAM,EAAEvP,IAAMsC,EAAAA,EAAAA,MAEd,OADuBxF,EAAAA,EAAAA,OAEZ9G,EAAAA,EAAAA,KAAK,MAAO,CAAC,IAEhBH,EAAAA,EAAAA,MAAMwZ,GAAwB,CAAEtZ,SAAU,EAACC,EAAAA,EAAAA,KAAKsZ,GAAS,CAAEvZ,UAAUC,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUiK,EAAE,sBAAwBhK,EAAAA,EAAAA,KAAKwZ,GAAc,CAAEtU,SAAU,YAAalF,EAAAA,EAAAA,KAAKwZ,GAAc,CAAEtU,SAAU,aAAe,EAEvNuU,GAAqBrL,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,6SAEhBnD,GAA6B,eAAxBA,EAAEuD,MAAMO,YAA+B9D,EAAEuD,MAAM8I,cAAgBrM,EAAEuD,MAAM+I,cACzEtM,GAAMA,EAAEuO,SAAWvO,EAAEuD,MAAMkI,WAAazL,EAAEuD,MAAMkB,kBAK1DzE,GAAMA,EAAEyC,WAAa,cAAgB,YAQ7C+L,GAAgBvL,EAAAA,GAAO2D,IAAG/C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,wEAK1BsL,GAAyBxL,EAAAA,GAAO7L,IAAGyP,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,iFAKnCuL,GAAyBzL,EAAAA,GAAO7L,IAAG2P,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,qIAOnCuH,IAAczH,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAagE,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,2BACpBnD,GAAKA,EAAEuD,MAAMC,gBAEpBmL,GAAkB,CACpBC,OAAQ,CACJC,SAAU,mDACV/L,MAAO,WAEXgM,OAAQ,CACJD,SAAU,mDACV/L,MAAO,WAGTuL,GAAe7Z,IAAkB,IAAjB,SAAEuF,GAAUvF,EAC9B,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,OACPM,EAAcjG,IAAmBC,EAAAA,EAAAA,MAClC8S,GAAuB,OAAZ9M,QAAY,IAAZA,OAAY,EAAZA,EAAc1H,YAAaA,GACtC,aAAEe,EAAY,WAAEyG,GAAe5G,IAC/B/D,EAAOkE,EAAasE,MAAKP,GAAKA,EAAE9E,WAAaA,IAC7CE,EAAY,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,OACbkB,IAAWC,EAAAA,EAAAA,OACV7E,KAAMqU,EAAMrJ,WAAYwN,IAAmBjE,EAAAA,GAAAA,KAAQC,EAAAA,EAAAA,GAAwB5P,EAAQ/B,UACrF4V,EAAkE,IAAzDlU,EAAamU,WAAUpQ,GAAKA,EAAE9E,WAAaA,OAAyB,OAAJnD,QAAI,IAAJA,IAAAA,EAAMqD,OAC/EiV,EAAiBP,GAAgB5U,IACjC,WAAE4O,IAAewG,EAAAA,GAAAA,IAAcvE,GAAW,OAAL3Q,QAAK,IAALA,OAAK,EAALA,EAAOZ,GAAGyO,iBAAkB,IAAI3Q,EAAAA,EAAU,IACrF,OAAQzC,EAAAA,EAAAA,MAAM4Z,GAAoB,CAAE7L,YAAa7L,IAASqD,EAAOsU,SAAUA,EAAUtN,QAASA,IAAMrK,GAAQqD,GAASuB,EAAgB5E,GAAOhC,SAAU,EAACC,EAAAA,EAAAA,KAAK2Z,GAAe,CAAEvG,IAAKiH,EAAeL,YAAana,EAAAA,EAAAA,MAAM+Z,GAAwB,CAAE7Z,SAAU,EAACC,EAAAA,EAAAA,KAAKwP,EAAAA,GAAQ,CAAEzP,SAAUsa,EAAepM,QAAUkM,IAAUna,EAAAA,EAAAA,KAAK6V,GAAa,CAAE9V,SAAUiK,EAAE,yBAA2BhK,EAAAA,EAAAA,KAAK6Z,GAAwB,CAAE9Z,SAAW2M,GAAetH,GAA+EvF,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,CAACqF,GAASpF,EAAAA,EAAAA,KAAKwP,EAAAA,GAAQ,CAAEzP,SAAUqF,EAAMZ,GAAG+V,6BAAiCva,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,UAAaR,GAAQ3Q,GAASvF,EAAAA,EAAAA,MAAMgW,GAAa,CAAE9V,SAAU,CAAC,aAAgB+T,KAAkBoG,GAAkBla,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,WAAevW,EAAAA,EAAAA,KAAK,MAAO,CAAC,OAA9aA,EAAAA,EAAAA,KAAK6V,GAAa,CAAE9V,SAAUiK,EAAE,qCAA6Z,E,4BCxFn3B,MAAMwQ,GAAmBpM,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,2JAGPnD,GAAKA,EAAEsP,gBACdtP,GAAKA,EAAEsP,gBAEtBC,GAAqBtM,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,wKAEXnD,GAAMA,EAAEwP,UAAY,MAAQ,QACtCxP,GAAMA,EAAEyP,qBAAuBzP,EAAEwP,UAAY,UAAY,WACpCxP,GAAKA,EAAEsP,eAEtCD,IACIrP,GAAKA,EAAEwP,YACbpG,EAAAA,EAAAA,IAAG1F,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,yGAMDuM,GAAgBzM,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,iDAInBwM,GAAYnb,IAAgD,IAA/C,SAAEI,EAAQ,SAAEsR,EAAQ,aAAE0J,EAAe,KAAKpb,EAChE,MAAOqb,EAAsBC,IAA2B/K,EAAAA,EAAAA,WAAS,GAC3DgL,GAAa/K,EAAAA,EAAAA,UAUnB,OATAC,EAAAA,EAAAA,YAAU,KACN+K,aAAaD,EAAW3K,SACpBc,EACA4J,GAAwB,GAGxBC,EAAW3K,QAAUqE,YAAW,IAAMqG,GAAwB,IAAO,IACzE,GACD,CAAC5J,KACIrR,EAAAA,EAAAA,KAAK0a,GAAoB,CAAE,oBAAuBM,EAAsB,UAAa3J,EAAU,cAAiB0J,EAAchb,UAAUC,EAAAA,EAAAA,KAAK6a,GAAe,CAAE9a,UAAUC,EAAAA,EAAAA,KAAKwa,GAAkB,CAAE,cAAiBO,EAAchb,SAAUA,OAAiB,E,iDCxBvQ,MAAMqb,GAAkBhN,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,QAC5B+M,GAAejN,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,kMAMlBnD,GAAKA,EAAEuD,MAAMC,gBAGTxD,GAAKA,EAAEuD,MAAMC,gBAGxB6L,GAAmBpM,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,gJAsB7BgN,IAjBqBlN,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,uKAEXnD,GAAMA,EAAEkG,SAAW,MAAQ,QACrClG,GAAMA,EAAEoQ,oBAAsBpQ,EAAEkG,SAAW,UAAY,UAGjEmJ,IACIrP,GAAKA,EAAEkG,WACbkD,EAAAA,EAAAA,IAAGvC,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,yGAMeF,EAAAA,GAAO7L,IAAG2P,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,+BAGRF,EAAAA,EAAAA,IAAOoN,EAAAA,EAAPpN,CAAkBgE,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,+FACzBnD,GAAMA,EAAEkG,SAAW,iBAAmB,kBAIjDoK,GAAUrN,EAAAA,GAAO7L,IAAGgQ,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,mKAWpBoN,GAAUtN,EAAAA,GAAO7L,IAAGmQ,KAAAA,IAAApE,EAAAA,EAAAA,GAAA,oSASFnD,GAAKA,EAAEuD,MAAMiN,uBAE/BC,GAAAA,EACAC,EAAAA,IAEA1Q,GAAqB,QAAhBA,EAAE2Q,WACPvH,EAAAA,EAAAA,IAAG3B,KAAAA,IAAAtE,EAAAA,EAAAA,GAAA,iHAIHiG,EAAAA,EAAAA,IAAGwH,KAAAA,IAAAzN,EAAAA,EAAAA,GAAA,gHAKH0N,GAAc5N,EAAAA,GAAO7L,IAAG0Z,KAAAA,IAAA3N,EAAAA,EAAAA,GAAA,4HAGdoN,IAKVQ,IAAe9N,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAa+N,KAAAA,IAAA7N,EAAAA,EAAAA,GAAA,2BACrBnD,GAAKA,EAAEuD,MAAMC,gBAEpByN,IAAehO,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAaiO,KAAAA,IAAA/N,EAAAA,EAAAA,GAAA,kCAG5BgO,GAAeA,KACVtc,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,UAE7DgG,IAAcnO,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAaoO,KAAAA,IAAAlO,EAAAA,EAAAA,GAAA,2BACpBnD,GAAkB,QAAbA,EAAEsR,OACdtR,EAAEuD,MAAMgO,YACK,WAAbvR,EAAEsR,QAAoC,YAAbtR,EAAEsR,OACvBtR,EAAEuD,MAAMiO,aACRxR,EAAEuD,MAAMiH,YAELiH,GAAsBA,KAC/B,MAAM,EAAE5S,IAAMsC,EAAAA,EAAAA,OACP+E,EAAUC,IAAepB,EAAAA,EAAAA,WAAS,IACnC,WAAExD,GAAe5G,KAChB/D,IAAQ6E,EAAAA,EAAAA,MACTiG,GAAcC,EAAAA,EAAAA,OACZpL,KAAMqL,GAAgB1M,IACxBwG,GAAiBC,EAAAA,EAAAA,MACjB1B,EAAY,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,MACpB,IAAMsH,IAAetH,GAAUyB,EAC3B,OAAO,KAKX,OAAQhH,EAAAA,EAAAA,MAAMub,GAAiB,CAAErb,SAAU,EAACF,EAAAA,EAAAA,MAAMwb,GAAc,CAAEjP,QAHxCyQ,KACtBvL,GAAYwL,IAAMA,GAAE,EAEsE/c,SAAU,EAACC,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUiK,EAAE,mBAAoBhK,EAAAA,EAAAA,KAAKsb,GAAiB,CAAEyB,aAAa,EAAM1L,SAAUA,EAAUtR,UAAUC,EAAAA,EAAAA,KAAKgd,EAAAA,GAAiB,CAAC,SAAWnd,EAAAA,EAAAA,MAAMib,GAAW,CAAEzJ,SAAUA,EAAUtR,SAAU,EAACF,EAAAA,EAAAA,MAAM4b,GAAS,CAAE1b,SAAU,EAACC,EAAAA,EAAAA,KAAKkc,GAAc,CAAEnc,SAAUiK,EAAE,wBAAyBhK,EAAAA,EAAAA,KAAKgc,GAAa,CAAEjc,UAAUC,EAAAA,EAAAA,KAAKid,EAAAA,GAAgB,CAAC,MAAOjd,EAAAA,EAAAA,KAAK0b,GAAS,CAAEI,UAAW,MAAO/b,SAAUiK,EAAE,gCAAiChK,EAAAA,EAAAA,KAAKoc,GAAc,CAAErc,cAA0B0H,IAAhBoF,GAA8BzH,GAAoCpF,EAAAA,EAAAA,KAAKuc,GAAa,CAAEE,QAAQS,EAAAA,EAAAA,IAAkBrQ,GAAc9M,SAAU8M,GAAehN,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,CAAC,aAAgB,GAAF6I,OAAKiE,EAC9sB4J,aAAa,KACbjU,cAAc,GACdC,WACAgN,QAAQ,KAAKwI,EAAAA,GAAAA,OACbxI,QAAQ,IAAK,KAAI,QAAYzF,EAAE,gCAL8gBhK,EAAAA,EAAAA,KAAKsc,GAAc,CAAC,SAKxfzc,EAAAA,EAAAA,MAAM4b,GAAS,CAAE1b,SAAU,EAACC,EAAAA,EAAAA,KAAKkc,GAAc,CAAEnc,SAAUiK,EAAE,4BAA6BhK,EAAAA,EAAAA,KAAKgc,GAAa,CAAEjc,UAAUC,EAAAA,EAAAA,KAAKid,EAAAA,GAAgB,CAAC,MAAOjd,EAAAA,EAAAA,KAAK0b,GAAS,CAAEI,UAAW,MAAO/b,SAAUiK,EAAE,oCAAqChK,EAAAA,EAAAA,KAAKoc,GAAc,CAAErc,SAAWqF,GAAU2H,GAA0ClN,EAAAA,EAAAA,MAAM+T,EAAAA,GAAO,CAAE7T,SAAU,CAAC,aAAgB,IAAImK,EAAAA,EAAY,CACpcR,UAAWtE,EAAMZ,GAAGkF,UACf+M,aAAa,IAAM1J,EAAYhM,iBAC/BwB,IAAI,KACT4H,MAAO/E,EAAMZ,GAAG2F,QACjBoQ,8BALgXva,EAAAA,EAAAA,KAAKsc,GAAc,CAAC,SAK7Vzc,EAAAA,EAAAA,MAAM4b,GAAS,CAAE1b,SAAU,EAACC,EAAAA,EAAAA,KAAKkc,GAAc,CAAEnc,SAAUiK,EAAE,oBAAqBhK,EAAAA,EAAAA,KAAKgc,GAAa,CAAEjc,UAAUC,EAAAA,EAAAA,KAAKid,EAAAA,GAAgB,CAAC,MAAOjd,EAAAA,EAAAA,KAAK0b,GAAS,CAAEI,UAAW,MAAO/b,SAAUiK,EAAE,4BAA6BhK,EAAAA,EAAAA,KAAKoc,GAAc,CAAErc,SAAWqF,GAAU2H,GAA0ClN,EAAAA,EAAAA,MAAM+T,EAAAA,GAAO,CAAE7T,SAAU,CAACgN,EAAYhM,gBAAiB,QAAlFf,EAAAA,EAAAA,KAAKsc,GAAc,CAAC,SAA+Ezc,EAAAA,EAAAA,MAAM4b,GAAS,CAAE1b,SAAU,EAACC,EAAAA,EAAAA,KAAKkc,GAAc,CAAEnc,SAAUiK,EAAE,0BAA2BhK,EAAAA,EAAAA,KAAKgc,GAAa,CAAEjc,UAAUC,EAAAA,EAAAA,KAAKid,EAAAA,GAAgB,CAAC,MAAOjd,EAAAA,EAAAA,KAAK0b,GAAS,CAAEI,UAAW,MAAO/b,SAAUiK,EAAE,kCAAmChK,EAAAA,EAAAA,KAAKoc,GAAc,CAAErc,SAAWqF,GAAoCvF,EAAAA,EAAAA,MAAM+T,EAAAA,GAAO,CAAE7T,SAAU,CAAC,aAAgBqF,EAAMqF,cAAc8P,8BAAzFva,EAAAA,EAAAA,KAAKsc,GAAc,CAAC,SAA4Gzc,EAAAA,EAAAA,MAAM4b,GAAS,CAAE1b,SAAU,EAACC,EAAAA,EAAAA,KAAKkc,GAAc,CAAEnc,SAAUiK,EAAE,iBAAkBhK,EAAAA,EAAAA,KAAKoc,GAAc,CAAErc,SAAWqF,GAAoCpF,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUqF,EAAMkF,KAAKP,KAAIoT,GAAMA,EAAGzR,SAAQ0R,KAAK,eAAxFpd,EAAAA,EAAAA,KAAKsc,GAAc,CAAC,aAA6F,E,UCnI5jC,MAAMzG,IAAczH,EAAAA,EAAAA,IAAOwF,EAAAA,GAAPxF,CAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8LAIpBnD,GAAkB,WAAbA,EAAEkS,OACdlS,EAAEuD,MAAMiO,aACK,SAAbxR,EAAEkS,OACElS,EAAEuD,MAAMiH,UACRxK,EAAEuD,MAAMC,gBAKRxD,GAAkB,WAAbA,EAAEkS,QACA,SAAblS,EAAEkS,SACF9I,EAAAA,EAAAA,IAAG9F,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,kDACkBnD,EAAEuD,MAAM2D,eAI3BiL,GAAWA,KACLtd,EAAAA,EAAAA,KAAK,MAAO,CAAEqW,MAAO,KAAMC,OAAQ,KAAMiH,QAAS,YAAaC,KAAM,OAAQC,MAAO,6BAA8B1d,UAAUC,EAAAA,EAAAA,KAAK,OAAQ,CAAE0d,SAAU,UAAWC,SAAU,UAAWhN,EAAG,u1BAAw1B6M,KAAM,mBAErhCI,GAAWA,KACpB,MAAOC,EAAaC,IAAkB5N,EAAAA,EAAAA,UAAS,SACxCtD,IAAgBhG,EAAAA,EAAAA,OACjB,WAAE8F,GAAe5G,IACjB+G,GAAcC,EAAAA,EAAAA,MACdkJ,EAAatJ,KAA2B,OAAZE,QAAY,IAAZA,GAAAA,EAAcxH,aAA0BqC,IAAhBoF,EAE1D,IADkBH,KAA2B,OAAZE,QAAY,IAAZA,GAAAA,EAAcxH,OAE3C,OAAO,KAEX,GAAI4Q,EACA,OAAOhW,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,UAEpE,MAAMnR,EAAQwH,EAAaxH,MACrB2Y,EAA2B,SAAhBF,EAAyBzY,EAAM6E,KAAO7E,EAAMZ,GACvDwZ,EAA4B,SAAhBH,EAAyBzY,EAAMZ,GAAKY,EAAM6E,KAC5D,GAAI8T,EAAS9K,eAAeJ,SACxB,OAAO,KAEX,MAAMoL,EAAkBD,EAAU/K,eAAe1Q,IAAIwb,EAAS9K,gBACxDiL,EAAuBhU,EAAAA,EAAYiU,mBAAmB,CACxDzZ,OAAQuZ,EACR9T,MAAO6T,EAAU7T,QAEfkT,GAASH,EAAAA,EAAAA,IAAkBrQ,GACjC,OAAQhN,EAAAA,EAAAA,MAAMgW,GAAa,CAAEwH,OAAQA,EAAQjR,QAASA,IAAM0R,GAAejV,GAAY,SAANA,EAAe,KAAO,SAAU9I,SAAU,CAAC,QAAWge,EAAS5T,MAAMuB,OAAQ,iBAAsBwS,EAAqB3D,2BAAuC,WAAX8C,GAAkC,SAAXA,KAAsBrd,EAAAA,EAAAA,KAAKsd,GAAU,CAAC,KAAM,E,yBC5C5S,MAAM/F,GAAuBnJ,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iFACrBnD,GAAKA,EAAEuD,MAAMmD,oBACV1G,GAA6B,eAAxBA,EAAEuD,MAAMO,YAA+B9D,EAAEuD,MAAM8I,cAAgBrM,EAAEuD,MAAM+I,cAG3FC,GAActJ,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,gMACjBnD,GAAKA,EAAEuD,MAAMC,gBAcpBgJ,GAAYvJ,EAAAA,GAAO7L,IAAGsM,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,kEAKtB8P,GAAgBhQ,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,yMAa1BsJ,GAAcxJ,EAAAA,GAAO7L,IAAGyP,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,yKAWxBuJ,IAAwBzJ,EAAAA,EAAAA,IAAO6G,GAAP7G,CAAuB8D,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,+BAG/C+P,IAAejQ,EAAAA,EAAAA,IAAOkQ,EAAAA,GAAPlQ,CAAYgE,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,2BACpBnD,GAAKA,EAAEuD,MAAMoE,eAEbyL,GAAcA,KAAM,IAAAC,EAC7B,MAAM,EAAExU,IAAMsC,EAAAA,EAAAA,OACPhG,EAASmY,IAAclY,EAAAA,EAAAA,OACxB,WAAEmG,GAAe5G,KAChB8G,IAAgBhG,EAAAA,EAAAA,MACvB,OAAQ/G,EAAAA,EAAAA,MAAM0X,GAAsB,CAAExX,SAAU,EAACF,EAAAA,EAAAA,MAAM6X,GAAa,CAAE3X,SAAU,EAACC,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUiK,EAAE,mBAAoBhK,EAAAA,EAAAA,KAAKkX,GAAqB,CAAC,OAAQrX,EAAAA,EAAAA,MAAM8X,GAAW,CAAE5X,SAAU,EAACC,EAAAA,EAAAA,KAAK6X,GAAuB,CAAE3C,MAAO5O,EAAS6O,cAAesJ,KAAeze,EAAAA,EAAAA,KAAKoe,GAAe,CAAEre,SAAuB,OAAZ6M,QAAY,IAAZA,GAAAA,EAAcxH,QAASsH,EAAiG,OAAZE,QAAY,IAAZA,GAAAA,EAAcxH,OAASpF,EAAAA,EAAAA,KAAKse,EAAAA,GAAM,CAAEve,SAAU6M,EAAaxH,MAAMZ,GAAGmP,wBAA4B3T,EAAAA,EAAAA,KAAKqe,GAAc,CAAEte,SAAU,OAAtMC,EAAAA,EAAAA,KAAKoW,GAAAA,GAAU,CAAEC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,gBAA6J1W,EAAAA,EAAAA,MAAM+X,GAAa,CAAE7X,SAAU,EAACC,EAAAA,EAAAA,KAAK4d,GAAU,CAAC,IAAI5d,EAAAA,EAAAA,KAAK8V,GAAgB,CAAEpR,OAAoB,OAAZkI,QAAY,IAAZA,GAAmB,QAAP4R,EAAZ5R,EAAcxH,aAAK,IAAAoZ,OAAA,EAAnBA,EAAqBha,GAAGyO,eAAgB9I,MAAO7D,QAAgBtG,EAAAA,EAAAA,KAAK4c,GAAqB,CAAC,KAAM,E,UCxD/tB,MAAM8B,GAAkBtQ,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6EAK5BqQ,IAAmBvQ,EAAAA,EAAAA,IAAOoN,EAAAA,EAAPpN,CAAkBK,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,4VAQnBsQ,GAASA,EAAMlQ,MAAMmQ,2BAOjBD,GAASA,EAAMlQ,MAAMoQ,sCAE5BF,GAASA,EAAMlQ,MAAMqQ,cAI7BC,GAAerf,IAAmB,IAAlB,UAAEgO,GAAWhO,EACtC,MAAM+O,GAAQuQ,EAAAA,EAAAA,OACR,UAAEjJ,EAAW9U,YAAaC,GAAWF,KACpCie,EAAaC,IAAkBjP,EAAAA,EAAAA,UAAS,OACxCtD,IAAgBhG,EAAAA,EAAAA,OAChBR,EAAW+S,IAAgB9S,EAAAA,EAAAA,OAC3BC,EAASmY,IAAclY,EAAAA,EAAAA,OACvBG,EAAG0Y,IAAiB3Y,EAAAA,EAAAA,KACrB4Y,GAAWC,EAAAA,EAAAA,OACVC,EAAIC,IAAuBC,EAAAA,EAAAA,KAmBlC,OAAQ5f,EAAAA,EAAAA,MAAM6e,GAAiB,CAAE/Q,UAAWA,EAAW5N,SAAU,EAACC,EAAAA,EAAAA,KAAKkZ,GAAe,CAAEnZ,UAAUC,EAAAA,EAAAA,KAAK2e,GAAkB,CAAE,cAAe,cAAevS,QAdlIsT,KACnBvG,EAAa7S,GACbmY,EAAWrY,GACK,OAAZwG,QAAY,IAAZA,GAAAA,EAAcxH,OACdga,EAAcxS,EAAaxH,MAAMZ,GAAGyO,eACxC,EAS8KlT,UAAUC,EAAAA,EAAAA,KAAK2f,EAAAA,GAAU,CAAC,QAAU3f,EAAAA,EAAAA,KAAKue,GAAa,CAAC,GAA0B,YAAtB7P,EAAMO,cAA6BjP,EAAAA,EAAAA,KAAKuZ,GAAe,CAAC,IAAIvZ,EAAAA,EAAAA,KAAKmM,GAAY,CAAEC,QAlB1SzL,UACd,MAAMif,QAAeze,EAAOyL,GAC5BuS,EAAeS,EAAO,EAgBsTvT,kBAAmB2J,KAAekJ,KAAgBlf,EAAAA,EAAAA,KAAK6f,EAAAA,EAA4B,CAAEtQ,YAPxYuQ,IACzBX,EAAe,MACXW,IACAT,EAASU,EAAAA,GAASC,UAClBR,GAAoB,GACxB,EAEmcI,OAAQV,EAAae,kBAAkB,KAASjgB,EAAAA,EAAAA,KAAKgU,GAA4B,CAAC,KAAM,E,kCCjEniB,MAAMkM,GAAc9R,EAAAA,GAAOH,MAAKI,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kPAE1BsN,GAAAA,EACAC,EAAAA,IAOY1Q,GAAKA,EAAEuD,MAAMyR,kBAIzBC,GAAchS,EAAAA,GAAOqH,MAAKhH,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,6FAGd4R,IACU/U,GAAKA,EAAEuD,MAAMkI,aAG5ByJ,IAAiB5S,EAAAA,EAAAA,aAAW,CAACmR,EAAOlR,KAC7C,MAAM4S,GAAaC,EAAAA,EAAAA,SACbpZ,EAAKyX,EAAMzX,IAAMmZ,GACjB,UAAE3S,EAAS,SAAE5N,KAAaygB,GAAS5B,EACzC,OAAQ/e,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,EAACC,EAAAA,EAAAA,KAAKogB,GAAa,CAAEK,KAAM,QAAS/S,IAAKA,EAAKvG,GAAIA,KAAOqZ,KAASxgB,EAAAA,EAAAA,KAAKkgB,GAAa,CAAEvS,UAAWA,EAAW+S,QAASvZ,EAAIpH,SAAUA,MAAe,I,mBCpBpL,MAAM4gB,GAA2BhhB,IAAyB,IAAxB,OAAEwP,EAAM,QAAEC,GAASzP,EACxD,MAAM,EAAEqK,IAAMsC,EAAAA,EAAAA,MACd,OAAQtM,EAAAA,EAAAA,KAAKsP,EAAAA,SAAW,CAAEvP,UAAUC,EAAAA,EAAAA,KAAK+O,GAAAA,GAAc,CAAEI,OAAQA,EAAQI,YAAaH,EAAS8E,MAAOlK,EAAE,iBAAkBjK,SAAUA,KAAMC,EAAAA,EAAAA,KAAK4gB,GAAiC,CAAExR,QAASA,OAAgB,EAEzMyR,GAA+BzS,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,sJAQvCsF,EAAAA,IACSzI,GAAKA,EAAEuD,MAAMC,gBAGxBmS,GAA2B1S,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,0EAKrCyS,IAAuB3S,EAAAA,EAAAA,IAAOiS,GAAPjS,CAAsBS,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,2CAI7C0S,GAAmB5S,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,oFAO7B2S,GAAwB,CAAC,GAAK,EAAG,EAAG,GACpCC,GAAiBD,GAAsB,GACvCE,GAAmB/S,EAAAA,GAAO7L,IAAGyP,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,0GAM7BsS,GAAkCzP,IAAiB,IAAhB,QAAE/B,GAAS+B,EAChD,MAAM,EAAEnH,IAAMsC,EAAAA,EAAAA,OACN5K,KAAMqL,GAAgB1M,KACxB,OAAEkR,GpBpCwB6P,MAChC,MAAM9gB,GAAMC,EAAAA,EAAAA,KACN8gB,GAASC,EAAAA,EAAAA,kBACf,OAAOxf,EAAAA,EAAAA,cAAYnB,UACf,MAAMC,QAAgBN,EAAIO,QAAQC,IAAIL,EAAAA,EAAOC,oBACvCJ,EAAIO,QAAQoK,IAAIxK,EAAAA,EAAOC,aAAc,IAAKE,KAAY2gB,UACtDF,EAAOG,kBAAkB,CAAC/gB,EAAAA,EAAOC,cAAc,GACvD,EoB6BiB0gB,IACZK,EAAmBC,IAAwBxR,EAAAA,EAAAA,YAYlD,IAXAyR,EAAAA,EAAAA,kBAAgB,KACG,OAAX5U,QAAW,IAAXA,GAAAA,EAAahM,kBACTkgB,GAAsBW,SAAoB,OAAX7U,QAAW,IAAXA,OAAW,EAAXA,EAAahM,iBAC5C2gB,EAAgC,OAAX3U,QAAW,IAAXA,OAAW,EAAXA,EAAahM,kBAGlC2gB,EAAqBR,IACrB3P,EAAO,CAAExQ,gBAAiBmgB,MAElC,GACD,CAAY,OAAXnU,QAAW,IAAXA,OAAW,EAAXA,EAAahM,mBACZgM,EACD,OAAQ/M,EAAAA,EAAAA,KAAKmhB,GAAkB,CAAEphB,UAAUC,EAAAA,EAAAA,KAAKyR,EAAAA,GAAa,CAAC,KAMlE,OAAQ5R,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,EAACF,EAAAA,EAAAA,MAAMghB,GAA8B,CAAE9gB,SAAU,EAACC,EAAAA,EAAAA,KAAKwP,EAAAA,GAAQ,CAAEzP,SAAUiK,EAAE,oBAAqBhK,EAAAA,EAAAA,KAAK4T,EAAAA,GAAO,CAAE7T,SAAUiK,EAAE,mCAAqChK,EAAAA,EAAAA,KAAK8gB,GAA0B,CAAE/gB,SAAUkhB,GAAsBlX,KAAIpF,IAAU9E,EAAAA,EAAAA,MAAMkhB,GAAsB,CAAElV,KAAM,mBAAoBlH,MAAOA,EAAOkd,QAASJ,IAAsB9c,EAAOqJ,SAAUA,IAAM0T,EAAqB/c,GAAQ5E,SAAU,CAAC4E,EAAO,MAAQA,QAAa9E,EAAAA,EAAAA,MAAMmhB,GAAkB,CAAEjhB,SAAU,EAACC,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEE,WAAW,EAAMd,QAASgD,EAASrP,SAAUiK,EAAE,aAAchK,EAAAA,EAAAA,KAAKgN,EAAAA,GAAQ,CAAEO,SAAS,EAAMJ,SAAUsU,IAAsB1U,EAAYhM,gBAAiBqL,QAJlpB0V,KACXvQ,EAAO,CAAExQ,gBAAiB0gB,IACnB,OAAPrS,QAAO,IAAPA,GAAAA,GAAW,EAEmqBrP,SAAUiK,EAAE,eAAkB,ECpEvsB+X,GAAqBA,KAC9B,MAAO5S,EAAQ8E,IAAa/D,EAAAA,EAAAA,WAAS,GACrC,OAAQrQ,EAAAA,EAAAA,MAAMyP,EAAAA,SAAW,CAAEvP,SAAU,EAACC,EAAAA,EAAAA,KAAKgiB,EAAAA,EAAiC,CAAE5V,QAASA,IAAM6H,GAAU,GAAOlU,UAAUC,EAAAA,EAAAA,KAAKiiB,EAAAA,GAAa,CAAC,MAAOjiB,EAAAA,EAAAA,KAAK2gB,GAA0B,CAAExR,OAAQA,EAAQC,QAASA,IAAM6E,GAAU,OAAa,ECF7O,IAAIiO,IAAkB,EACf,MAAMC,GAAoBA,KAC7B,MACM,QAAEC,EAAO,WAAE1V,GAAe5G,KACzBuc,EAAYC,IAAiBpS,EAAAA,EAAAA,WAAS,GAmB7C,OAlBAE,EAAAA,EAAAA,YAAU,KAEN,GADA8R,IAAkB,GACdxV,EAGC,CACD4V,GAAc,GACd,MAAMC,EAAW3N,YAAW,KAEpBsN,KAGJE,IACAF,IAAkB,EAAI,GAhBT,MAkBjB,MAAO,IAAM/G,aAAaoH,EAC9B,CAbID,GAAc,EAalB,GACD,CAAC5V,KACI1M,EAAAA,EAAAA,KAAKgiB,EAAAA,EAAiC,CAAE5V,QAASA,IAAMgW,IAAWriB,SAAUsiB,GAAariB,EAAAA,EAAAA,KAAKwiB,EAAAA,GAAqB,CAAC,IAAKxiB,EAAAA,EAAAA,KAAKyiB,EAAAA,GAAa,CAAC,IAAK,E,gBCjB7J,MAIMC,GAA8BtU,EAAAA,GAAO7L,IAAG8L,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mCAGxCqU,GAAgBvU,EAAAA,GAAO7L,IAAGkM,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,8BAG1BsU,IAAcxU,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAcS,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,6MAW5BuU,GAAqBA,KACvB,MAAM,EAAE7Y,IAAMsC,EAAAA,EAAAA,MACd,OAAQzM,EAAAA,EAAAA,MAAM6iB,GAA6B,CAAE3iB,SAAU,EAACF,EAAAA,EAAAA,MAAM8iB,GAAe,CAAE5iB,SAAU,EAACC,EAAAA,EAAAA,KAAKmiB,GAAmB,CAAC,IAAIniB,EAAAA,EAAAA,KAAK+hB,GAAoB,CAAC,OAAQ/hB,EAAAA,EAAAA,KAAK4iB,GAAa,CAAE7iB,SAAUiK,EAAE,mBAAqB,EAE5M8Y,GAAkB1U,EAAAA,GAAO7L,IAAGyM,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,kFAI5ByU,GAAsBA,KAChB/iB,EAAAA,EAAAA,KAAK8iB,GAAiB,CAAE/iB,UAAUC,EAAAA,EAAAA,KAAKgf,GAAc,CAAC,KAElE,GAhC+BgE,KAC3B,MAAO7T,EAAQ8E,IAAawL,EAAAA,EAAAA,KAC5B,OAAQzf,EAAAA,EAAAA,KAAKijB,GAAAA,GAAe,CAAEC,gBAAgBzjB,EAAAA,GAAAA,GAAmB,+BAAgCM,UAAUC,EAAAA,EAAAA,KAAK+O,GAAAA,GAAc,CAAEI,OAAQA,EAAQI,YAAaA,IAAM0E,GAAU,GAAQC,OAAOlU,EAAAA,EAAAA,KAAK6iB,GAAoB,CAAC,GAAI9iB,SAAUA,KAAMC,EAAAA,EAAAA,KAAK+iB,GAAqB,CAAC,MAAQ,C,iTCQ1Q,SAASI,IACZ,MAAM,YAAE7hB,IAAgBC,EAAAA,EAAAA,MAChBG,KAAM0hB,GAAiBC,IAC/B,OAAO7iB,EAAAA,EAAAA,UAAS,CACZwG,SAAU,CAACC,EAAAA,GAASqc,cAAeF,GACnC7b,QAAS5G,UACL,IACI,MAAM4iB,QAAejiB,EAAYkiB,aAejC,OAdsBD,EACjBxZ,KAAII,IACL,MAAM5F,EAA4B,QAAlB4F,EAAM5F,QAAoB,MAAQ5B,EAAAA,QAAQC,MAAMuH,EAAM5F,SACtE,MAAO,CACH4C,IAAI8E,EAAAA,EAAAA,GAAYF,EAAAA,EAAgBC,IAAKzH,GACrCmH,OAAQvB,EAAMuB,OACdrE,SAAU8C,EAAM9C,SAChBwE,KAAM1B,EAAM0B,KACZK,MAAO/B,EAAM+B,MACbJ,WAAYC,EAAAA,EAAgBC,IAC5BzH,UACH,IAEAkf,QAAOtZ,KAAWiZ,GAAgB,IAAIM,MAAKC,GAAMA,EAAGxc,KAAOgD,EAAMhD,OACjDyB,OAAOwa,GAAgB,GAChD,CACA,MAAOra,GAEH,OADAC,QAAQpJ,MAAMmJ,GACP,EACX,GAEJ6a,UAAWR,GAEnB,CACA,MAAMS,GAAmBje,EAAAA,EAAAA,IAAK,IACvB,SAASkI,IACZ,OAAO3H,EAAAA,EAAAA,IAAQ0d,EACnB,CA0CO,MAAMpP,EAA8BA,KACvC,MAAOgP,GAAU3V,KACTpM,KAAMoO,GA3CX,WACH,MAAOgU,IAAoBC,EAAAA,EAAAA,OACnBriB,KAAMsiB,GAAcb,KACpBzhB,KAAMuiB,IAAYhO,EAAAA,EAAAA,IAAQiO,EAAAA,EAAelY,MAC3C,KAAEkH,IAASC,EAAAA,EAAAA,MACjB,OAAO3S,EAAAA,EAAAA,UAAS,CACZwG,SAAU,CAACC,EAAAA,GAASkd,iBAAkBH,EAAWF,EAAkBG,EAAS/Q,GAC5E3L,QAAS5G,UACL,IAAKmjB,IAAqBE,IAAcC,EACpC,MAAO,GAEX,MAAMG,EAAgBJ,EAAUja,KAAII,IAAS,IAAAka,EACzC,IAAIlb,EAAAA,EAAAA,IAAMgB,EAAM5F,SACZ,MAAO,CACHyM,YAAa,IAAI9G,EAAAA,EAAY,CACzBC,QACAT,UAAWoa,EAAiBQ,IAAIC,KAAKxN,UAEzCjD,YAAYxG,EAAAA,EAAAA,IAAgB,IAAIhL,EAAAA,EAAUwhB,EAAiBQ,IAAIC,KAAKxN,UAAUN,aAAawN,EAAQ9N,SAG3G,MAAMY,EAAU+M,EAAiBQ,IAAIE,QAAQC,SAASla,MAAKma,GAAK/hB,EAAAA,QAAQC,MAAM8hB,EAAEC,OAAOpgB,SAASqgB,OAAOza,EAAM5F,WAC7G,MAAO,CACHyM,YAAa,IAAI9G,EAAAA,EAAY,CACzBC,QACAT,WAAkB,OAAPqN,QAAO,IAAPA,OAAO,EAAPA,EAASA,UAAW,IAEnCjD,YAAYxG,EAAAA,EAAAA,IAAgB,IAAIhL,EAAAA,GAAiB,OAAPyU,QAAO,IAAPA,OAAO,EAAPA,EAASA,UAAW,GAAI5M,EAAM9C,UAAUoP,aAAa,IAAInU,EAAAA,GAAiB,OAAPyU,QAAO,IAAPA,GAAc,QAAPsN,EAAPtN,EAAS8N,aAAK,IAAAR,GAAQ,QAARA,EAAdA,EAAgBlO,cAAM,IAAAkO,OAAA,EAAtBA,EAAyBnR,KAAS,IAClJ,IAQL,OANAkR,EAAc7a,MAAK,CAACC,EAAGC,IACfD,EAAEsK,WAAWjB,UAAYpJ,EAAEqK,WAAWjB,SAC/BpJ,EAAEuH,YAAYtH,UAAUC,WAAWH,EAAEwH,YAAYtH,WAErDD,EAAEqK,WAAWnK,WAAWH,EAAEsK,cAE9BsQ,CAAa,EAExBR,UAAWE,KAAsBE,KAAeC,GAExD,CAGuCa,GACnC,OAAO5b,EAAAA,EAAAA,UAAQ,KACX,GAAK4G,EAGL,OAAOA,EAAiB2T,QAAO7S,IAAa,IAAAmU,EACxC,IAAKtB,EACD,OAAO,EAEX,IAAIuB,EAAAA,EAAAA,IAAqBvB,GACrB,OAAO9gB,EAAAA,QAAQC,MAAM6gB,GAAQmB,OAAOhU,EAAUI,YAAY7G,MAAM5F,SAEpE,MAAM0gB,EAAkBxB,EAAOyB,cAC/B,SAAItU,EAAUI,YAAY7G,MAAMuB,OAAOwZ,cAActD,SAASqD,IAC1B,QAD0CF,EAC1EnU,EAAUI,YAAY7G,MAAM0B,YAAI,IAAAkZ,GAAhCA,EAAkCG,cAActD,SAASqD,UAD7D,CAGA,GACF,GACH,CAACxB,EAAQ3T,GAAkB,EAErBsB,EAA2BA,KACpC,MAAOqS,GAAU3V,IACXqX,GAAYH,EAAAA,EAAAA,IAAqBvB,IACjC,KAAEvQ,IAASC,EAAAA,EAAAA,MACXpN,GAAMC,EAAAA,EAAAA,OACJtE,KAAM8iB,IAAYY,EAAAA,EAAAA,MAC1B,OAAO5kB,EAAAA,EAAAA,UAAS,CACZwG,SAAU,CAACC,EAAAA,GAASoe,gBAAiB5B,EAAQe,EAAStR,GACtD3L,QAAS5G,UACL,IAAKwkB,EACD,OAAO,KAEX,IAAI,IAAAG,EACA,MAAM/gB,EAAU5B,EAAAA,QAAQC,MAAM6gB,GACxBhY,QAAiB,IAAIL,EAAAA,IAAWrF,EAAIsF,UAAUC,cAAc,CAC9DC,UAAWhH,EAAQ1B,gBAEjB0iB,EAAW,CACbhhB,UACA2H,MAAOT,EAASE,SAASO,MACzBJ,WAAYC,EAAAA,EAAgBC,IAC5BH,KAAMJ,EAASE,SAASE,KACxBH,OAAQD,EAASE,SAASD,OAC1BrE,SAAUuE,OAAOH,EAASE,SAAStE,UACnCF,IAAI8E,EAAAA,EAAAA,GAAYF,EAAAA,EAAgBC,IAAKzH,IAEnCihB,EAAY,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASC,SAASla,MAAKma,GAAK/hB,EAAAA,QAAQC,MAAM8hB,EAAEC,OAAOpgB,SAASqgB,OAAOrgB,KAK9E,MAAO,CACHyM,YALgB,IAAI9G,EAAAA,EAAY,CAChCC,MAAOob,EACP7b,WAAa,OAAF8b,QAAE,IAAFA,OAAE,EAAFA,EAAIzO,UAAW,IAAIzU,EAAAA,EAAU,KAIxCwR,YAAYxG,EAAAA,EAAAA,IAAgB,IAAIhL,EAAAA,GAAY,OAAFkjB,QAAE,IAAFA,OAAE,EAAFA,EAAIzO,UAAW,GAAIwO,EAASle,UAAUoP,aAAa,IAAInU,EAAAA,GAAY,OAAFkjB,QAAE,IAAFA,GAAS,QAAPF,EAAFE,EAAIX,aAAK,IAAAS,GAAQ,QAARA,EAATA,EAAWnP,cAAM,IAAAmP,OAAA,EAAjBA,EAAoBpS,KAAS,IAEhJ,CACA,MAAOnK,GAEH,OADAC,QAAQpJ,MAAMmJ,GACP,IACX,GAEJ6a,QAASuB,KAAeX,GAC1B,EAEOnB,EAA0BA,KACnC,MAAM/iB,GAAMC,EAAAA,EAAAA,KACZ,OAAOC,EAAAA,EAAAA,UAAS,CAACC,EAAAA,EAAOglB,qBAAqB9kB,UACzC,MAAM+kB,QAAyBplB,EAAIO,QAAQC,IAAIL,EAAAA,EAAOglB,oBACtD,OAAwB,OAAhBC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3b,KAAIlB,IAAK,IAC5BA,EACHiD,WAAYjD,EAAEiD,WACdvH,SAASohB,EAAAA,EAAAA,IAA0B9c,EAAEtE,SACrC4C,IAAI8E,EAAAA,EAAAA,GAAYpD,EAAEiD,WAAYjD,EAAEtE,eAC7B,EAAE,GACX,EAEOiN,EAA4BA,KACrC,MAAMlR,GAAMC,EAAAA,EAAAA,KACN8gB,GAASC,EAAAA,EAAAA,kBACf,OAAOxf,EAAAA,EAAAA,cAAYnB,UACf,MAAM4P,QAAiBjQ,EAAIO,QAAQC,IAAIL,EAAAA,EAAOglB,qBAAwB,SAChEnlB,EAAIO,QAAQoK,IAAIxK,EAAAA,EAAOglB,mBAAoB,IAC1ClV,EACH,IAAKpG,EAAO5F,SAAS2R,EAAAA,EAAAA,GAAwB/L,EAAM5F,kBAEjD8c,EAAOG,kBAAkB,CAAC/gB,EAAAA,EAAOglB,oBAAoB,GAC7D,C,mDCvLN,MAAMG,GAAuBC,EAAAA,EAAAA,eAAc,MAErCC,EAAe,CACnBC,UAAU,EACVnmB,MAAO,MAET,MAAMqjB,UAAsB+C,EAAAA,UAC1BC,WAAAA,CAAYrH,GACVsH,MAAMtH,GACNuH,KAAKC,mBAAqBD,KAAKC,mBAAmBC,KAAKF,MACvDA,KAAKG,MAAQR,CACf,CACA,+BAAOS,CAAyB3mB,GAC9B,MAAO,CACLmmB,UAAU,EACVnmB,QAEJ,CACAwmB,kBAAAA,GACE,MAAM,MACJxmB,GACEumB,KAAKG,MACT,GAAc,OAAV1mB,EAAgB,CAElB,IADA,IAAI4mB,EAAqBC,EAChBC,EAAOC,UAAU7d,OAAQ8d,EAAO,IAAIC,MAAMH,GAAOI,EAAO,EAAGA,EAAOJ,EAAMI,IAC/EF,EAAKE,GAAQH,UAAUG,GAEsC,QAA9DN,GAAuBC,EAAcN,KAAKvH,OAAOmI,eAA6C,IAAxBP,GAA0CA,EAAoBQ,KAAKP,EAAa,CACrJG,OACAK,OAAQ,mBAEVd,KAAKe,SAASpB,EAChB,CACF,CACAqB,iBAAAA,CAAkBvnB,EAAO2kB,GACvB,IAAI6C,EAAqBC,EACuC,QAA/DD,GAAuBC,EAAelB,KAAKvH,OAAO0I,eAA6C,IAAxBF,GAA0CA,EAAoBJ,KAAKK,EAAcznB,EAAO2kB,EAClK,CACAgD,kBAAAA,CAAmBC,EAAWC,GAC5B,MAAM,SACJ1B,GACEI,KAAKG,OACH,UACJoB,GACEvB,KAAKvH,MAQP,IAAI+I,EAAsBC,EADxB7B,GAAgC,OAApB0B,EAAU7nB,OA8C9B,WACE,IAAI4J,EAAImd,UAAU7d,OAAS,QAAsBrB,IAAjBkf,UAAU,GAAmBA,UAAU,GAAK,GACxEld,EAAIkd,UAAU7d,OAAS,QAAsBrB,IAAjBkf,UAAU,GAAmBA,UAAU,GAAK,GAC5E,OAAOnd,EAAEV,SAAWW,EAAEX,QAAUU,EAAEka,MAAK,CAACmE,EAAMhX,KAAWiX,OAAOC,GAAGF,EAAMpe,EAAEoH,KAC7E,CAlDgDmX,CAAgBR,EAAUE,UAAWA,KAEd,QAAhEC,GAAwBC,EAAezB,KAAKvH,OAAOmI,eAA8C,IAAzBY,GAA2CA,EAAqBX,KAAKY,EAAc,CAC1JK,KAAMP,EACNQ,KAAMV,EAAUE,UAChBT,OAAQ,SAEVd,KAAKe,SAASpB,GAElB,CACAqC,MAAAA,GACE,MAAM,SACJpoB,EAAQ,eACRmjB,EAAc,kBACdkF,EAAiB,SACjBC,GACElC,KAAKvH,OACH,SACJmH,EAAQ,MACRnmB,GACEumB,KAAKG,MACT,IAAIgC,EAAgBvoB,EACpB,GAAIgmB,EAAU,CACZ,MAAMnH,EAAQ,CACZhf,QACAwmB,mBAAoBD,KAAKC,oBAE3B,GAA8B,oBAAnBlD,EACToF,EAAgBpF,EAAetE,QAC1B,GAAIwJ,EACTE,GAAgBC,EAAAA,EAAAA,eAAcH,EAAmBxJ,OAC5C,IAAiB,OAAbyJ,KAAqBG,EAAAA,EAAAA,gBAAeH,GAG7C,MAAMzoB,EAFN0oB,EAAgBD,CAGlB,CACF,CACA,OAAOE,EAAAA,EAAAA,eAAc3C,EAAqB6C,SAAU,CAClD9jB,MAAO,CACLohB,WACAnmB,QACAwmB,mBAAoBD,KAAKC,qBAE1BkC,EACL,E","sources":["../../../packages/uikit/dist/components/Error.js","../../../packages/uikit/dist/state/swap/useSwapOptions.js","../../../packages/uikit/dist/state/swap/useEncodeSwap.js","../../../packages/uikit/dist/state/swap/useCalculatedSwap.js","../../../packages/uikit/dist/components/swap/SwapButton.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapSearchInput.js","../../../packages/uikit/dist/components/swap/tokens-list/ConfirmImportNotification.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensList.js","../../../packages/uikit/dist/components/swap/tokens-list/SwapTokensListNotification.js","../../../packages/uikit/dist/components/swap/SwapTokenSelect.js","../../../packages/uikit/dist/components/swap/SwapAmountInput.js","../../../packages/uikit/dist/components/swap/SwapAmountFiat.js","../../../packages/uikit/dist/components/swap/SwapAmountBalance.js","../../../packages/uikit/dist/components/swap/SwapFromField.js","../../../packages/uikit/dist/components/swap/SwapProviders.js","../../../packages/uikit/dist/components/shared/Accordion.js","../../../packages/uikit/dist/components/swap/SwapTransactionInfo.js","../../../packages/uikit/dist/components/swap/SwapRate.js","../../../packages/uikit/dist/components/swap/SwapToField.js","../../../packages/uikit/dist/components/swap/SwapMainForm.js","../../../packages/uikit/dist/components/shared/RadioFlatInput.js","../../../packages/uikit/dist/components/swap/SwapSettingsNotification.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapSettingsButton.js","../../../packages/uikit/dist/components/swap/icon-buttons/SwapRefreshButton.js","../../../packages/uikit/dist/pages/swap/SwapMobileNotification.js","../../../packages/uikit/dist/state/swap/useSwapAssets.js","../../../packages/uikit/node_modules/react-error-boundary/dist/react-error-boundary.esm.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function fallbackRenderOver(location) {\n    return ({ error }) => {\n        return (_jsxs(\"div\", { role: \"alert\", children: [_jsx(\"p\", { children: location }), _jsx(\"p\", { children: \"Something went wrong:\" }), _jsx(\"pre\", { style: { color: 'red' }, children: error.message })] }));\n    };\n}\n","import { useAppSdk } from '../../hooks/appSdk';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nconst defaultSwapOptions = {\n    slippagePercent: 1,\n    maxPriceImpact: 0.3\n};\nexport const useSwapOptions = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_OPTIONS], async () => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        return {\n            slippagePercent: options?.slippagePercent || defaultSwapOptions.slippagePercent,\n            maxPriceImpact: options?.maxPriceImpact || defaultSwapOptions.maxPriceImpact\n        };\n    });\n};\nexport const useMutateSwapOptions = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (newOptions) => {\n        const options = await sdk.storage.get(AppKey.SWAP_OPTIONS);\n        await sdk.storage.set(AppKey.SWAP_OPTIONS, { ...options, ...newOptions });\n        await client.invalidateQueries([AppKey.SWAP_OPTIONS]);\n    });\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { assertUnreachable } from '@tonkeeper/core/dist/utils/types';\nimport { Address } from '@ton/core';\nimport { useSwapsConfig } from './useSwapsConfig';\nimport BigNumber from 'bignumber.js';\nimport { useSwapOptions } from './useSwapOptions';\nimport { useActiveConfig, useActiveTonWalletConfig, useActiveWallet } from '../wallet';\nimport { TON_CONNECT_MSG_VARIANTS_ID } from '@tonkeeper/core/dist/entries/tonConnect';\nimport { useBatteryBalance, useBatteryServiceConfig } from '../battery';\nexport function useEncodeSwap() {\n    const wallet = useActiveWallet();\n    const { swapService } = useSwapsConfig();\n    const config = useActiveConfig();\n    const { data: swapOpaitons } = useSwapOptions();\n    const referral = config.web_swaps_referral_address;\n    return useMutation(swap => {\n        if (!swapOpaitons) {\n            throw new Error('SwapOptions query was not resolved yet');\n        }\n        return swapService.encodeSwap({\n            swap: swapToProviderSwap(swap),\n            options: {\n                senderAddress: wallet.rawAddress,\n                slippage: new BigNumber(swapOpaitons.slippagePercent)\n                    .div(100)\n                    .decimalPlaces(5)\n                    .toString(),\n                ...(referral && { referralAddress: Address.parse(referral).toRawString() }),\n                ...(swap.excessAddress && { excessAddress: swap.excessAddress })\n            }\n        });\n    });\n}\nexport function useEncodeSwapToTonConnectParams() {\n    const { mutateAsync: encode } = useEncodeSwap();\n    const { data: batteryBalance } = useBatteryBalance();\n    const { excessAccount: batteryExcess } = useBatteryServiceConfig();\n    const { data: activeWalletConfig } = useActiveTonWalletConfig();\n    return useMutation(async (swap) => {\n        const resultsPromises = [encode(swap)];\n        const batterySwapsEnabled = activeWalletConfig\n            ? activeWalletConfig.batterySettings.enabledForSwaps\n            : true;\n        if (batteryBalance?.batteryUnitsBalance.gt(0) && batterySwapsEnabled) {\n            resultsPromises.push(encode({ ...swap, excessAddress: Address.parse(batteryExcess).toRawString() }));\n        }\n        const results = await Promise.all(resultsPromises);\n        const gasMessage = results[0];\n        const tonConnectPayload = {\n            valid_until: (Date.now() + 10 * 60 * 1000) / 1000,\n            messages: [\n                {\n                    address: Address.parse(gasMessage.to).toString({ bounceable: true }),\n                    amount: gasMessage.value,\n                    payload: gasMessage.body\n                }\n            ]\n        };\n        const batteryMessage = results[1];\n        if (batteryMessage) {\n            tonConnectPayload.messagesVariants = {\n                [TON_CONNECT_MSG_VARIANTS_ID.BATTERY]: [\n                    {\n                        address: Address.parse(batteryMessage.to).toString({\n                            bounceable: true\n                        }),\n                        amount: batteryMessage.value,\n                        payload: batteryMessage.body\n                    }\n                ]\n            };\n        }\n        return tonConnectPayload;\n    });\n}\nconst swapToProviderSwap = (swap) => {\n    if (swap.provider === 'stonfi') {\n        return {\n            provider: 'stonfi',\n            stonfiTrade: swap.trade.rawTrade\n        };\n    }\n    if (swap.provider === 'dedust') {\n        return {\n            provider: 'dedust',\n            dedustTrade: swap.trade.rawTrade\n        };\n    }\n    assertUnreachable(swap);\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { TON_ASSET } from '@tonkeeper/core/dist/entries/crypto/asset/constants';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { Address } from '@ton/core';\nimport { eqAddresses } from '@tonkeeper/core/dist/utils/address';\nimport { useMemo } from 'react';\nimport { useSwapFromAmount, useSwapFromAsset, useSelectedSwap, useSwapToAsset, useIsSwapFormNotCompleted } from './useSwapForm';\nimport { QueryKey } from '../../libs/queryKey';\nimport { unShiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { atom, useAtom } from '../../libs/atom';\nimport { useSwapsConfig } from './useSwapsConfig';\nimport { useActiveApi } from '../wallet';\nconst swapAssetsCache = new Map();\nexport const swapProviders = ['stonfi', 'dedust'];\nconst fetchedSwaps$ = atom([]);\nlet calculationId = 0;\nexport function useCalculatedSwap() {\n    const api = useActiveApi();\n    const [fetchedSwaps, setFetchedSwaps] = useAtom(fetchedSwaps$);\n    const [fromAsset] = useSwapFromAsset();\n    const [toAsset] = useSwapToAsset();\n    const [fromAmountRelative] = useSwapFromAmount();\n    const [_, setSelectedSwap] = useSelectedSwap();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const { swapService } = useSwapsConfig();\n    const query = useQuery({\n        queryKey: [\n            QueryKey.swapCalculate,\n            fromAsset.id,\n            toAsset.id,\n            fromAmountRelative?.shiftedBy(fromAsset.decimals).toFixed(0)\n        ],\n        queryFn: async ({ signal }) => {\n            setFetchedSwaps([]);\n            setSelectedSwap(undefined);\n            calculationId = calculationId + 1;\n            const currentCalulationId = calculationId;\n            if (isNotCompleted) {\n                return [];\n            }\n            addAssetToCache(fromAsset);\n            addAssetToCache(toAsset);\n            const fromAmountWei = unShiftedDecimals(fromAmountRelative, fromAsset.decimals);\n            let totalFetchedSwaps = [];\n            return new Promise((res, rej) => {\n                let fetchedProvidersNumber = 0;\n                swapProviders.forEach(async (provider) => {\n                    try {\n                        const swapPromise = swapService.calculateSwap(toTradeAssetId(fromAsset.address), toTradeAssetId(toAsset.address), fromAmountWei.toFixed(0), provider);\n                        if (signal) {\n                            signal.onabort = () => swapPromise.cancel();\n                        }\n                        const providerSwap = await swapPromise;\n                        const swap = await providerSwapToSwap(providerSwap, api, fromAsset, toAsset);\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        const providerBestSwap = sortSwaps(swap)[0];\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(providerBestSwap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, providerBestSwap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                    catch (e) {\n                        if (currentCalulationId !== calculationId) {\n                            rej(new Error('Calculation cancelled'));\n                            return;\n                        }\n                        console.error(e);\n                        const swap = {\n                            provider,\n                            trade: null\n                        };\n                        totalFetchedSwaps = sortSwaps(totalFetchedSwaps.concat(swap));\n                        if (totalFetchedSwaps[0].trade) {\n                            setSelectedSwap(totalFetchedSwaps[0]);\n                        }\n                        setFetchedSwaps(s => sortSwaps([...s, swap]));\n                        fetchedProvidersNumber = fetchedProvidersNumber + 1;\n                        if (fetchedProvidersNumber === swapProviders.length) {\n                            res(totalFetchedSwaps);\n                        }\n                    }\n                });\n            });\n        },\n        cacheTime: 0\n    });\n    return useMemo(() => ({\n        ...query,\n        fetchedSwaps\n    }), [query, fetchedSwaps]);\n}\nconst toTradeAssetId = (address) => {\n    return isTon(address) ? 'ton' : address.toRawString();\n};\nconst fromTradeAssetId = (address) => {\n    return address === 'ton' ? 'TON' : Address.parse(address);\n};\nconst sortSwaps = (swaps) => {\n    return swaps.slice().sort((a, b) => {\n        if (!a.trade) {\n            return 1;\n        }\n        if (!b.trade) {\n            return -1;\n        }\n        return b.trade.to.weiAmount.comparedTo(a.trade.to.weiAmount);\n    });\n};\nconst providerSwapToSwap = async (providerSwap, api, fromAsset, toAsset) => {\n    const assetsInfo = await getPathAssets(providerSwap.trades, api);\n    if (providerSwap.provider === 'dedust') {\n        if (providerSwap.trades.length === 0) {\n            return [\n                {\n                    provider: 'dedust',\n                    trade: null\n                }\n            ];\n        }\n        return providerSwap.trades.map(t => ({\n            provider: 'dedust',\n            trade: {\n                from: new AssetAmount({\n                    asset: fromAsset,\n                    weiAmount: t.fromAmount\n                }),\n                to: new AssetAmount({\n                    asset: toAsset,\n                    weiAmount: t.toAmount\n                }),\n                path: t.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address)))),\n                blockchainFee: new AssetAmount({\n                    asset: TON_ASSET,\n                    weiAmount: t.blockchainFee\n                }),\n                rawTrade: t.dedustRawTrade\n            }\n        }));\n    }\n    if (providerSwap.provider === 'stonfi') {\n        const trade = providerSwap.trades[0];\n        if (!trade) {\n            return [{ provider: 'stonfi', trade: null }];\n        }\n        return [\n            {\n                provider: 'stonfi',\n                trade: {\n                    from: new AssetAmount({\n                        asset: fromAsset,\n                        weiAmount: trade.fromAmount\n                    }),\n                    to: new AssetAmount({\n                        asset: toAsset,\n                        weiAmount: trade.toAmount\n                    }),\n                    blockchainFee: new AssetAmount({\n                        asset: TON_ASSET,\n                        weiAmount: trade.blockchainFee\n                    }),\n                    rawTrade: trade.stonfiRawTrade,\n                    path: trade.path.map(address => assetsInfo.find(a => eqAddresses(a.address, fromTradeAssetId(address))))\n                }\n            }\n        ];\n    }\n    return [];\n};\nconst getPathAssets = async (trades, api) => {\n    const addresses = trades.flatMap(trade => trade.path.map(fromTradeAssetId));\n    return Promise.all(addresses.map(address => getAsset(api, address)));\n};\nconst addAssetToCache = (asset) => {\n    if (!swapAssetsCache.has(asset.address)) {\n        swapAssetsCache.set(asset.address, Promise.resolve(asset));\n    }\n};\nconst getAsset = async (api, address) => {\n    if (isTon(address)) {\n        return TON_ASSET;\n    }\n    if (swapAssetsCache.has(address)) {\n        return swapAssetsCache.get(address);\n    }\n    const tonapi = new JettonsApi(api.tonApiV2);\n    const p = tonapi.getJettonInfo({ accountId: address.toRawString() }).then(response => ({\n        symbol: response.metadata.symbol,\n        decimals: Number(response.metadata.decimals),\n        name: response.metadata.name,\n        blockchain: BLOCKCHAIN_NAME.TON,\n        address,\n        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n        image: response.metadata.image\n    }));\n    swapAssetsCache.set(address, p);\n    return p;\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useTranslation } from '../../hooks/translation';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useIsSwapFormNotCompleted, useMaxSwapValue, useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { Button } from '../fields/Button';\nexport const SwapButton = ({ onClick, isEncodingProcess }) => {\n    const { t } = useTranslation();\n    const [swapAmount] = useSwapFromAmount();\n    const [fromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    const { isFetching, data: calculatedSwaps } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    if (isNotCompleted) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_enter_amount') }));\n    }\n    if (!isFetching && calculatedSwaps?.every(s => !s.trade)) {\n        return (_jsx(Button, { size: \"medium\", disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    if ((isFetching && !selectedSwap?.trade) || !max || priceImpact === undefined || !swapOptions) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, loading: true, children: t('continue') }));\n    }\n    if (!selectedSwap || !selectedSwap.trade) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_trade_is_not_available') }));\n    }\n    const isNotEnoughFunds = swapAmount?.gt(shiftedDecimals(max, fromAsset.decimals));\n    if (isNotEnoughFunds) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_not_enough_funds') }));\n    }\n    const priceImpactTooHigh = priceImpact?.gt(swapOptions.maxPriceImpact);\n    if (priceImpactTooHigh) {\n        return (_jsx(Button, { size: \"medium\", secondary: true, disabled: true, children: t('swap_price_impact_too_high') }));\n    }\n    return (_jsx(Button, { size: \"medium\", primary: true, onClick: onClick, loading: isEncodingProcess, children: t('continue') }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { useSwapTokensFilter } from '../../../state/swap/useSwapAssets';\nimport { useTranslation } from '../../../hooks/translation';\nimport { Input } from '../../fields/Input';\nexport const SwapSearchInput = forwardRef(({ className, isDisabled }, ref) => {\n    const { t } = useTranslation();\n    const [value, setValue] = useSwapTokensFilter();\n    return (_jsx(Input, { id: \"swap-search\", value: value, onChange: e => setValue(e), ref: ref, disabled: isDisabled, label: t('swap_search'), clearButton: true, className: className, size: \"small\" }));\n});\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { styled } from 'styled-components';\nimport { Body2, Label2 } from '../../Text';\nimport { Button } from '../../fields/Button';\nimport { useTranslation } from '../../../hooks/translation';\nconst ConfirmImportNotificationContent = styled.div `\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n`;\nconst DescriptionBlock = styled(Body2) `\n    display: block;\n    margin-top: 4px;\n    color: ${p => p.theme.textSecondary};\n`;\nconst ButtonsBlock = styled.div `\n    width: 100%;\n    display: flex;\n    gap: 8px;\n    margin-top: 24px;\n\n    > * {\n        flex: 1;\n    }\n`;\nconst NotificationStyled = styled(Notification) `\n    ${p => p.theme.displayType === 'full-width' && 'max-width: 400px;'}\n`;\nexport const ConfirmImportNotification = ({ isOpen, onClose, tokenSymbol }) => {\n    const { t } = useTranslation();\n    return (_jsx(_Fragment, { children: _jsx(NotificationStyled, { isOpen: isOpen, handleClose: onClose, children: () => (_jsxs(ConfirmImportNotificationContent, { children: [_jsx(Label2, { children: t('swap_import_token_title').replace('%token%', tokenSymbol) }), _jsx(DescriptionBlock, { children: t('swap_unknown_token_description') }), _jsxs(ButtonsBlock, { children: [_jsx(Button, { primary: true, onClick: () => onClose(false), children: t('cancel') }), _jsx(Button, { secondary: true, onClick: () => onClose(true), children: t('swap_import') })] })] })) }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Fragment, useEffect, useRef, useState } from 'react';\nimport { Body2, Body3, Label2 } from '../../Text';\nimport { useAddUserCustomSwapAsset, useSwapCustomTokenSearch } from '../../../state/swap/useSwapAssets';\nimport { formatFiatCurrency } from '../../../hooks/balance';\nimport { useAppContext } from '../../../hooks/appContext';\nimport { isTon } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { LinkOutIcon, SpinnerIcon } from '../../Icon';\nimport { ConfirmImportNotification } from './ConfirmImportNotification';\nimport { useAppSdk } from '../../../hooks/appSdk';\nimport { throttle } from '@tonkeeper/core/dist/utils/common';\nimport { useTranslation } from '../../../hooks/translation';\nconst SwapTokensListWrapper = styled.div `\n    overflow-y: auto;\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: calc(100% - 54px);\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst Divider = styled.div `\n    width: 100%;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nexport const SwapTokensList = ({ walletSwapAssets, onSelect }) => {\n    const [displayingAssets, setDisplayingAssets] = useState(walletSwapAssets.slice(0, 25));\n    const ref = useRef(null);\n    useEffect(() => {\n        setDisplayingAssets(walletSwapAssets.slice(0, 25));\n    }, [walletSwapAssets]);\n    const onScroll = () => {\n        if (!ref?.current) {\n            return;\n        }\n        const scrollHeightLeft = ref.current.scrollHeight - ref.current.clientHeight - ref.current.scrollTop;\n        if (scrollHeightLeft < 300) {\n            setDisplayingAssets(d => walletSwapAssets.slice(0, d.length + 25));\n        }\n    };\n    return (_jsx(SwapTokensListWrapper, { ref: ref, onScroll: throttle(onScroll, 100), children: walletSwapAssets.length ? (displayingAssets.map((swapAsset, index) => (_jsxs(Fragment, { children: [_jsx(TokenListItem, { onClick: () => onSelect(swapAsset.assetAmount.asset), swapAsset: swapAsset }), index !== walletSwapAssets.length - 1 && _jsx(Divider, {})] }, swapAsset.assetAmount.asset.id)))) : (_jsx(TokenNotFound, { onSelect: onSelect })) }));\n};\nconst TokensNotFoundContainer = styled.div `\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${p => p.theme.textSecondary};\n`;\nconst TokenNotFound = ({ onSelect }) => {\n    const { t } = useTranslation();\n    const { data: swapAsset, isFetching } = useSwapCustomTokenSearch();\n    const [isOpened, setIsOpened] = useState(false);\n    const { mutate } = useAddUserCustomSwapAsset();\n    if (isFetching) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    if (!swapAsset) {\n        return (_jsx(TokensNotFoundContainer, { children: _jsx(Body2, { children: t('swap_tokens_not_found') }) }));\n    }\n    const onClose = (confirmed) => {\n        setIsOpened(false);\n        if (confirmed) {\n            mutate(swapAsset.assetAmount.asset);\n            onSelect(swapAsset.assetAmount.asset);\n        }\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(ConfirmImportNotification, { isOpen: isOpened, onClose: onClose, tokenSymbol: swapAsset.assetAmount.asset.symbol }), _jsx(TokenListItem, { onClick: () => setIsOpened(true), swapAsset: swapAsset })] }));\n};\nconst TokenListItemWrapper = styled.button `\n    border: none;\n    width: 100%;\n    padding: 8px 1rem;\n    display: flex;\n    gap: 12px;\n    background-color: transparent;\n\n    transition: background-color 0.15s ease-in-out;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n        background-color: ${p => p.theme.backgroundContent};\n    }\n`;\nconst TokenImage = styled.img `\n    height: 40px;\n    width: 40px;\n    border-radius: 100%;\n`;\nconst TokenInfo = styled.div `\n    display: flex;\n    flex-direction: column;\n    width: calc(100% - 52px);\n`;\nconst TokenInfoLine = styled.div `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n\n    > *:first-child {\n        display: block;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    > ${Label2} {\n        color: ${p => p.theme.textPrimary};\n    }\n\n    > *:nth-child(3) {\n        margin-left: auto;\n    }\n`;\nconst LinkOutIconWrapper = styled.div `\n    cursor: pointer;\n    &:hover {\n        > svg {\n            color: ${p => p.theme.iconSecondary};\n        }\n    }\n`;\nconst TokenInfoSecondLine = styled(TokenInfoLine) `\n    color: ${p => p.theme.textSecondary};\n\n    > *:nth-child(2) {\n        margin-left: auto;\n    }\n`;\nconst BalanceLabel = styled(Label2) `\n    color: ${p => (p.isZero ? p.theme.textTertiary : p.theme.textPrimary)};\n`;\nconst TokenListItem = ({ swapAsset, onClick }) => {\n    const isZeroBalance = swapAsset.assetAmount.relativeAmount.isZero();\n    const { fiat } = useAppContext();\n    const sdk = useAppSdk();\n    const onOpenExplorer = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let explorerUrl;\n        if (isTon(swapAsset.assetAmount.asset.address)) {\n            explorerUrl = 'https://tonviewer.com/price';\n        }\n        else {\n            explorerUrl = `https://tonviewer.com/${swapAsset.assetAmount.asset.address.toString({\n                urlSafe: true\n            })}`;\n        }\n        sdk.openPage(explorerUrl);\n    };\n    return (_jsxs(TokenListItemWrapper, { onClick: onClick, children: [_jsx(TokenImage, { src: swapAsset.assetAmount.asset.image }), _jsxs(TokenInfo, { children: [_jsxs(TokenInfoLine, { children: [_jsx(Label2, { children: swapAsset.assetAmount.asset.symbol }), _jsx(LinkOutIconWrapper, { onClick: onOpenExplorer, children: _jsx(LinkOutIcon, {}) }), _jsx(BalanceLabel, { isZero: isZeroBalance, children: swapAsset.assetAmount.stringRelativeAmount })] }), _jsxs(TokenInfoSecondLine, { children: [_jsx(Body3, { children: swapAsset.assetAmount.asset.name }), !isZeroBalance && (_jsx(Body3, { children: formatFiatCurrency(fiat, swapAsset.fiatAmount) }))] })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Notification } from '../../Notification';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { atom, useAtom } from '../../../libs/atom';\nimport { css, styled } from 'styled-components';\nimport { SwapSearchInput } from './SwapSearchInput';\nimport { SwapTokensList } from './SwapTokensList';\nimport { useSwapTokensFilter, useWalletFilteredSwapAssets } from '../../../state/swap/useSwapAssets';\nimport { SpinnerIcon } from '../../Icon';\nimport { useTranslation } from '../../../hooks/translation';\nconst swapTokensListOpened$ = atom(undefined);\nexport const useOpenSwapTokensList = (onClose) => {\n    const [_, setIsOpen] = useAtom(swapTokensListOpened$);\n    return useCallback(() => setIsOpen(() => ({\n        onClose\n    })), [setIsOpen, onClose]);\n};\nconst NotificationStyled = styled(Notification) `\n    padding-bottom: 0;\n`;\nexport const SwapTokensListNotification = () => {\n    const { t } = useTranslation();\n    const [onSelect, setIsOpen] = useAtom(swapTokensListOpened$);\n    const onClose = (asset) => {\n        onSelect?.onClose(asset);\n        setIsOpen(undefined);\n    };\n    return (_jsx(_Fragment, { children: _jsx(NotificationStyled, { isOpen: !!onSelect, handleClose: () => onClose(undefined), title: t('swap_tokens'), footer: _jsx(\"div\", {}), children: () => _jsx(SwapTokensListContent, { onSelect: onClose }) }) }));\n};\nconst SwapSearchInputStyled = styled(SwapSearchInput) `\n    margin-bottom: 1rem;\n`;\nconst SwapTokensListContentWrapper = styled.div `\n    ${p => p.theme.displayType === 'full-width'\n    ? css `\n                  height: 580px;\n              `\n    : css `\n                  height: calc(var(--app-height) - 6rem);\n              `}\n`;\nconst Divider = styled.div `\n    width: calc(100% + 2rem);\n    margin: 0 -1rem;\n    height: 1px;\n    background-color: ${p => p.theme.separatorCommon};\n`;\nconst SpinnerContainer = styled.div `\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 300px;\n`;\nconst SwapTokensListContent = ({ onSelect }) => {\n    const walletSwapAssets = useWalletFilteredSwapAssets();\n    const inputRef = useRef();\n    const [_, setFilter] = useSwapTokensFilter();\n    useEffect(() => {\n        setTimeout(() => inputRef?.current?.focus(), 100);\n        return () => setFilter('');\n    }, []);\n    return (_jsxs(SwapTokensListContentWrapper, { children: [_jsx(SwapSearchInputStyled, { ref: inputRef, isDisabled: !walletSwapAssets }), _jsx(Divider, {}), walletSwapAssets ? (_jsx(SwapTokensList, { onSelect: onSelect, walletSwapAssets: walletSwapAssets })) : (_jsx(SpinnerContainer, { children: _jsx(SpinnerIcon, {}) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { styled } from 'styled-components';\nimport { Label2 } from '../Text';\nimport { SwitchIcon } from '../Icon';\nimport { useOpenSwapTokensList } from './tokens-list/SwapTokensListNotification';\nconst TokenSymbol = styled(Label2) `\n    display: block;\n    max-width: 80px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 0;\n    color: ${p => p.theme.textPrimary};\n\n    transition: color 0.15s ease-in-out;\n`;\nconst SelectContainer = styled.button `\n    border: none;\n    display: flex;\n    align-items: center;\n    background: none;\n    padding: 0;\n    cursor: pointer;\n    gap: 6px;\n    height: 36px;\n    width: fit-content;\n\n    &:hover {\n        > ${TokenSymbol} {\n            color: ${p => p.theme.textSecondary};\n        }\n    }\n`;\nconst TokenImage = styled.img `\n    height: 24px;\n    width: 24px;\n    border-radius: 100%;\n    flex-shrink: 0;\n`;\nexport const SwapTokenSelect = ({ token, onTokenChange, className }) => {\n    const onClose = useCallback((t) => t && onTokenChange(t), [onTokenChange]);\n    const openList = useOpenSwapTokensList(onClose);\n    return (_jsxs(SelectContainer, { className: className, onClick: openList, children: [_jsx(TokenImage, { src: token.image }), _jsx(TokenSymbol, { children: token.symbol }), _jsx(SwitchIcon, {})] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Num2Class } from '../Text';\nimport BigNumber from 'bignumber.js';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { replaceTypedDecimalSeparator, seeIfValueValid } from '../transfer/amountView/AmountViewUI';\nimport { formatNumberValue, formatSendValue, isNumeric, removeGroupSeparator } from '@tonkeeper/core/dist/utils/send';\nconst AmountInputWrapper = styled.input `\n    border: none;\n    background: none;\n    text-align: right;\n    outline: none;\n    width: 30px;\n    color: ${p => (p.isErrored ? p.theme.accentRed : p.theme.textPrimary)};\n    font-family: inherit;\n\n    ${Num2Class}\n\n    &::placeholder {\n        color: ${p => p.theme.textTertiary};\n    }\n`;\nexport const SwapAmountInput = ({ value, onChange, decimals, className, isErrored }) => {\n    const [input, setInput] = useState('');\n    const onInput = (newValue) => {\n        let inputValue = replaceTypedDecimalSeparator(newValue);\n        if (!inputValue) {\n            setInput('');\n            onChange(undefined);\n            return;\n        }\n        if (!seeIfValueValid(inputValue, decimals)) {\n            return;\n        }\n        if (isNumeric(inputValue)) {\n            if (!inputValue.endsWith(getDecimalSeparator())) {\n                const bnInput = new BigNumber(removeGroupSeparator(inputValue).replace(getDecimalSeparator(), '.'));\n                const prevBnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                if (!bnInput.eq(prevBnInput)) {\n                    onChange(bnInput);\n                    inputValue = formatSendValue(inputValue);\n                }\n            }\n            setInput(inputValue);\n        }\n    };\n    useEffect(() => {\n        if (!value) {\n            setInput('');\n        }\n        else {\n            if (!input.endsWith(getDecimalSeparator())) {\n                try {\n                    const bnInput = new BigNumber(removeGroupSeparator(input).replace(getDecimalSeparator(), '.'));\n                    if (!bnInput.eq(value)) {\n                        setInput(formatNumberValue(value));\n                    }\n                }\n                catch (_) {\n                    // ignore\n                }\n            }\n        }\n    }, [value]);\n    const decimalSeparator = getDecimalSeparator();\n    return (_jsx(AmountInputWrapper, { id: \"swap-amount\", value: input, onChange: e => onInput(e.target.value), placeholder: `0${decimalSeparator}00`, className: className, isErrored: isErrored, inputMode: \"decimal\" }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport BigNumber from 'bignumber.js';\nimport { useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { formatFiatCurrency } from '../../hooks/balance';\nimport { useAppContext } from '../../hooks/appContext';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n    cursor: default;\n`;\nexport const SwapAmountFiat = ({ amount, asset }) => {\n    const { fiat } = useAppContext();\n    const { data: rate, isLoading } = useRate(tonAssetAddressToString(asset.address));\n    if (!amount) {\n        return _jsx(\"div\", {});\n    }\n    if (!isLoading && !rate?.prices) {\n        return _jsx(\"div\", {});\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const inFiat = formatFiatCurrency(fiat, new BigNumber(rate.prices).multipliedBy(amount));\n    return _jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", inFiat] });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3, Label3 } from '../Text';\nimport { styled } from 'styled-components';\nimport { useFormatCoinValue } from '../../hooks/balance';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { useAssetWeiBalance } from '../../state/home';\nimport { BLOCKCHAIN_NAME } from '@tonkeeper/core/dist/entries/crypto';\nimport { useTranslation } from '../../hooks/translation';\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst BalanceContainer = styled.div `\n    display: flex;\n    height: 16px;\n    align-items: center;\n`;\nconst MaxButton = styled.button `\n    border: none;\n    background: none;\n    color: ${p => p.theme.accentBlue};\n    height: fit-content;\n    margin-left: 0.5rem;\n\n    > * {\n        display: block;\n        height: fit-content;\n    }\n\n    &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n`;\nexport const SwapFromAmountBalance = () => {\n    const [_, setSwapAmount] = useSwapFromAmount();\n    const [asset] = useSwapFromAsset();\n    const { data: balance } = useMaxSwapValue();\n    return (_jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals, onMax: () => setSwapAmount(shiftedDecimals(balance, asset.decimals)) }));\n};\nexport const SwapToAmountBalance = () => {\n    const [asset] = useSwapToAsset();\n    const balance = useAssetWeiBalance({ address: asset.address, blockchain: BLOCKCHAIN_NAME.TON });\n    return _jsx(SwapAmountContent, { balance: balance, decimals: asset.decimals });\n};\nconst SwapAmountContent = ({ balance, decimals = 0, onMax }) => {\n    const { t } = useTranslation();\n    const format = useFormatCoinValue();\n    return (_jsxs(BalanceContainer, { children: [_jsxs(Body3Styled, { children: [t('swap_balance'), \":\\u00A0\"] }), balance ? (_jsx(Body3Styled, { children: format(balance, decimals) })) : (_jsx(Skeleton, { width: \"80px\", height: \"12px\", margin: \"2px 0\" })), onMax && (_jsx(MaxButton, { disabled: !balance || balance.isZero(), onClick: onMax, children: _jsx(Label3, { children: t('swap_max') }) }))] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { SwapAmountInput } from './SwapAmountInput';\nimport { useMaxSwapValue, useSwapFromAmount, useSwapFromAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapFromAmountBalance } from './SwapAmountBalance';\nimport { debounce } from '@tonkeeper/core/dist/utils/common';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    position: relative;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > * {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst SwapAmountInputStyled = styled(SwapAmountInput) `\n    flex: 1;\n`;\nexport const SwapFromField = ({ children }) => {\n    const { t } = useTranslation();\n    const [swapAmount, setSwapAmount] = useSwapFromAmount();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const { data: max } = useMaxSwapValue();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_send') }), _jsx(SwapFromAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: fromAsset, onTokenChange: setFromAsset }), _jsx(SwapAmountInputStyled, { value: swapAmount, onChange: debounce(setSwapAmount), decimals: fromAsset.decimals, isErrored: !!max &&\n                            !!swapAmount &&\n                            swapAmount.gt(shiftedDecimals(max, fromAsset.decimals)) })] }), _jsx(FieldFooter, { children: _jsx(SwapAmountFiat, { amount: swapAmount, asset: fromAsset }) }), children] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { useFormatFiat, useRate } from '../../state/rates';\nimport { tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { useIsSwapFormNotCompleted, useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { Skeleton } from '../shared/Skeleton';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapProvidersContainer = styled.div `\n    padding: 0 12px 12px;\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    height: fit-content;\n`;\nconst Heading = styled.div `\n    color: ${p => p.theme.textSecondary};\n    padding: 10px 0;\n    display: flex;\n    align-items: center;\n    > * {\n        cursor: default;\n    }\n`;\nexport const SwapProviders = () => {\n    const { t } = useTranslation();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    if (isNotCompleted) {\n        return _jsx(\"div\", {});\n    }\n    return (_jsxs(SwapProvidersContainer, { children: [_jsx(Heading, { children: _jsx(Body3, { children: t('swap_provider') }) }), _jsx(ProviderCard, { provider: \"stonfi\" }), _jsx(ProviderCard, { provider: \"dedust\" })] }));\n};\nconst ProviderCardStyled = styled.div `\n    height: 56px;\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    border: 1px solid ${p => (p.isActive ? p.theme.accentBlue : p.theme.separatorCommon)};\n    padding: 0 12px;\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n    cursor: ${p => (p.isDisabled ? 'not-allowed' : 'pointer')};\n\n    transition: border-color 0.15s ease-in-out;\n\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;\nconst ProviderImage = styled.img `\n    width: 24px;\n    height: 24px;\n    border-radius: 6px;\n`;\nconst ProviderLabelContainer = styled.div `\n    padding: 10px 0;\n    display: flex;\n    flex-direction: column;\n`;\nconst ProviderPriceContainer = styled.div `\n    padding: 10px 0;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst Body3Styled = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst providersConfig = {\n    stonfi: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/stonfi.png',\n        label: 'STON.fi'\n    },\n    dedust: {\n        imageUrl: 'https://wallet.tonkeeper.com/img/swap/dedust.png',\n        label: 'DeDust'\n    }\n};\nconst ProviderCard = ({ provider }) => {\n    const { t } = useTranslation();\n    const [selectedSwap, setSelectedSwap] = useSelectedSwap();\n    const isActive = selectedSwap?.provider === provider;\n    const { fetchedSwaps, isFetching } = useCalculatedSwap();\n    const swap = fetchedSwaps.find(t => t.provider === provider);\n    const trade = swap?.trade;\n    const [toAsset] = useSwapToAsset();\n    const { data: rate, isFetching: isRateFetching } = useRate(tonAssetAddressToString(toAsset.address));\n    const isBest = fetchedSwaps.findIndex(t => t.provider === provider) === 0 && !!swap?.trade;\n    const providerConfig = providersConfig[provider];\n    const { fiatAmount } = useFormatFiat(rate, trade?.to.relativeAmount || new BigNumber(0));\n    return (_jsxs(ProviderCardStyled, { isDisabled: !swap || !trade, isActive: isActive, onClick: () => swap && trade && setSelectedSwap(swap), children: [_jsx(ProviderImage, { src: providerConfig.imageUrl }), _jsxs(ProviderLabelContainer, { children: [_jsx(Label2, { children: providerConfig.label }), isBest && _jsx(Body3Styled, { children: t('swap_best_price') })] }), _jsx(ProviderPriceContainer, { children: !isFetching && !trade ? (_jsx(Body3Styled, { children: t('swap_trade_is_not_available') })) : (_jsxs(_Fragment, { children: [trade ? (_jsx(Label2, { children: trade.to.stringAssetRelativeAmount })) : (_jsx(Skeleton, { width: \"60px\", height: \"14px\", margin: \"3px 0\" })), rate && trade ? (_jsxs(Body3Styled, { children: [\"\\u2248\\u00A0\", fiatAmount] })) : isRateFetching ? (_jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" })) : (_jsx(\"div\", {}))] })) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { css, styled } from 'styled-components';\nimport { useEffect, useRef, useState } from 'react';\nconst AccordionContent = styled.div `\n    transform: translateY(-100%);\n    visibility: hidden;\n    transition: transform ${p => p.$transitionMS}ms ease-in-out,\n        visibility ${p => p.$transitionMS}ms ease-in-out;\n`;\nconst AccordionAnimation = styled.div `\n    display: grid;\n    grid-template-rows: ${p => (p.$isOpened ? '1fr' : '0fr')};\n    overflow: ${p => (p.$animationCompleted && p.$isOpened ? 'visible' : 'hidden')};\n    transition: grid-template-rows ${p => p.$transitionMS}ms ease-in-out;\n\n    ${AccordionContent} {\n        ${p => p.$isOpened &&\n    css `\n                transform: translateY(0);\n                visibility: visible;\n            `}\n    }\n`;\nconst AccordionBody = styled.div `\n    min-height: 0;\n    min-width: 0;\n`;\nexport const Accordion = ({ children, isOpened, transitionMS = 200 }) => {\n    const [isAnimationCompleted, setIsAnimationCompleted] = useState(false);\n    const timeoutRef = useRef();\n    useEffect(() => {\n        clearTimeout(timeoutRef.current);\n        if (isOpened) {\n            setIsAnimationCompleted(false);\n        }\n        else {\n            timeoutRef.current = setTimeout(() => setIsAnimationCompleted(true), 200);\n        }\n    }, [isOpened]);\n    return (_jsx(AccordionAnimation, { \"$animationCompleted\": isAnimationCompleted, \"$isOpened\": isOpened, \"$transitionMS\": transitionMS, children: _jsx(AccordionBody, { children: _jsx(AccordionContent, { \"$transitionMS\": transitionMS, children: children }) }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { css, styled } from 'styled-components';\nimport { Body2Class, Body3 } from '../Text';\nimport { IconButton } from '../fields/IconButton';\nimport { useState } from 'react';\nimport { ChevronDownIcon, InfoCircleIcon } from '../Icon';\nimport { Skeleton } from '../shared/Skeleton';\nimport { priceImpactStatus, useIsSwapFormNotCompleted, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { getDecimalSeparator } from '@tonkeeper/core/dist/utils/formatting';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { useTranslation } from '../../hooks/translation';\nimport { BorderSmallResponsive } from '../shared/Styles';\nimport { Accordion } from '../shared/Accordion';\nconst TxInfoContainer = styled.div ``;\nconst TxInfoHeader = styled.div `\n    cursor: pointer;\n    padding: 4px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${p => p.theme.textSecondary};\n\n    svg {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst AccordionContent = styled.div `\n    transform: translateY(-100%);\n    visibility: hidden;\n    transition: transform 0.2s ease-in-out, visibility 0.2s ease-in-out;\n`;\nconst AccordionAnimation = styled.div `\n    display: grid;\n    grid-template-rows: ${p => (p.isOpened ? '1fr' : '0fr')};\n    overflow: ${p => (p.animationCompleted && p.isOpened ? 'visible' : 'hidden')};\n    transition: grid-template-rows 0.2s ease-in-out;\n\n    ${AccordionContent} {\n        ${p => p.isOpened &&\n    css `\n                transform: translateY(0);\n                visibility: visible;\n            `}\n    }\n`;\nconst AccordionBody = styled.div `\n    min-height: 0;\n`;\nconst AccordionButton = styled(IconButton) `\n    transform: ${p => (p.isOpened ? 'rotate(180deg)' : 'rotate(0deg)')};\n    transition: transform 0.2s ease-in-out;\n    border: none;\n`;\nconst InfoRow = styled.div `\n    position: relative;\n    display: flex;\n    padding: 4px 0;\n    gap: 6px;\n    align-items: center;\n\n    > * {\n        cursor: default;\n    }\n`;\nconst Tooltip = styled.div `\n    pointer-events: none;\n    transform: translate3d(0, -10px, 0);\n    z-index: 100;\n    left: 0;\n    right: 0;\n    transition: all 0.15s ease-in-out;\n    opacity: 0;\n    position: absolute;\n    background-color: ${p => p.theme.backgroundContentTint};\n    padding: 8px 12px;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n\n    ${p => p.placement === 'top'\n    ? css `\n                  transform: translate3d(0, 10px, 0);\n                  bottom: 30px;\n              `\n    : css `\n                  transform: translate3d(0, -10px, 0);\n                  top: 30px;\n              `}\n`;\nconst TooltipHost = styled.div `\n    cursor: pointer;\n\n    &:hover + ${Tooltip} {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n    }\n`;\nconst InfoRowLabel = styled(Body3) `\n    color: ${p => p.theme.textSecondary};\n`;\nconst InfoRowRight = styled(Body3) `\n    margin-left: auto;\n`;\nconst InfoSkeleton = () => {\n    return _jsx(Skeleton, { width: \"60px\", height: \"12px\", margin: \"2px 0\" });\n};\nconst PriceImpact = styled(Body3) `\n    color: ${p => p.status === 'low'\n    ? p.theme.accentGreen\n    : p.status === 'medium' || p.status === 'unknown'\n        ? p.theme.accentOrange\n        : p.theme.accentRed};\n`;\nexport const SwapTransactionInfo = () => {\n    const { t } = useTranslation();\n    const [isOpened, setIsOpened] = useState(false);\n    const { isFetching } = useCalculatedSwap();\n    const [swap] = useSelectedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const { data: swapOptions } = useSwapOptions();\n    const isNotCompleted = useIsSwapFormNotCompleted();\n    const trade = swap?.trade;\n    if ((!isFetching && !trade) || isNotCompleted) {\n        return null;\n    }\n    const onToggleAccordion = () => {\n        setIsOpened(v => !v);\n    };\n    return (_jsxs(TxInfoContainer, { children: [_jsxs(TxInfoHeader, { onClick: onToggleAccordion, children: [_jsx(Body3, { children: t('swap_tx_info') }), _jsx(AccordionButton, { transparent: true, isOpened: isOpened, children: _jsx(ChevronDownIcon, {}) })] }), _jsxs(Accordion, { isOpened: isOpened, children: [_jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_price_impact') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_price_impact_tooltip') }), _jsx(InfoRowRight, { children: priceImpact === undefined || !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(PriceImpact, { status: priceImpactStatus(priceImpact), children: priceImpact ? (_jsxs(_Fragment, { children: [\"\\u2248\\u00A0\", `${priceImpact\n                                                .multipliedBy(100)\n                                                .decimalPlaces(2)\n                                                .toString()\n                                                .replace('.', getDecimalSeparator())\n                                                .replace('-', '+')}%`] })) : (t('swap_unknown_price_impact')) })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_minimum_received') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_minimum_received_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", new AssetAmount({\n                                            weiAmount: trade.to.weiAmount\n                                                .multipliedBy(100 - swapOptions.slippagePercent)\n                                                .div(100),\n                                            asset: trade.to.asset\n                                        }).stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_slippage') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_slippage_tooltip') }), _jsx(InfoRowRight, { children: !trade || !swapOptions ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [swapOptions.slippagePercent, \"%\"] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_blockchain_fee') }), _jsx(TooltipHost, { children: _jsx(InfoCircleIcon, {}) }), _jsx(Tooltip, { placement: \"top\", children: t('swap_blockchain_fee_tooltip') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsxs(Body3, { children: [\"\\u2248\\u00A0\", trade.blockchainFee.stringAssetRelativeAmount] })) })] }), _jsxs(InfoRow, { children: [_jsx(InfoRowLabel, { children: t('swap_route') }), _jsx(InfoRowRight, { children: !trade ? (_jsx(InfoSkeleton, {})) : (_jsx(Body3, { children: trade.path.map(ta => ta.symbol).join(' → ') })) })] })] })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Skeleton } from '../shared/Skeleton';\nimport { Body3 } from '../Text';\nimport { css, styled } from 'styled-components';\nimport { priceImpactStatus, useSelectedSwap, useSwapPriceImpact } from '../../state/swap/useSwapForm';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nconst Body3Styled = styled(Body3) `\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    color: ${p => p.impact === 'medium'\n    ? p.theme.accentOrange\n    : p.impact === 'high'\n        ? p.theme.accentRed\n        : p.theme.textSecondary};\n    cursor: pointer;\n    transition: color 0.15s ease-in-out;\n\n    &:hover {\n        ${p => p.impact !== 'medium' &&\n    p.impact !== 'high' &&\n    css `\n                color: ${p.theme.textPrimary};\n            `};\n    }\n`;\nconst WarnIcon = () => {\n    return (_jsx(\"svg\", { width: \"12\", height: \"12\", viewBox: \"0 0 12 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.18144 1.65C4.63413 0.86592 4.86047 0.473881 5.11842 0.286474C5.64415 -0.0954914 6.35604 -0.0954914 6.88177 0.286474C7.13971 0.473881 7.36606 0.86592 7.81875 1.65L11.1096 7.35L11.1097 7.35001C11.5623 8.13408 11.7887 8.52612 11.822 8.84321C11.8899 9.48949 11.534 10.106 10.9403 10.3703C10.6491 10.5 10.1964 10.5 9.29099 10.5H2.7092C1.80382 10.5 1.35113 10.5 1.05986 10.3703C0.466204 10.106 0.110258 9.48949 0.178184 8.84321C0.211512 8.52612 0.437856 8.13408 0.890544 7.35L4.18144 1.65ZM5.1001 8.1C5.1001 7.60294 5.50304 7.2 6.0001 7.2C6.49715 7.2 6.9001 7.60294 6.9001 8.1C6.9001 8.59706 6.49715 9 6.0001 9C5.50304 9 5.1001 8.59706 5.1001 8.1ZM6.00002 2C5.53718 2 5.16822 2.38674 5.18997 2.84906L5.31946 5.60072C5.33656 5.96414 5.63619 6.25 6.00002 6.25C6.36384 6.25 6.66347 5.96414 6.68057 5.60072L6.81006 2.84906C6.83182 2.38674 6.46285 2 6.00002 2Z\", fill: \"currentColor\" }) }));\n};\nexport const SwapRate = () => {\n    const [measureUnit, setMeasureUnit] = useState('from');\n    const [selectedSwap] = useSelectedSwap();\n    const { isFetching } = useCalculatedSwap();\n    const priceImpact = useSwapPriceImpact();\n    const isLoading = (isFetching && !selectedSwap?.trade) || priceImpact === undefined;\n    const isHidden = !isFetching && !selectedSwap?.trade;\n    if (isHidden) {\n        return null;\n    }\n    if (isLoading) {\n        return _jsx(Skeleton, { width: \"100px\", height: \"12px\", margin: \"2px 0\" });\n    }\n    const trade = selectedSwap.trade;\n    const leftPart = measureUnit === 'from' ? trade.from : trade.to;\n    const rightPart = measureUnit === 'from' ? trade.to : trade.from;\n    if (leftPart.relativeAmount.isZero()) {\n        return null;\n    }\n    const rightPartAmount = rightPart.relativeAmount.div(leftPart.relativeAmount);\n    const rightPartAssetAmount = AssetAmount.fromRelativeAmount({\n        amount: rightPartAmount,\n        asset: rightPart.asset\n    });\n    const impact = priceImpactStatus(priceImpact);\n    return (_jsxs(Body3Styled, { impact: impact, onClick: () => setMeasureUnit(s => (s === 'from' ? 'to' : 'from')), children: [\"1\\u00A0\", leftPart.asset.symbol, \"\\u00A0\\u2248\\u00A0\", rightPartAssetAmount.stringAssetRelativeAmount, (impact === 'medium' || impact === 'high') && _jsx(WarnIcon, {})] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { Body3, Num2 } from '../Text';\nimport { SwapTokenSelect } from './SwapTokenSelect';\nimport { useSelectedSwap, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { SwapAmountFiat } from './SwapAmountFiat';\nimport { SwapToAmountBalance } from './SwapAmountBalance';\nimport { useCalculatedSwap } from '../../state/swap/useCalculatedSwap';\nimport { Skeleton } from '../shared/Skeleton';\nimport { SwapTransactionInfo } from './SwapTransactionInfo';\nimport { SwapRate } from './SwapRate';\nimport { useTranslation } from '../../hooks/translation';\nconst FiledContainerStyled = styled.div `\n    background: ${p => p.theme.backgroundContent};\n    border-radius: ${p => p.theme.displayType === 'full-width' ? p.theme.corner2xSmall : p.theme.cornerSmall};\n    padding: 6px 12px;\n`;\nconst FiledHeader = styled.div `\n    color: ${p => p.theme.textSecondary};\n    gap: 8px;\n    display: flex;\n\n    padding: 4px 0;\n\n    > *:first-child {\n        margin-right: auto;\n    }\n\n    > * {\n        cursor: default;\n    }\n`;\nconst FieldBody = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 6px 0;\n`;\nconst ToAmountField = styled.div `\n    margin-left: auto;\n    overflow: auto;\n\n    cursor: default;\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n`;\nconst FieldFooter = styled.div `\n    display: flex;\n    gap: 8px;\n    padding: 4px 0;\n    align-items: center;\n    height: 16px;\n\n    > :last-child {\n        margin-left: auto;\n    }\n`;\nconst SwapTokenSelectStyled = styled(SwapTokenSelect) `\n    flex-shrink: 0;\n`;\nconst Num2Tertiary = styled(Num2) `\n    color: ${p => p.theme.textTertiary};\n`;\nexport const SwapToField = () => {\n    const { t } = useTranslation();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const { isFetching } = useCalculatedSwap();\n    const [selectedSwap] = useSelectedSwap();\n    return (_jsxs(FiledContainerStyled, { children: [_jsxs(FiledHeader, { children: [_jsx(Body3, { children: t('swap_receive') }), _jsx(SwapToAmountBalance, {})] }), _jsxs(FieldBody, { children: [_jsx(SwapTokenSelectStyled, { token: toAsset, onTokenChange: setToAsset }), _jsx(ToAmountField, { children: !selectedSwap?.trade && isFetching ? (_jsx(Skeleton, { width: \"100px\", height: \"28px\", margin: \"4px 0\" })) : selectedSwap?.trade ? (_jsx(Num2, { children: selectedSwap.trade.to.stringRelativeAmount })) : (_jsx(Num2Tertiary, { children: \"0\" })) })] }), _jsxs(FieldFooter, { children: [_jsx(SwapRate, {}), _jsx(SwapAmountFiat, { amount: selectedSwap?.trade?.to.relativeAmount, asset: toAsset })] }), _jsx(SwapTransactionInfo, {})] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { styled, useTheme } from 'styled-components';\nimport { AppRoute } from '../../libs/routes';\nimport { useEncodeSwapToTonConnectParams } from '../../state/swap/useEncodeSwap';\nimport { useSelectedSwap, useSwapFromAmount, useSwapFromAsset, useSwapToAsset } from '../../state/swap/useSwapForm';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { SwapIcon } from '../Icon';\nimport { TonTransactionNotification } from '../connect/TonTransactionNotification';\nimport { IconButton } from '../fields/IconButton';\nimport { SwapButton } from './SwapButton';\nimport { SwapFromField } from './SwapFromField';\nimport { SwapProviders } from './SwapProviders';\nimport { SwapToField } from './SwapToField';\nimport { SwapTokensListNotification } from './tokens-list/SwapTokensListNotification';\nconst MainFormWrapper = styled.div `\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n`;\nconst ChangeIconStyled = styled(IconButton) `\n    height: 32px;\n    width: 32px;\n    position: absolute;\n    right: calc(50% - 16px);\n    bottom: -20px;\n    border: none;\n\n    background-color: ${props => props.theme.buttonTertiaryBackground};\n\n    > svg {\n        transition: color 0.15s ease-in-out;\n    }\n\n    &:hover {\n        background-color: ${props => props.theme.buttonTertiaryBackgroundHighlighted};\n        > svg {\n            color: ${props => props.theme.iconPrimary};\n        }\n    }\n`;\nexport const SwapMainForm = ({ className }) => {\n    const theme = useTheme();\n    const { isLoading, mutateAsync: encode } = useEncodeSwapToTonConnectParams();\n    const [modalParams, setModalParams] = useState(null);\n    const [selectedSwap] = useSelectedSwap();\n    const [fromAsset, setFromAsset] = useSwapFromAsset();\n    const [toAsset, setToAsset] = useSwapToAsset();\n    const [_, setFromAmount] = useSwapFromAmount();\n    const navigate = useNavigate();\n    const [__, setIsMobileSwapOpen] = useSwapMobileNotification();\n    const onConfirm = async () => {\n        const params = await encode(selectedSwap);\n        setModalParams(params);\n    };\n    const onChangeFields = () => {\n        setFromAsset(toAsset);\n        setToAsset(fromAsset);\n        if (selectedSwap?.trade) {\n            setFromAmount(selectedSwap.trade.to.relativeAmount);\n        }\n    };\n    const onCloseConfirmModal = (boc) => {\n        setModalParams(null);\n        if (boc) {\n            navigate(AppRoute.activity);\n            setIsMobileSwapOpen(false);\n        }\n    };\n    return (_jsxs(MainFormWrapper, { className: className, children: [_jsx(SwapFromField, { children: _jsx(ChangeIconStyled, { \"data-testid\": \"change-swap\", onClick: onChangeFields, children: _jsx(SwapIcon, {}) }) }), _jsx(SwapToField, {}), theme.displayType === 'compact' && _jsx(SwapProviders, {}), _jsx(SwapButton, { onClick: onConfirm, isEncodingProcess: isLoading || !!modalParams }), _jsx(TonTransactionNotification, { handleClose: onCloseConfirmModal, params: modalParams, waitInvalidation: true }), _jsx(SwapTokensListNotification, {})] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from 'styled-components';\nimport { BorderSmallResponsive } from './Styles';\nimport { Body2Class } from '../Text';\nimport { forwardRef, useId } from 'react';\nconst LabelStyled = styled.label `\n    cursor: pointer;\n    ${BorderSmallResponsive};\n    ${Body2Class};\n    box-sizing: border-box;\n\n    text-align: center;\n\n    padding: 8px 12px;\n\n    background: ${p => p.theme.fieldBackground};\n    border: 1px solid transparent;\n    transition: border-color 0.15s ease-in-out;\n`;\nconst InputStyled = styled.input `\n    display: none;\n\n    &:checked + ${LabelStyled} {\n        border: 1px solid ${p => p.theme.accentBlue};\n    }\n`;\nexport const RadioFlatInput = forwardRef((props, ref) => {\n    const fallbackId = useId();\n    const id = props.id || fallbackId;\n    const { className, children, ...rest } = props;\n    return (_jsxs(_Fragment, { children: [_jsx(InputStyled, { type: \"radio\", ref: ref, id: id, ...rest }), _jsx(LabelStyled, { className: className, htmlFor: id, children: children })] }));\n});\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useState } from 'react';\nimport { styled } from 'styled-components';\nimport { Body3, Label2 } from '../Text';\nimport { RadioFlatInput } from '../shared/RadioFlatInput';\nimport { Notification } from '../Notification';\nimport { Button } from '../fields/Button';\nimport { useMutateSwapOptions, useSwapOptions } from '../../state/swap/useSwapOptions';\nimport { SpinnerIcon } from '../Icon';\nimport { useTranslation } from '../../hooks/translation';\nexport const SwapSettingsNotification = ({ isOpen, onClose }) => {\n    const { t } = useTranslation();\n    return (_jsx(_Fragment, { children: _jsx(Notification, { isOpen: isOpen, handleClose: onClose, title: t('swap_settings'), children: () => _jsx(SwapSettingsNotificationContent, { onClose: onClose }) }) }));\n};\nconst SlippageToleranceTextWrapper = styled.div `\n    padding-bottom: 10px;\n\n    > * {\n        display: block;\n        cursor: default;\n    }\n\n    > ${Body3} {\n        color: ${p => p.theme.textSecondary};\n    }\n`;\nconst SlippageOptionsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    margin-bottom: 2rem;\n`;\nconst RadioFlatInputStyled = styled(RadioFlatInput) `\n    height: 36px;\n    flex: 1;\n`;\nconst ButtonsContainer = styled.div `\n    display: flex;\n    gap: 0.5rem;\n    > * {\n        flex: 1;\n    }\n`;\nconst slippagePercentValues = [0.5, 1, 3, 5];\nconst defaultPercent = slippagePercentValues[1];\nconst LoadingContainer = styled.div `\n    height: 200px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst SwapSettingsNotificationContent = ({ onClose }) => {\n    const { t } = useTranslation();\n    const { data: swapOptions } = useSwapOptions();\n    const { mutate } = useMutateSwapOptions();\n    const [checkedRadioValue, setCheckedRadioValue] = useState();\n    useLayoutEffect(() => {\n        if (swapOptions?.slippagePercent) {\n            if (slippagePercentValues.includes(swapOptions?.slippagePercent)) {\n                setCheckedRadioValue(swapOptions?.slippagePercent);\n            }\n            else {\n                setCheckedRadioValue(defaultPercent);\n                mutate({ slippagePercent: defaultPercent });\n            }\n        }\n    }, [swapOptions?.slippagePercent]);\n    if (!swapOptions) {\n        return (_jsx(LoadingContainer, { children: _jsx(SpinnerIcon, {}) }));\n    }\n    const onSave = () => {\n        mutate({ slippagePercent: checkedRadioValue });\n        onClose?.();\n    };\n    return (_jsxs(_Fragment, { children: [_jsxs(SlippageToleranceTextWrapper, { children: [_jsx(Label2, { children: t('swap_slippage') }), _jsx(Body3, { children: t('swap_slippage_description') })] }), _jsx(SlippageOptionsContainer, { children: slippagePercentValues.map(value => (_jsxs(RadioFlatInputStyled, { name: \"slippage-percent\", value: value, checked: checkedRadioValue === value, onChange: () => setCheckedRadioValue(value), children: [value, \"%\"] }, value))) }), _jsxs(ButtonsContainer, { children: [_jsx(Button, { secondary: true, onClick: onClose, children: t('cancel') }), _jsx(Button, { primary: true, disabled: checkedRadioValue === swapOptions.slippagePercent, onClick: onSave, children: t('save') })] })] }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { SlidersIcon } from '../../Icon';\nimport { SwapSettingsNotification } from '../SwapSettingsNotification';\nimport { useState } from 'react';\nexport const SwapSettingsButton = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (_jsxs(_Fragment, { children: [_jsx(IconButtonTransparentBackground, { onClick: () => setIsOpen(true), children: _jsx(SlidersIcon, {}) }), _jsx(SwapSettingsNotification, { isOpen: isOpen, onClose: () => setIsOpen(false) })] }));\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconButtonTransparentBackground } from '../../fields/IconButton';\nimport { RefreshIcon, RefreshIconAnimated } from '../../Icon';\nimport { useCalculatedSwap } from '../../../state/swap/useCalculatedSwap';\nimport { useEffect, useState } from 'react';\nlet isRefetchCalled = false;\nexport const SwapRefreshButton = () => {\n    const REFETCH_INTERVAL = 15000;\n    const { refetch, isFetching } = useCalculatedSwap();\n    const [isCounting, setIsCounting] = useState(false);\n    useEffect(() => {\n        isRefetchCalled = false;\n        if (isFetching) {\n            setIsCounting(false);\n        }\n        else {\n            setIsCounting(true);\n            const timeutId = setTimeout(() => {\n                // prevent double refresh from possible two component instances\n                if (isRefetchCalled) {\n                    return;\n                }\n                refetch();\n                isRefetchCalled = true;\n            }, REFETCH_INTERVAL);\n            return () => clearTimeout(timeutId);\n        }\n    }, [isFetching]);\n    return (_jsx(IconButtonTransparentBackground, { onClick: () => refetch(), children: isCounting ? _jsx(RefreshIconAnimated, {}) : _jsx(RefreshIcon, {}) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Label2 } from '../../components/Text';\nimport { SwapMainForm } from '../../components/swap/SwapMainForm';\nimport { styled } from 'styled-components';\nimport { Notification } from '../../components/Notification';\nimport { useSwapMobileNotification } from '../../state/swap/useSwapMobileNotification';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { fallbackRenderOver } from '../../components/Error';\nimport { SwapSettingsButton } from '../../components/swap/icon-buttons/SwapSettingsButton';\nimport { SwapRefreshButton } from '../../components/swap/icon-buttons/SwapRefreshButton';\nimport { useTranslation } from '../../hooks/translation';\nconst SwapMobileNotification = () => {\n    const [isOpen, setIsOpen] = useSwapMobileNotification();\n    return (_jsx(ErrorBoundary, { fallbackRender: fallbackRenderOver('Failed to display Swap page'), children: _jsx(Notification, { isOpen: isOpen, handleClose: () => setIsOpen(false), title: _jsx(NotificationHeader, {}), children: () => _jsx(NotificationContent, {}) }) }));\n};\nconst NotificationHeaderContainer = styled.div `\n    position: relative;\n`;\nconst HeaderButtons = styled.div `\n    display: flex;\n`;\nconst HeaderLabel = styled(Label2) `\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 5rem;\n    right: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: transparent;\n`;\nconst NotificationHeader = () => {\n    const { t } = useTranslation();\n    return (_jsxs(NotificationHeaderContainer, { children: [_jsxs(HeaderButtons, { children: [_jsx(SwapRefreshButton, {}), _jsx(SwapSettingsButton, {})] }), _jsx(HeaderLabel, { children: t('wallet_swap') })] }));\n};\nconst SwapPageWrapper = styled.div `\n    overflow-y: auto;\n    min-height: calc(var(--app-height) - 7rem);\n`;\nconst NotificationContent = () => {\n    return (_jsx(SwapPageWrapper, { children: _jsx(SwapMainForm, {}) }));\n};\nexport default SwapMobileNotification;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Address } from '@ton/core';\nimport { AppKey } from '@tonkeeper/core/dist/Keys';\nimport { BLOCKCHAIN_NAME, CryptoCurrency } from '@tonkeeper/core/dist/entries/crypto';\nimport { AssetAmount } from '@tonkeeper/core/dist/entries/crypto/asset/asset-amount';\nimport { packAssetId } from '@tonkeeper/core/dist/entries/crypto/asset/basic-asset';\nimport { isTon, tonAssetAddressFromString, tonAssetAddressToString } from '@tonkeeper/core/dist/entries/crypto/asset/ton-asset';\nimport { JettonsApi } from '@tonkeeper/core/dist/tonApiV2';\nimport { shiftedDecimals } from '@tonkeeper/core/dist/utils/balance';\nimport { seeIfValidTonAddress } from '@tonkeeper/core/dist/utils/common';\nimport BigNumber from 'bignumber.js';\nimport { useMemo } from 'react';\nimport { useAppContext } from '../../hooks/appContext';\nimport { useAppSdk } from '../../hooks/appSdk';\nimport { atom, useAtom } from '../../libs/atom';\nimport { QueryKey } from '../../libs/queryKey';\nimport { useAssets } from '../home';\nimport { useJettonList } from '../jetton';\nimport { useRate } from '../rates';\nimport { useSwapsConfig } from './useSwapsConfig';\nimport { useActiveApi } from '../wallet';\nexport function useAllSwapAssets() {\n    const { swapService } = useSwapsConfig();\n    const { data: customAssets } = useUserCustomSwapAssets();\n    return useQuery({\n        queryKey: [QueryKey.swapAllAssets, customAssets],\n        queryFn: async () => {\n            try {\n                const assets = await swapService.swapAssets();\n                const fetchedAssets = assets\n                    .map(asset => {\n                    const address = asset.address === 'ton' ? 'TON' : Address.parse(asset.address);\n                    return {\n                        id: packAssetId(BLOCKCHAIN_NAME.TON, address),\n                        symbol: asset.symbol,\n                        decimals: asset.decimals,\n                        name: asset.name,\n                        image: asset.image,\n                        blockchain: BLOCKCHAIN_NAME.TON,\n                        address\n                    };\n                })\n                    .filter(asset => !(customAssets || []).some(ca => ca.id === asset.id));\n                return fetchedAssets.concat(customAssets || []);\n            }\n            catch (e) {\n                console.error(e);\n                return [];\n            }\n        },\n        enabled: !!customAssets\n    });\n}\nconst swapTokensFilter = atom('');\nexport function useSwapTokensFilter() {\n    return useAtom(swapTokensFilter);\n}\nexport function useWalletSwapAssets() {\n    const [walletAssetsData] = useAssets();\n    const { data: allAssets } = useAllSwapAssets();\n    const { data: tonRate } = useRate(CryptoCurrency.TON);\n    const { fiat } = useAppContext();\n    return useQuery({\n        queryKey: [QueryKey.swapWalletAssets, allAssets, walletAssetsData, tonRate, fiat],\n        queryFn: async () => {\n            if (!walletAssetsData || !allAssets || !tonRate) {\n                return [];\n            }\n            const assetsAmounts = allAssets.map(asset => {\n                if (isTon(asset.address)) {\n                    return {\n                        assetAmount: new AssetAmount({\n                            asset,\n                            weiAmount: walletAssetsData.ton.info.balance\n                        }),\n                        fiatAmount: shiftedDecimals(new BigNumber(walletAssetsData.ton.info.balance)).multipliedBy(tonRate.prices)\n                    };\n                }\n                const balance = walletAssetsData.ton.jettons.balances.find(j => Address.parse(j.jetton.address).equals(asset.address));\n                return {\n                    assetAmount: new AssetAmount({\n                        asset,\n                        weiAmount: balance?.balance || 0\n                    }),\n                    fiatAmount: shiftedDecimals(new BigNumber(balance?.balance || 0), asset.decimals).multipliedBy(new BigNumber(balance?.price?.prices?.[fiat] || 0))\n                };\n            });\n            assetsAmounts.sort((a, b) => {\n                if (a.fiatAmount.isZero() && b.fiatAmount.isZero()) {\n                    return b.assetAmount.weiAmount.comparedTo(a.assetAmount.weiAmount);\n                }\n                return b.fiatAmount.comparedTo(a.fiatAmount);\n            });\n            return assetsAmounts;\n        },\n        enabled: !!walletAssetsData && !!allAssets && !!tonRate\n    });\n}\nexport const useWalletFilteredSwapAssets = () => {\n    const [filter] = useSwapTokensFilter();\n    const { data: walletSwapAssets } = useWalletSwapAssets();\n    return useMemo(() => {\n        if (!walletSwapAssets) {\n            return undefined;\n        }\n        return walletSwapAssets.filter(swapAsset => {\n            if (!filter) {\n                return true;\n            }\n            if (seeIfValidTonAddress(filter)) {\n                return Address.parse(filter).equals(swapAsset.assetAmount.asset.address);\n            }\n            const upperCaseFilter = filter.toUpperCase();\n            if (swapAsset.assetAmount.asset.symbol.toUpperCase().includes(upperCaseFilter) ||\n                swapAsset.assetAmount.asset.name?.toUpperCase().includes(upperCaseFilter)) {\n                return true;\n            }\n        });\n    }, [filter, walletSwapAssets]);\n};\nexport const useSwapCustomTokenSearch = () => {\n    const [filter] = useSwapTokensFilter();\n    const isAddress = seeIfValidTonAddress(filter);\n    const { fiat } = useAppContext();\n    const api = useActiveApi();\n    const { data: jettons } = useJettonList();\n    return useQuery({\n        queryKey: [QueryKey.swapCustomToken, filter, jettons, fiat],\n        queryFn: async () => {\n            if (!isAddress) {\n                return null;\n            }\n            try {\n                const address = Address.parse(filter);\n                const response = await new JettonsApi(api.tonApiV2).getJettonInfo({\n                    accountId: address.toRawString()\n                });\n                const tonAsset = {\n                    address,\n                    image: response.metadata.image,\n                    blockchain: BLOCKCHAIN_NAME.TON,\n                    name: response.metadata.name,\n                    symbol: response.metadata.symbol,\n                    decimals: Number(response.metadata.decimals),\n                    id: packAssetId(BLOCKCHAIN_NAME.TON, address)\n                };\n                const jb = jettons?.balances.find(j => Address.parse(j.jetton.address).equals(address));\n                const assetAmount = new AssetAmount({\n                    asset: tonAsset,\n                    weiAmount: jb?.balance || new BigNumber(0)\n                });\n                return {\n                    assetAmount,\n                    fiatAmount: shiftedDecimals(new BigNumber(jb?.balance || 0), tonAsset.decimals).multipliedBy(new BigNumber(jb?.price?.prices?.[fiat] || 0))\n                };\n            }\n            catch (e) {\n                console.error(e);\n                return null;\n            }\n        },\n        enabled: isAddress && !!jettons\n    });\n};\nexport const useUserCustomSwapAssets = () => {\n    const sdk = useAppSdk();\n    return useQuery([AppKey.SWAP_CUSTOM_ASSETS], async () => {\n        const assetsSerialized = await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS);\n        return (assetsSerialized?.map(s => ({\n            ...s,\n            blockchain: s.blockchain,\n            address: tonAssetAddressFromString(s.address),\n            id: packAssetId(s.blockchain, s.address)\n        })) || []);\n    });\n};\nexport const useAddUserCustomSwapAsset = () => {\n    const sdk = useAppSdk();\n    const client = useQueryClient();\n    return useMutation(async (asset) => {\n        const current = (await sdk.storage.get(AppKey.SWAP_CUSTOM_ASSETS)) || [];\n        await sdk.storage.set(AppKey.SWAP_CUSTOM_ASSETS, [\n            ...current,\n            { ...asset, address: tonAssetAddressToString(asset.address) }\n        ]);\n        await client.invalidateQueries([AppKey.SWAP_CUSTOM_ASSETS]);\n    });\n};\n","'use client';\nimport { createContext, Component, createElement, isValidElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback === null || isValidElement(fallback)) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n"],"names":["fallbackRenderOver","location","_ref","error","_jsxs","role","children","_jsx","style","color","message","defaultSwapOptions","useSwapOptions","sdk","useAppSdk","useQuery","AppKey","SWAP_OPTIONS","async","options","storage","get","slippagePercent","maxPriceImpact","useEncodeSwapToTonConnectParams","mutateAsync","encode","wallet","useActiveWallet","swapService","useSwapsConfig","config","useActiveConfig","data","swapOpaitons","referral","web_swaps_referral_address","useMutation","swap","Error","encodeSwap","swapToProviderSwap","senderAddress","rawAddress","slippage","BigNumber","div","decimalPlaces","toString","referralAddress","Address","parse","toRawString","excessAddress","useEncodeSwap","batteryBalance","useBatteryBalance","excessAccount","batteryExcess","useBatteryServiceConfig","activeWalletConfig","useActiveTonWalletConfig","resultsPromises","batterySwapsEnabled","batterySettings","enabledForSwaps","batteryUnitsBalance","gt","push","results","Promise","all","gasMessage","tonConnectPayload","valid_until","Date","now","messages","address","to","bounceable","amount","value","payload","body","batteryMessage","messagesVariants","TON_CONNECT_MSG_VARIANTS_ID","BATTERY","provider","stonfiTrade","trade","rawTrade","dedustTrade","assertUnreachable","swapAssetsCache","Map","swapProviders","fetchedSwaps$","atom","calculationId","useCalculatedSwap","api","useActiveApi","fetchedSwaps","setFetchedSwaps","useAtom","fromAsset","useSwapFromAsset","toAsset","useSwapToAsset","fromAmountRelative","useSwapFromAmount","_","setSelectedSwap","useSelectedSwap","isNotCompleted","useIsSwapFormNotCompleted","query","queryKey","QueryKey","swapCalculate","id","shiftedBy","decimals","toFixed","queryFn","signal","undefined","currentCalulationId","addAssetToCache","fromAmountWei","unShiftedDecimals","totalFetchedSwaps","res","rej","fetchedProvidersNumber","forEach","swapPromise","calculateSwap","toTradeAssetId","onabort","cancel","providerSwap","providerSwapToSwap","providerBestSwap","sortSwaps","concat","s","length","e","console","cacheTime","useMemo","isTon","fromTradeAssetId","swaps","slice","sort","a","b","weiAmount","comparedTo","assetsInfo","getPathAssets","trades","map","t","from","AssetAmount","asset","fromAmount","toAmount","path","find","eqAddresses","blockchainFee","TON_ASSET","dedustRawTrade","stonfiRawTrade","addresses","flatMap","getAsset","has","set","resolve","p","JettonsApi","tonApiV2","getJettonInfo","accountId","then","response","symbol","metadata","Number","name","blockchain","BLOCKCHAIN_NAME","TON","packAssetId","image","SwapButton","onClick","isEncodingProcess","useTranslation","swapAmount","max","useMaxSwapValue","isFetching","calculatedSwaps","selectedSwap","priceImpact","useSwapPriceImpact","swapOptions","Button","size","secondary","disabled","every","loading","shiftedDecimals","primary","SwapSearchInput","forwardRef","ref","className","isDisabled","setValue","useSwapTokensFilter","Input","onChange","label","clearButton","ConfirmImportNotificationContent","styled","_templateObject","_taggedTemplateLiteral","DescriptionBlock","Body2","_templateObject2","theme","textSecondary","ButtonsBlock","_templateObject3","NotificationStyled","Notification","_templateObject4","displayType","ConfirmImportNotification","isOpen","onClose","tokenSymbol","_Fragment","handleClose","Label2","replace","SwapTokensListWrapper","Divider","separatorCommon","SwapTokensList","walletSwapAssets","onSelect","displayingAssets","setDisplayingAssets","useState","useRef","useEffect","onScroll","throttle","current","scrollHeight","clientHeight","scrollTop","d","swapAsset","index","Fragment","TokenListItem","assetAmount","TokenNotFound","TokensNotFoundContainer","_ref2","useSwapCustomTokenSearch","isOpened","setIsOpened","mutate","useAddUserCustomSwapAsset","SpinnerIcon","confirmed","TokenListItemWrapper","button","backgroundContent","TokenImage","img","_templateObject5","TokenInfo","_templateObject6","TokenInfoLine","_templateObject7","textPrimary","LinkOutIconWrapper","_templateObject8","iconSecondary","TokenInfoSecondLine","_templateObject9","BalanceLabel","_templateObject10","isZero","textTertiary","_ref3","isZeroBalance","relativeAmount","fiat","useAppContext","src","explorerUrl","preventDefault","stopPropagation","urlSafe","openPage","LinkOutIcon","stringRelativeAmount","Body3","formatFiatCurrency","fiatAmount","swapTokensListOpened$","SwapTokensListNotification","setIsOpen","title","footer","SwapTokensListContent","SwapSearchInputStyled","SwapTokensListContentWrapper","css","SpinnerContainer","useWalletFilteredSwapAssets","inputRef","setFilter","setTimeout","_inputRef$current","focus","TokenSymbol","SelectContainer","SwapTokenSelect","token","onTokenChange","openList","useCallback","useOpenSwapTokensList","SwitchIcon","AmountInputWrapper","input","isErrored","accentRed","Num2Class","Body3Styled","SwapAmountFiat","rate","isLoading","useRate","tonAssetAddressToString","prices","Skeleton","width","height","margin","inFiat","multipliedBy","BalanceContainer","MaxButton","accentBlue","SwapFromAmountBalance","setSwapAmount","balance","SwapAmountContent","onMax","SwapToAmountBalance","useAssetWeiBalance","format","useFormatCoinValue","Label3","FiledContainerStyled","corner2xSmall","cornerSmall","FiledHeader","FieldBody","FieldFooter","SwapTokenSelectStyled","SwapAmountInputStyled","setInput","endsWith","getDecimalSeparator","removeGroupSeparator","eq","formatNumberValue","decimalSeparator","newValue","inputValue","replaceTypedDecimalSeparator","seeIfValueValid","isNumeric","bnInput","prevBnInput","formatSendValue","onInput","target","placeholder","inputMode","SwapFromField","setFromAsset","debounce","SwapProvidersContainer","Heading","SwapProviders","ProviderCard","ProviderCardStyled","isActive","ProviderImage","ProviderLabelContainer","ProviderPriceContainer","providersConfig","stonfi","imageUrl","dedust","isRateFetching","isBest","findIndex","providerConfig","useFormatFiat","stringAssetRelativeAmount","AccordionContent","$transitionMS","AccordionAnimation","$isOpened","$animationCompleted","AccordionBody","Accordion","transitionMS","isAnimationCompleted","setIsAnimationCompleted","timeoutRef","clearTimeout","TxInfoContainer","TxInfoHeader","AccordionButton","animationCompleted","IconButton","InfoRow","Tooltip","backgroundContentTint","BorderSmallResponsive","Body2Class","placement","_templateObject11","TooltipHost","_templateObject12","InfoRowLabel","_templateObject13","InfoRowRight","_templateObject14","InfoSkeleton","PriceImpact","_templateObject15","status","accentGreen","accentOrange","SwapTransactionInfo","onToggleAccordion","v","transparent","ChevronDownIcon","InfoCircleIcon","priceImpactStatus","ta","join","impact","WarnIcon","viewBox","fill","xmlns","fillRule","clipRule","SwapRate","measureUnit","setMeasureUnit","leftPart","rightPart","rightPartAmount","rightPartAssetAmount","fromRelativeAmount","ToAmountField","Num2Tertiary","Num2","SwapToField","_selectedSwap$trade","setToAsset","MainFormWrapper","ChangeIconStyled","props","buttonTertiaryBackground","buttonTertiaryBackgroundHighlighted","iconPrimary","SwapMainForm","useTheme","modalParams","setModalParams","setFromAmount","navigate","useNavigate","__","setIsMobileSwapOpen","useSwapMobileNotification","onChangeFields","SwapIcon","params","TonTransactionNotification","boc","AppRoute","activity","waitInvalidation","LabelStyled","fieldBackground","InputStyled","RadioFlatInput","fallbackId","useId","rest","type","htmlFor","SwapSettingsNotification","SwapSettingsNotificationContent","SlippageToleranceTextWrapper","SlippageOptionsContainer","RadioFlatInputStyled","ButtonsContainer","slippagePercentValues","defaultPercent","LoadingContainer","useMutateSwapOptions","client","useQueryClient","newOptions","invalidateQueries","checkedRadioValue","setCheckedRadioValue","useLayoutEffect","includes","checked","onSave","SwapSettingsButton","IconButtonTransparentBackground","SlidersIcon","isRefetchCalled","SwapRefreshButton","refetch","isCounting","setIsCounting","timeutId","RefreshIconAnimated","RefreshIcon","NotificationHeaderContainer","HeaderButtons","HeaderLabel","NotificationHeader","SwapPageWrapper","NotificationContent","SwapMobileNotification","ErrorBoundary","fallbackRender","useAllSwapAssets","customAssets","useUserCustomSwapAssets","swapAllAssets","assets","swapAssets","filter","some","ca","enabled","swapTokensFilter","walletAssetsData","useAssets","allAssets","tonRate","CryptoCurrency","swapWalletAssets","assetsAmounts","_balance$price","ton","info","jettons","balances","j","jetton","equals","price","useWalletSwapAssets","_swapAsset$assetAmoun","seeIfValidTonAddress","upperCaseFilter","toUpperCase","isAddress","useJettonList","swapCustomToken","_jb$price","tonAsset","jb","SWAP_CUSTOM_ASSETS","assetsSerialized","tonAssetAddressFromString","ErrorBoundaryContext","createContext","initialState","didCatch","Component","constructor","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","Array","_key","onReset","call","reason","setState","componentDidCatch","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","item","Object","is","hasArrayChanged","next","prev","render","FallbackComponent","fallback","childToRender","createElement","isValidElement","Provider"],"sourceRoot":""}